<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Zen Cart Documentation – Code</title>
    <link>/zendocs_test1/dev/code/</link>
    <description>Recent content in Code on Zen Cart Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    
	  <atom:link href="/zendocs_test1/dev/code/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Dev: Admin Request Sanitization</title>
      <link>/zendocs_test1/dev/code/admin_sanitization/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/zendocs_test1/dev/code/admin_sanitization/</guid>
      <description>
        
        
        &lt;h2 id=&#34;introduction--history&#34;&gt;Introduction / History&lt;/h2&gt;
&lt;p&gt;In versions prior to v1.5.5 very little was done in terms of globally sanitizing $_GET or $_POST parameters in Admin code.&lt;/p&gt;
&lt;p&gt;There was some global sanitization done for $_GET parameters 
e.g. 
&lt;a href=&#34;https://github.com/zencart/zencart/blob/v154/admin/includes/init_includes/init_sanitize.php&#34;&gt;https://github.com/zencart/zencart/blob/v154/admin/includes/init_includes/init_sanitize.php&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;and sanitization may have been done on an individual parameter basis, mainly at output, 
using htmlspecialchars (&lt;code&gt;zen_output_string_protected()&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;The reason no stronger sanitization was used was twofold:&lt;/p&gt;
&lt;p&gt;Firstly, Admin allows lots of parameters to include what would be considered dangerous characters. 
e.g. product descriptions allow script tags, and other inputs allow some html, such as product names.&lt;/p&gt;
&lt;p&gt;Secondly, core code uses CSRF tokens for all form interactions. The use of these tokens mitigates against any exploiting of XSS, unless an admin session is already available.&lt;/p&gt;
&lt;p&gt;However, reports such as &lt;a href=&#34;https://www.trustwave.com/Resources/SpiderLabs-Blog/TWSL2016-006--Multiple-XSS-Vulnerabilities-reported-for-Zen-Cart/&#34;&gt;https://www.trustwave.com/Resources/SpiderLabs-Blog/TWSL2016-006--Multiple-XSS-Vulnerabilities-reported-for-Zen-Cart/&lt;/a&gt;
made us reconsider. 
While we still contend that the CSRF protection mitigates these supposed XSS vulnerabilities, there are three good reasons to address them with extra sanitization:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;We cannot guarantee that 3rd party plugins use the CSRF token system (although there are some safeties to ensure they do).&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;PCI scanning software may detect XSS vulnerabilities, even given the CSRF mitigation. (particularly where the scanner bypasses/grants admin logins)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Good security practice.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We have therefore introduced a new sanitization class into v1.5.5 which takes a much more aggressive stance than previous code.&lt;/p&gt;
&lt;p&gt;The new code is likely to have an effect on plugins that add or change admin functionality. To mitigate this some 
overrides and switches have been allowed for. This documentation should allow plugin authors and sites that 
already use plugins to workaround potential problems.&lt;/p&gt;
&lt;p&gt;The new code introduces a number of sanitization groups. Each group performs a sanitization on specific GET/POST 
parameters. For GET/POST parameters that are not already sanitized within these groups we then run a 
default sanitization (i.e.: simply running &lt;code&gt;htmlspecialchars()&lt;/code&gt; on it).&lt;/p&gt;
&lt;h2 id=&#34;temporarily-disabling-strict-sanitization&#34;&gt;TEMPORARILY Disabling Strict Sanitization&lt;/h2&gt;
&lt;p&gt;If you find that some of your admin plugins are no longer working properly then you should look first to see if new 
versions of those plugins are available, i.e.: that support the new v1.5.5 sanitization.&lt;/p&gt;
&lt;p&gt;If new versions are not available, or you need to keep your current admin working while you update, then you can disable
the strict(default) sanitization by doing the following:&lt;/p&gt;
&lt;p&gt;Create a new &lt;code&gt;disable_strict_sanitize.php&lt;/code&gt; file in your &lt;code&gt;/admin/includes/extra_configures/&lt;/code&gt; directory.
The contents of this file should be&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;  &amp;lt;?php
  define(&amp;#39;DO_STRICT_SANITIZATION&amp;#39;, false);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;We encourage you to NOT do that unless truly necessary, and even then only as a temporary measure until your affected plugins have written their own custom sanitizers as described later in this document.&lt;/p&gt;
&lt;h2 id=&#34;logging&#34;&gt;Logging&lt;/h2&gt;
&lt;p&gt;The AdminSanitizer class can log the actions it takes, and this may be helpful in debugging problems with plugins.&lt;/p&gt;
&lt;p&gt;Logging is enabled/disabled using the DO_DEBUG_SANITIZATION define.&lt;/p&gt;
&lt;p&gt;To enable logging create a new file in &lt;code&gt;/admin/includes/extra_configures/&lt;/code&gt; that contains&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;  &amp;lt;?php
  define(&amp;#39;DO_DEBUG_SANITIZATION&amp;#39;, true);
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;for-developers-how-to-use-the-sanitization-in-plugins&#34;&gt;For Developers. How to use the sanitization in plugins.&lt;/h2&gt;
&lt;p&gt;If you are a developer who wants to update your current code, or you are developing a new plugin, the following
are some tips to keep your plugin compatible with v1.5.5 core functionality.&lt;/p&gt;
&lt;h3 id=&#34;parameter-naming&#34;&gt;Parameter Naming&lt;/h3&gt;
&lt;p&gt;GET/POST parameters will be sanitized based on their parameter name and the sanitization group assigned to them. 
Therefore, if you are writing a plugin and use a parameter name that already exists in Zen Cart that parameter will be 
sanitized according to the group it is already assigned to in core code.&lt;/p&gt;
&lt;p&gt;For example, the &lt;code&gt;action&lt;/code&gt; parameter is assigned to the &lt;code&gt;SIMPLE_ALPHANUM_PLUS&lt;/code&gt; group, and the sanitization for that group 
will always be applied to it.&lt;/p&gt;
&lt;p&gt;There will be occasions where a plugin uses a parameter name that is already added to a sanitization group, and rewriting
plugin code may be onerous. For these cases it is possible to override sanitization on a per page basis.&lt;/p&gt;
&lt;h3 id=&#34;adding-parametersgroups&#34;&gt;Adding Parameters/Groups&lt;/h3&gt;
&lt;p&gt;If a plugin needs to define its own sanitization or override the sanitization for an already defined parameter, it 
should create a php file in &lt;code&gt;/admin/includes/extra_datafiles/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;An example of the contents might be&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$sanitizer = AdminRequestSanitizer::getInstance();
$group = array(
    &#39;id&#39; =&amp;gt; array(&#39;sanitizerType&#39; =&amp;gt; &#39;CONVERT_INT&#39;, &#39;method&#39; =&amp;gt; &#39;both&#39;, &#39;pages&#39; =&amp;gt; array(&#39;edit_orders&#39;), &#39;params&#39; =&amp;gt; array()),
    );
$sanitizer-&amp;gt;addComplexSanitization($group);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$sanitizer = AdminRequestSanitizer::getInstance();
$group = array(
  &#39;col_html_text&#39; =&amp;gt; array(&#39;sanitizerType&#39; =&amp;gt; &#39;PRODUCT_DESC_REGEX&#39;, &#39;method&#39; =&amp;gt; &#39;post&#39;),
    );
$sanitizer-&amp;gt;addComplexSanitization($group);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The structure of the defining array is:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;sanitizerType = The name of a sanitizer group (see the group names below)&lt;/li&gt;
&lt;li&gt;method = get|post|both&lt;/li&gt;
&lt;li&gt;pages = (optional) an array of pages which this sanitizer rule will be applied to; (if not supplied, will apply to all pages)&lt;/li&gt;
&lt;li&gt;params = (optional) this is used only for the MULTI_DIMENSIONAL sanitizer, which is explained below.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Here&amp;rsquo;s a specific example from the &lt;a href=&#34;https://www.zen-cart.com/downloads.php?do=file&amp;amp;id=2264&#34;&gt;News Box Manager&lt;/a&gt; plugin.  The file &lt;code&gt;admin/includes/extra_datafiles/news_box_manager_sanitization.php&lt;/code&gt; sanitizes the fields &lt;code&gt;news_title&lt;/code&gt; and &lt;code&gt;news_content&lt;/code&gt; when they are updated:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;if (class_exists(&amp;#39;AdminRequestSanitizer&amp;#39;) &amp;amp;&amp;amp; method_exists(&amp;#39;AdminRequestSanitizer&amp;#39;, &amp;#39;getInstance&amp;#39;)) {
    $news_mgr_sanitizer = AdminRequestSanitizer::getInstance();
    $news_mgr_sanitizer-&amp;gt;addSimpleSanitization(&amp;#39;PRODUCT_DESC_REGEX&amp;#39;, array(&amp;#39;news_title&amp;#39;, &amp;#39;news_content&amp;#39;));
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The &lt;code&gt;pages&lt;/code&gt; parameter is not specified here because this particular plugin 
is designed for easy extension, so that pages can be added simply by copying a single file (and requiring someone to modify this file as well 
to add the new page would be contrary to that intention.)&lt;/p&gt;
&lt;h3 id=&#34;general-sanitization-groups&#34;&gt;General Sanitization Groups&lt;/h3&gt;
&lt;p&gt;Zen Cart defines the following default case-insensitive sanitizers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;SIMPLE_ALPHANUM_PLUS&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;GET and POST Values&lt;/p&gt;
&lt;p&gt;Uses &lt;code&gt;[^\/ 0-9a-zA-Z_:@.-]&lt;/code&gt; regex&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;CONVERT_INT&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;GET and POST values&lt;/p&gt;
&lt;p&gt;converts value to Integer&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;FILE_DIR_REGEX&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;POST values only&lt;/p&gt;
&lt;p&gt;uses &lt;code&gt;[^0-9a-z.!@#$%^&amp;amp;()_-~`+^ \\]&lt;/code&gt; regex&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;ALPHANUM_DASH_UNDERSCORE&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;GET and POST values&lt;/p&gt;
&lt;p&gt;Uses &lt;code&gt;[^a-z0-9_-]&lt;/code&gt; regex&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;WORDS_AND_SYMBOLS_REGEX&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;GET and POST values&lt;/p&gt;
&lt;p&gt;Uses &lt;code&gt;(&amp;lt;\/?scri|on(load|mouse|error|read|key)(up|down)? ?=|[^(class|style)] ?= ?(\(|&amp;quot;)|&amp;lt;!)&lt;/code&gt; regex&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;META_TAGS&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;POST Values only (Deep)&lt;/p&gt;
&lt;p&gt;Uses &lt;code&gt;htmlspecialchars($_POST[$parameterName][$pKey], ENT_COMPAT, $this-&amp;gt;charset, false)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;SANITIZE_EMAIL&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;GET and POST values&lt;/p&gt;
&lt;p&gt;Uses &lt;code&gt;filter_var($_POST[$key], FILTER_SANITIZE_EMAIL)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;SANITIZE_EMAIL_AUDIENCE&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;POST values only&lt;/p&gt;
&lt;p&gt;Uses &lt;code&gt;htmlspecialchars($_POST[$parameterName], ENT_COMPAT, $this-&amp;gt;charset, true)&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;PRODUCT_URL_REGEX&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;POST values only (Deep)&lt;/p&gt;
&lt;p&gt;Uses &lt;code&gt;([^0-9a-z&#39;.!@#$%&amp;amp;()_-~/;:=?[]]|[&amp;gt;&amp;lt;])&lt;/code&gt; regex&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;PRODUCT_DESC_REGEX&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;POST Values only (Deep)&lt;/p&gt;
&lt;p&gt;Uses &lt;code&gt;(load=|= ?\(|&amp;lt;![^-])&lt;/code&gt; regex&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;CURRENCY_VALUE_REGEX&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;POST Values only&lt;/p&gt;
&lt;p&gt;Uses &lt;code&gt;[^a-z0-9_,\.\-]&lt;/code&gt; regex&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;FLOAT_VALUE_REGEX&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;POST Values only&lt;/p&gt;
&lt;p&gt;Uses &lt;code&gt;[^0-9,\.\-\+]&lt;/code&gt; regex&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;PRODUCT_NAME_DEEP_REGEX&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;POST Values only (Deep)&lt;/p&gt;
&lt;p&gt;Uses &lt;code&gt;(&amp;lt;\/?scri|on(load|mouse|error|read|key)(up|down)? ?=|[^(class|style)] ?= ?(\(|&amp;quot;)|&amp;lt;!)&lt;/code&gt; regex&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;NULL_ACTION&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;GET/POST Values&lt;/p&gt;
&lt;p&gt;Skips sanitization for the relevant parameter.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;STRICT_SANITIZE_VALUES&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Any parameters not previously sanitized will be sanitized with this method.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;STRICT_SANITIZE_KEYS&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;All POST and GET &amp;ldquo;keys&amp;rdquo; containing any &lt;code&gt;&amp;lt;&lt;/code&gt; or &lt;code&gt;&amp;gt;&lt;/code&gt; symbols in the key will be &lt;code&gt;unset()&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;multi_dimensional-sanitization&#34;&gt;MULTI_DIMENSIONAL Sanitization&lt;/h3&gt;
&lt;p&gt;The MULTI_DIMENSIONAL sanitizer is special in that it defines sanitization for an array of parameters, rather
than one parameter as other sanitizers do.&lt;/p&gt;
&lt;p&gt;For example, if you post the following array&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;[update_products] =&amp;gt; Array
    (
        [13] =&amp;gt; Array
            (
                [qty] =&amp;gt; 1
                [name] =&amp;gt; Microsoft IntelliMouse Explorer
                [onetime_charges] =&amp;gt; 0.0000
                [attr] =&amp;gt; Array
                    (
                        [3] =&amp;gt; Array
                            (
                                [value] =&amp;gt; 11
                                [type] =&amp;gt; 0
                            )

                    )

                [model] =&amp;gt; MSIMEXP
                [tax] =&amp;gt; 0
                [final_price] =&amp;gt; 70.95  
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;normal sanitizers would only address the outer &lt;code&gt;update_products&lt;/code&gt; parameter, while what you really want to do is define 
parameters for &lt;code&gt;qty&lt;/code&gt; &lt;code&gt;name&lt;/code&gt; &lt;code&gt;onetime_charges&lt;/code&gt; etc, and you also want to sanitize the attr sub array recursively.&lt;/p&gt;
&lt;p&gt;to address this, you can define a MULTI_DIMENSIONAL sanitizer like this:-&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$sanitizer = AdminRequestSanitizer::getInstance();
$group = array(
    &#39;update_products&#39; =&amp;gt; array(
        &#39;sanitizerType&#39; =&amp;gt; &#39;MULTI_DIMENSIONAL&#39;,
        &#39;method&#39; =&amp;gt; &#39;post&#39;,
        &#39;pages&#39; =&amp;gt; array(&#39;edit_orders&#39;),
        &#39;params&#39; =&amp;gt; array(
            &#39;update_products&#39; =&amp;gt; array(&#39;sanitizerType&#39; =&amp;gt; &#39;CONVERT_INT&#39;),
            &#39;qty&#39; =&amp;gt; array(&#39;sanitizerType&#39; =&amp;gt; &#39;CONVERT_INT&#39;),
            &#39;name&#39; =&amp;gt; array(&#39;sanitizerType&#39; =&amp;gt; &#39;WORDS_AND_SYMBOLS_REGEX&#39;),
            &#39;onetime_charges&#39; =&amp;gt; array(&#39;sanitizerType&#39; =&amp;gt; &#39;CURRENCY_VALUE_REGEX&#39;),
            &#39;attr&#39; =&amp;gt; array(
                &#39;sanitizerType&#39; =&amp;gt; &#39;MULTI_DIMENSIONAL&#39;,
                &#39;params&#39; =&amp;gt; array(
                    &#39;attr&#39; =&amp;gt; array(&#39;sanitizerType&#39; =&amp;gt; &#39;CONVERT_INT&#39;),
                    &#39;value&#39; =&amp;gt; array(&#39;sanitizerType&#39; =&amp;gt; &#39;CONVERT_INT&#39;),
                    &#39;type&#39; =&amp;gt; array(&#39;sanitizerType&#39; =&amp;gt; &#39;CONVERT_INT&#39;)
                )
            ),
            &#39;model&#39; =&amp;gt; array(&#39;sanitizerType&#39; =&amp;gt; &#39;WORDS_AND_SYMBOLS_REGEX&#39;),
            &#39;tax&#39; =&amp;gt; array(&#39;sanitizerType&#39; =&amp;gt; &#39;WORDS_AND_SYMBOLS_REGEX&#39;),
            &#39;final_price&#39; =&amp;gt; array(&#39;sanitizerType&#39; =&amp;gt; &#39;WORDS_AND_SYMBOLS_REGEX&#39;),
        )
    )
);
$sanitizer-&amp;gt;addComplexSanitization($group);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Note that sanitizers for sub parameters are defined in the &lt;code&gt;params&lt;/code&gt; array and that you can recursively define 
deeper arrays with a further MULTI_DIMENSIONAL sanitizer array.&lt;/p&gt;
&lt;h3 id=&#34;custom-sanitizers&#34;&gt;Custom Sanitizers&lt;/h3&gt;
&lt;p&gt;tbd&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Dev: Adding a child table to the products table</title>
      <link>/zendocs_test1/dev/code/child_table_products/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/zendocs_test1/dev/code/child_table_products/</guid>
      <description>
        
        
        &lt;p&gt;As an alternative to &lt;a href=&#34;/zendocs_test1/dev/code/add_field_products/&#34;&gt;adding a field&lt;/a&gt;, you may wish to create a child table.&lt;/p&gt;
&lt;p&gt;You can see cases where this is already done in Zen Cart: the &lt;code&gt;products_description&lt;/code&gt; table is a child table of the &lt;code&gt;products&lt;/code&gt; table, linked by &lt;code&gt;products_id&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Why would you create a child table rather than just extend the products table?  Here are some scenarios:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Some products may not need a child table entry.&lt;/li&gt;
&lt;li&gt;Some products may need multiple child table entries.&lt;/li&gt;
&lt;li&gt;Child table entries are required for each supported language.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The decision is yours, based on your needs.&lt;/p&gt;
&lt;p&gt;Considerations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You will need to build code to handle adding, updating and deleting this data.&lt;/li&gt;
&lt;li&gt;What happens when a product is deleted?  You may wish to modify &lt;code&gt;admin/includes/modules/delete_product_confirm.php&lt;/code&gt; or the &lt;code&gt;zen_remove_product&lt;/code&gt; function.&lt;/li&gt;
&lt;li&gt;What happens when a product is copied?  You may wish to modify &lt;code&gt;admin/includes/modules/copy_product_confirm.php&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Then you will need to &lt;a href=&#34;/zendocs_test1/dev/code/displaying_custom_fields/&#34;&gt;customize your template to display the new field&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Dev: Adding a field to the products table</title>
      <link>/zendocs_test1/dev/code/add_field_products/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/zendocs_test1/dev/code/add_field_products/</guid>
      <description>
        
        
        &lt;p&gt;A plugin called &lt;a href=&#34;https://github.com/torvista/Zen_Cart-Extra_Product_Fields&#34;&gt;Extra Product Fields&lt;/a&gt;
has been developed that demonstrates the use of observers to add a field to the products table.&lt;/p&gt;
&lt;p&gt;As an alternative approach, you may wish to &lt;a href=&#34;/zendocs_test1/dev/code/child_table_products/&#34;&gt;create a child table&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Then you will need to &lt;a href=&#34;/zendocs_test1/dev/code/displaying_custom_fields/&#34;&gt;customize your template to display the new field&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Dev: Adding a Status History Record to an Order</title>
      <link>/zendocs_test1/dev/code/updating_orders_status_history/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/zendocs_test1/dev/code/updating_orders_status_history/</guid>
      <description>
        
        
        &lt;p&gt;Zen Cart version 1.5.6 introduced the function &lt;code&gt;zen_update_orders_history&lt;/code&gt;, providing a way for both admin and storefront processing to easily update an order&amp;rsquo;s status-history, e.g. changing an order&amp;rsquo;s status from &lt;code&gt;Processing&lt;/code&gt; to &lt;code&gt;Delivered&lt;/code&gt;.  That function also, based on the parameters supplied, sends an optional status-update email to the customer, interested admins or both.&lt;/p&gt;
&lt;p&gt;The function was initially created for a site-specific change where the processing was &amp;lsquo;interested&amp;rsquo; in an order&amp;rsquo;s &lt;em&gt;&lt;strong&gt;change&lt;/strong&gt;&lt;/em&gt; in status.  See &lt;a href=&#34;#notifications-issued&#34;&gt;Notifications Issued&lt;/a&gt;  for additional information.&lt;/p&gt;
&lt;h2 id=&#34;function-interface&#34;&gt;Function Interface&lt;/h2&gt;
&lt;p&gt;The function &lt;code&gt;zen_update_orders_history&lt;/code&gt; provides an easy way to update an order&amp;rsquo;s status-history, with the option of sending an email message to the ordering customer.  It takes a bunch of parameters, described below.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;zen_update_orders_history&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$orders_id&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$message&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$updated_by&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$orders_new_status&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$notify_customer&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$email_include_message&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$email_subject&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$send_extra_emails_to&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol&gt;
&lt;li&gt;&lt;code&gt;$orders_id&lt;/code&gt;.  Contains the (integer) orders_id of the to-be-updated customer order.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$message&lt;/code&gt;.  Contains a message-string to be recorded with the status-update.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$updated_by&lt;/code&gt;.  If the value &lt;em&gt;is not&lt;/em&gt; &lt;code&gt;null&lt;/code&gt;, then it&amp;rsquo;s expected to be a string-value that identifies &amp;lsquo;who&amp;rsquo; (e.g. an  external process) caused the update.  Otherwise, the &lt;code&gt;$updated_by&lt;/code&gt; value is set based on
&lt;ol&gt;
&lt;li&gt;&amp;hellip; if in the admin, to the current admin-name suffixed by their admin ID, e.g. &lt;code&gt;Dave [5]&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&amp;hellip; if a customer is logged in, to an empty string.&lt;/li&gt;
&lt;li&gt;&amp;hellip; if a customer is not logged in, to &lt;code&gt;N/A&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$orders_new_status&lt;/code&gt;.  Indicates the new status-history value to be applied to an order.  A value of &lt;strong&gt;-1&lt;/strong&gt; indicates no change in status.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$notify_customer&lt;/code&gt;. Indicates whether the added status-history record is customer-visible and whether to send an email notification of the change, one of:
&lt;ul&gt;
&lt;li&gt;0 &amp;hellip; No emails are sent; the history-update is visible to the customer.&lt;/li&gt;
&lt;li&gt;1 &amp;hellip; Emails are sent to the customer and any configured admins; the history-update is visible to the customer.&lt;/li&gt;
&lt;li&gt;-1 &amp;hellip; No emails are sent; the history-update is &lt;strong&gt;not&lt;/strong&gt; visible to the customer.&lt;/li&gt;
&lt;li&gt;-2 &amp;hellip; Emails are sent to any configured admins; the history-update is &lt;strong&gt;not&lt;/strong&gt; visible to the customer.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$email_include_message&lt;/code&gt;.  A boolean flag that indicates whether or not to include the &lt;code&gt;$message&lt;/code&gt; string as part of the to-be-sent email.  If &lt;code&gt;false&lt;/code&gt;, the message will be recorded in the status-history update only.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$email_subject&lt;/code&gt;.  A &lt;code&gt;string&lt;/code&gt; value, providing an override to the default subject: &lt;code&gt;OSH_EMAIL_TEXT_SUBJECT . &#39; #&#39; . $orders_id&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$send_extra_emails_to&lt;/code&gt;. A &lt;code&gt;string&lt;/code&gt; value, providing an override for the database constant &lt;code&gt;SEND_EXTRA_ORDERS_STATUS_ADMIN_EMAILS_TO&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The function returns an integer value, identifying its completion status, one of:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;-1 &amp;hellip; No status-change detected, no &lt;code&gt;orders_status_history&lt;/code&gt; record was written.&lt;/li&gt;
&lt;li&gt;-2 &amp;hellip; No order-record was found for the submitted &lt;code&gt;$orders_id&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Otherwise, the return value identifies the &lt;code&gt;orders_status_history_id&lt;/code&gt; value for the just-written status-history record.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;function-processing&#34;&gt;Function Processing&lt;/h2&gt;
&lt;h3 id=&#34;creating-an-orders-status-history-record&#34;&gt;Creating an Order&amp;rsquo;s Status History Record&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;zen_update_orders_history&lt;/code&gt; function will create an additional &lt;code&gt;orders_status_history&lt;/code&gt; record for the supplied &lt;code&gt;$orders_id&lt;/code&gt; if the &lt;code&gt;$orders_id&lt;/code&gt; supplied is associated with an &lt;code&gt;orders&lt;/code&gt; table record and at least one of the following conditions is met:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The &lt;code&gt;$orders_new_status&lt;/code&gt; is set to -1 (no change in status).&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;$orders_new_status&lt;/code&gt; is different from the order&amp;rsquo;s current status.&lt;/li&gt;
&lt;li&gt;The &lt;code&gt;$message&lt;/code&gt; to be recorded is not &amp;rsquo;empty&amp;rsquo;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;notifications-issued&#34;&gt;Notifications Issued&lt;/h3&gt;
&lt;p&gt;The function also provides a collection of notifications, enabling additional store-specific processing.&lt;/p&gt;
&lt;h4 id=&#34;zen_update_orders_history_pre_email&#34;&gt;ZEN_UPDATE_ORDERS_HISTORY_PRE_EMAIL&lt;/h4&gt;
&lt;p&gt;This notification is issued only when &lt;code&gt;$email_include_message&lt;/code&gt; is set to true (i.e. the message is to be included in any sent emails) and provides a watching observer the opportunity to override the current message text:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;$GLOBALS&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;zco_notifier&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;notify&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;ZEN_UPDATE_ORDERS_HISTORY_PRE_EMAIL&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;array&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;message&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$message&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;),&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$osh_additional_comments&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;$osh_additional_comments&lt;/code&gt; parameter can be updated to provide additional text to be appended to the &lt;code&gt;$message&lt;/code&gt; value for the emails.&lt;/p&gt;
&lt;h4 id=&#34;zen_update_orders_history_status_values&#34;&gt;ZEN_UPDATE_ORDERS_HISTORY_STATUS_VALUES&lt;/h4&gt;
&lt;p&gt;This notification is issued if the function has determined that an orders-status-history record is to be created:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;$GLOBALS&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;zco_notifier&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;notify&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;ZEN_UPDATE_ORDERS_HISTORY_STATUS_VALUES&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;array&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;orders_id&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$orders_id&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;new&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$orders_new_status&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;old&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$orders_current_status&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The notification identifies the orders-id as well as the order&amp;rsquo;s new (to-be-written) and current orders&amp;rsquo; status values and is the &lt;em&gt;heart&lt;/em&gt; of the function&amp;rsquo;s processing.  Essentially the notification provides a means for site-specific changes to be performed when an order&amp;rsquo;s status &lt;em&gt;&lt;strong&gt;changes&lt;/strong&gt;&lt;/em&gt;.&lt;/p&gt;
&lt;h4 id=&#34;zen_update_orders_history_set_order_update_message&#34;&gt;ZEN_UPDATE_ORDERS_HISTORY_SET_ORDER_UPDATE_MESSAGE&lt;/h4&gt;
&lt;p&gt;This notification is issued prior to sending any email and gives a watching observer the opportunity to override the text sent in that email.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;$GLOBALS&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;zco_notifier&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;notify&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;ZEN_UPDATE_ORDERS_HISTORY_SET_ORDER_UPDATE_MESSAGE&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$orders_id&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$email_order_message&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;zen_update_orders_history_before_insert&#34;&gt;ZEN_UPDATE_ORDERS_HISTORY_BEFORE_INSERT&lt;/h4&gt;
&lt;p&gt;This notification is issued just prior to creating a new &lt;code&gt;orders_status_history&lt;/code&gt; record for the order, giving a watching observer the opportunity to make final adjustments, e.g. adding additional fields to the status-history record:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;$GLOBALS&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;zco_notifier&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;notify&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;ZEN_UPDATE_ORDERS_HISTORY_BEFORE_INSERT&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;array&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(),&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$osh_sql&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The &lt;code&gt;$osh_sql&lt;/code&gt; is an associative array, submitted to &lt;code&gt;zen_db_perform&lt;/code&gt; to create that new record.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Dev: Admin cron jobs</title>
      <link>/zendocs_test1/dev/code/admin_cron/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/zendocs_test1/dev/code/admin_cron/</guid>
      <description>
        
        
        &lt;p&gt;&lt;a href=&#34;/zendocs_test1/user/first_steps/hosting/#cron&#34;&gt;Cron&lt;/a&gt; is a utility on Linux hosting accounts that allows you to automatically schedule jobs to run at specific intervals.  An example of a job you might want to run is the &lt;a href=&#34;/zendocs_test1/user/admin_pages/localization/currencies/#update-currencies&#34;&gt;exchange rate updater&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;What if you want to create your own custom cron job?&lt;/p&gt;
&lt;p&gt;The easiest way to do this is simply to follow the example of the exchange rate updater.  The key points to note are as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Copy the file &lt;code&gt;admin/currency_cron.php&lt;/code&gt; to &lt;code&gt;admin/my-script_cron.php&lt;/code&gt; Change the references to &lt;code&gt;currency_cron&lt;/code&gt; to &lt;code&gt;my-script_cron&lt;/code&gt;, and call your own function in place of &lt;code&gt;zen_update_currencies&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Copy the file &lt;code&gt;admin/includes/auto_loaders/currency_cron.core.php&lt;/code&gt; to &lt;code&gt;admin/includes/auto_loaders/my-script_cron.core.php&lt;/code&gt;  Change the inclusion of &lt;code&gt;localization.php&lt;/code&gt; to your own functions file.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now you are ready to create a cron job in your hosting company&amp;rsquo;s control panel to run the update automatically on a scheduled basis. The command to give it is as follows. Work with your hosting company&amp;rsquo;s tech support team if you need help with determining the correct path and the correct php binary to call.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;php /full/server/path/to/admin/my-script_cron.php
&lt;/code&gt;&lt;/pre&gt;
      </description>
    </item>
    
    <item>
      <title>Dev: Auto Inclusion System</title>
      <link>/zendocs_test1/dev/code/inclusion/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/zendocs_test1/dev/code/inclusion/</guid>
      <description>
        
        
        &lt;p&gt;To reduce the number of changes required for plugin authors, Zen Cart does some automatic inclusion of files.&lt;/p&gt;
&lt;h3 id=&#34;functions&#34;&gt;Functions&lt;/h3&gt;
&lt;p&gt;Any &lt;code&gt;*.php&lt;/code&gt; files placed in &lt;code&gt;includes/functions/extra_functions&lt;/code&gt; are loaded automatically, and can be called by any storefront side logic.  Similarly, on the admin side, functions in &lt;code&gt;admin/includes/functions/extra_functions&lt;/code&gt; are automatically loaded.&lt;/p&gt;
&lt;h3 id=&#34;language-files&#34;&gt;Language Files&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;A storefront side page will automatically load its own language file.  So the page &lt;code&gt;includes/modules/pages/contact_us/&lt;/code&gt; will load &lt;code&gt;includes/languages/english/contact_us.php&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;All files in &lt;code&gt;includes/languages/english/extra_definitions&lt;/code&gt; are automatically loaded.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;extra-datafiles-extra-configures-extra-cart-actions&#34;&gt;Extra Datafiles, Extra Configures, Extra Cart Actions&lt;/h3&gt;
&lt;p&gt;Any &lt;code&gt;*.php&lt;/code&gt; files in this folder are loaded automatically.&lt;/p&gt;
&lt;p&gt;See &lt;a href=&#34;/zendocs_test1/dev/code/extra_folders/&#34;&gt;Extra folders&lt;/a&gt; for a complete list.&lt;/p&gt;
&lt;h3 id=&#34;auto-loaded-observers&#34;&gt;Auto Loaded Observers&lt;/h3&gt;
&lt;p&gt;These are described in the &lt;a href=&#34;/zendocs_test1/dev/code/notifiers/#auto-loaded-observers&#34;&gt;Notifiers and Observers&lt;/a&gt; documentation. Auto-loaded Observer files include those in &lt;code&gt;includes/classes/observers&lt;/code&gt; (and Admin) whose name begins with &lt;code&gt;auto.&lt;/code&gt; and which define a class named &lt;strong&gt;zcObserver&lt;/strong&gt; + the &lt;a href=&#34;http://en.wikipedia.org/wiki/CamelCase&#34;&gt;CamelCased&lt;/a&gt; filename - for example, &lt;code&gt;class zcObserverFooObserver&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;stylesheets&#34;&gt;Stylesheets&lt;/h3&gt;
&lt;p&gt;A number of stylesheets are automatically loaded; this process is described in the &lt;a href=&#34;/zendocs_test1/user/template/stylesheet/&#34;&gt;stylesheet documentation&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Dev: Building a Form</title>
      <link>/zendocs_test1/dev/code/forms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/zendocs_test1/dev/code/forms/</guid>
      <description>
        
        
        &lt;p&gt;Adding a custom form to your site is a common customization.  There are a few guidelines for when you do this:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Always &lt;a href=&#34;/zendocs_test1/dev/plugins/upgrading_to_1.5/#rewriting-addon-admin-pages-to-use-form-posts-instead-of-gets&#34;&gt;submit your form data using POST&lt;/a&gt;. Never use GET for forms. (There are exceptions of course, but if you don&amp;rsquo;t already grok best practices for that, then never use GET for forms!)&lt;/li&gt;
&lt;li&gt;Use &lt;code&gt;zen_draw_form&lt;/code&gt;, not the HTML &lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; tag.  Note that when you use &lt;code&gt;zen_draw_form&lt;/code&gt;, you get the &lt;code&gt;securityToken&lt;/code&gt; with no extra work.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;/zendocs_test1/dev/code/database_querying/&#34;&gt;Sanitize your inputs&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;A good model for all of this is the Ask a Question feature, which has been part of Zen Cart since 1.5.7.  See the following files:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;includes/modules/pages/ask_a_question/header_php.php&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;includes/templates/template_default/templates/tpl_ask_a_question_default.php&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;alternative-approach---use-a-form-builder&#34;&gt;Alternative Approach - Use a Form Builder&lt;/h3&gt;
&lt;p&gt;Another option which is highly recommended for storeowners who don&amp;rsquo;t have a developer is to use a form building tool like &lt;a href=&#34;https://www.wufoo.com/&#34;&gt;Wufoo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;A Wufoo form can easily be embedded on a extra define page (page_2, page_3, page_4) or an existing page like Contact Us.  In the case of Contact Us, you would just edit the template file (&lt;code&gt;includes/templates/YOURTEMPLATE/templates/tpl_contact_us_default.php&lt;/code&gt;) and replace the built-in form with the script from Wufoo.  Similarly, using a define page would just mean editing the template file and inserting the script below the &lt;code&gt;content&lt;/code&gt; div.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Dev: Building a Home Page widget</title>
      <link>/zendocs_test1/dev/code/widget/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/zendocs_test1/dev/code/widget/</guid>
      <description>
        
        
        &lt;p&gt;Creating a widget of your own is just a matter of modifying &lt;code&gt;admin/index_dashboard.php&lt;/code&gt; and adding in your logic.  For example, one store wanted to monitor orders in a specific status, and make them visible on the home page.  Here&amp;rsquo;s what they did:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;    &amp;lt;div class=&amp;#34;reportBox&amp;#34;&amp;gt;
        &amp;lt;div class=&amp;#34;header&amp;#34;&amp;gt;&amp;lt;?php echo &amp;#34;Held Orders&amp;#34;; ?&amp;gt; &amp;lt;/div&amp;gt;
        &amp;lt;?php  $orders = $db-&amp;gt;Execute(&amp;#34;SELECT o.orders_id AS orders_id, o.customers_name AS customers_name, o.date_purchased AS date_purchased, ot.text AS order_total FROM &amp;#34; . TABLE_ORDERS . &amp;#34; o LEFT JOIN &amp;#34; . TABLE_ORDERS_TOTAL . &amp;#34; ot ON (o.orders_id = ot.orders_id and class = &amp;#39;ot_total&amp;#39;) WHERE orders_status = 7 ORDER BY orders_id DESC&amp;#34;);

        if ($orders-&amp;gt;EOF) {
          echo &amp;#39;              &amp;lt;div class=&amp;#34;row&amp;#34;&amp;gt;No Held Orders&amp;lt;/div&amp;gt;&amp;#39; . &amp;#34;\n&amp;#34;; 
        } else { 
          while (!$orders-&amp;gt;EOF) {
            echo &amp;#39;              &amp;lt;div class=&amp;#34;row&amp;#34;&amp;gt;&amp;lt;span class=&amp;#34;left&amp;#34;&amp;gt;&amp;lt;a href=&amp;#34;&amp;#39; . zen_href_link(FILENAME_ORDERS, &amp;#39;oID=&amp;#39; . $orders-&amp;gt;fields[&amp;#39;orders_id&amp;#39;] . &amp;#39;&amp;amp;action=edit&amp;amp;origin=&amp;#39; . FILENAME_DEFAULT, &amp;#39;NONSSL&amp;#39;) . &amp;#39;&amp;#34; class=&amp;#34;contentlink&amp;#34;&amp;gt; &amp;#39; . $orders-&amp;gt;fields[&amp;#39;customers_name&amp;#39;] . &amp;#39;&amp;lt;/a&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;#34;center&amp;#34;&amp;gt;&amp;#39; . $orders-&amp;gt;fields[&amp;#39;order_total&amp;#39;] . &amp;#39;&amp;lt;/span&amp;gt;&amp;lt;span class=&amp;#34;right&amp;#34;&amp;gt;&amp;#39; . &amp;#34;\n&amp;#34;;
            echo zen_date_short($orders-&amp;gt;fields[&amp;#39;date_purchased&amp;#39;]);
            echo &amp;#39;              &amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;#39; . &amp;#34;\n&amp;#34;;
            $orders-&amp;gt;MoveNext();
          }
        }
        ?&amp;gt;
    &amp;lt;/div&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;A plugin called &lt;a href=&#34;https://www.zen-cart.com/downloads.php?do=file&amp;amp;id=2284&#34;&gt;Orders in Status Dashboard Widget&lt;/a&gt; can be used to build something similar for your site.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Dev: Building a Report</title>
      <link>/zendocs_test1/dev/code/reports/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/zendocs_test1/dev/code/reports/</guid>
      <description>
        
        
        &lt;p&gt;Adding a custom report to your site&amp;rsquo;s admin is a common customization.&lt;/p&gt;
&lt;p&gt;The easiest way to do this is simply to follow one of the built-in examples. 
We&amp;rsquo;ll use the &lt;a href=&#34;/zendocs_test1/user/admin_pages/reports/products_low_stock/&#34;&gt;Products Low Stock&lt;/a&gt; report.&lt;/p&gt;
&lt;p&gt;There are two files that make up this report:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;admin/stats_products_lowstock.php&lt;/li&gt;
&lt;li&gt;admin/includes/languages/english/stats_products_lowstock.php&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Copy those files to files with names that match the data shown on the report.  For example, if the report is designed to show products with zero weight, call the new files:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;admin/stats_products_zero_weight.php&lt;/li&gt;
&lt;li&gt;admin/includes/languages/english/stats_products_zero_weight.php&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Then edit the new code file &lt;code&gt;admin/stats_products_zero_weight.php&lt;/code&gt; and change the query to do what you want.  In our case, the query for products with zero weight might be:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;            $products_query_raw = &amp;#34;SELECT p.products_id, pd.products_name, p.products_quantity, p.products_type
                                   FROM &amp;#34; . TABLE_PRODUCTS . &amp;#34; p,
                                        &amp;#34; . TABLE_PRODUCTS_DESCRIPTION . &amp;#34; pd
                                   WHERE p.products_id = pd.products_id
                                   AND p.products_weight = 0 
                                   AND pd.language_id = &amp;#34; . (int)$_SESSION[&amp;#39;languages_id&amp;#39;] . &amp;#34;
                                   ORDER BY pd.products_name&amp;#34;;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You may need to make other changes to this file of course depending on your needs.&lt;/p&gt;
&lt;p&gt;Then edit the new language file &lt;code&gt;admin/includes/languages/english/stats_products_zero_weight.php&lt;/code&gt; and change the title, then make any other appropriate changes.&lt;/p&gt;
&lt;p&gt;You can now run your report using the URL&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;https://MYSTORE.com/MYADMINNAME/index.php?cmd=stats_products_zero_weight
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;but you don&amp;rsquo;t see it in the dropdown Admin &amp;gt; Reports.  Why not?&lt;/p&gt;
&lt;p&gt;The answer is, it needs to be added to the admin pages table, which requires some defined constants.  If you look at any of the &lt;a href=&#34;https://www.zen-cart.com/downloads.php?do=cat&amp;amp;id=1&#34;&gt;reports in the Plugins area&lt;/a&gt;, you&amp;rsquo;ll see how this is done. We will look at &lt;a href=&#34;https://www.zen-cart.com/downloads.php?do=file&amp;amp;id=2302&#34;&gt;Disabled Products Report&lt;/a&gt; to see one example:&lt;/p&gt;
&lt;p&gt;This report creates a third file called &lt;code&gt;admin/includes/extra_datafiles/products_disabled.php&lt;/code&gt;.  So create your own file, using the naming convention above, called &lt;code&gt;admin/includes/extra_datafiles/products_zero_weight.php&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;You&amp;rsquo;ll want the contents to be something like:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;?php
define(&amp;#39;FILENAME_ZERO_WEIGHT&amp;#39;,&amp;#39;stats_products_zero_weight&amp;#39;);
define(&amp;#39;BOX_REPORTS_ZERO_WEIGHT&amp;#39;,&amp;#39;Zero Weight Report&amp;#39;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now you have to populate the database with these constants so the system knows to show this option in the Reports dropdown.&lt;/p&gt;
&lt;p&gt;You can provide an external SQL and run it by hand in Admin &amp;gt; Tools &amp;gt; Install SQL Patches, as this report does.&lt;/p&gt;
&lt;p&gt;The query would be something like&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;INSERT INTO admin_pages (page_key, language_key, main_page, page_params, menu_key, display_on_menu, sort_order) VALUES (&amp;#39;productsZeroWeight&amp;#39;, &amp;#39;BOX_REPORTS_ZERO_WEIGHT&amp;#39;, &amp;#39;FILENAME_ZERO_WEIGHT&amp;#39;, &amp;#39;&amp;#39;, &amp;#39;reports&amp;#39;, &amp;#39;Y&amp;#39;, 500);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;alternately, you can run this query in a file in &lt;code&gt;admin/functions/extra_functions&lt;/code&gt; automatically, to make installing this report easier. It&amp;rsquo;s your choice.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Dev: Creating a new Admin menu item</title>
      <link>/zendocs_test1/dev/code/creating_menu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/zendocs_test1/dev/code/creating_menu/</guid>
      <description>
        
        
        &lt;p&gt;Let&amp;rsquo;s say that you have a new tool (plugin, addon, etc) named &lt;code&gt;new_tool.php&lt;/code&gt; that you want to plug into the &lt;em&gt;&lt;strong&gt;Tools&lt;/strong&gt;&lt;/em&gt; menu.&lt;/p&gt;
&lt;p&gt;Most of the files that you distribute in the &lt;code&gt;new_tool.zip&lt;/code&gt; file are identical with previous Zen Cart versions:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;/YOUR_ADMIN/new_tool.php&lt;/code&gt;.  Contains the code that implements your new tool.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;/YOUR_ADMIN/includes/extra_datafiles/new_tool_filenames.php&lt;/code&gt;.  Contains the filename (without extension) definition for your new tool, e.g. &lt;code&gt;define(&#39;FILENAME_NEW_TOOL&#39;, &#39;new_tool&#39;);&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Be careful to leave off the &lt;code&gt;.php&lt;/code&gt; extension when doing this.&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;/YOUR_ADMIN/includes/languages/english/extra_definitions/new_tool_name.php&lt;/code&gt;.  Contains the menu entry text definition for your new tool, e.g. &lt;code&gt;define(&#39;BOX_TOOLS_NEW_TOOL&#39;, &#39;New Tool&#39;);&lt;/code&gt;. Can be repeated as multiple files for additional languages if needed.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;/YOUR_ADMIN/includes/languages/english/new_tool.php&lt;/code&gt;.  Contains the language-specific defines for your new tool; the filename of the language file &lt;em&gt;must be the same&lt;/em&gt; as  the filename of the tool itself. Multiple language files may be used.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To install the actual menu entry, you can use either one file to do the install without any messages being displayed, using &lt;code&gt;/YOUR_ADMIN/includes/functions/extra_functions/init_new_tool.php&lt;/code&gt;, 
or if you want to display a message indicating that your tool has been installed, you&amp;rsquo;ll need two files  (&lt;code&gt;/YOUR_ADMIN/includes/auto_loaders/config.new_tool.php&lt;/code&gt; and &lt;code&gt;/YOUR_ADMIN/includes/init_includes/init_new_tool.php&lt;/code&gt; instead of the &lt;code&gt;extra_functions&lt;/code&gt; file):&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The &lt;code&gt;config.new_tool.php&lt;/code&gt; file will contain something similar to:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;$autoLoadConfig&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;200&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;][]&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;array&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;autoType&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;init_script&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;loadFile&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;init_new_tool.php&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In &lt;em&gt;either&lt;/em&gt; case, the &lt;code&gt;init_new_tool.php&lt;/code&gt; will contain something like:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;defined&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;IS_ADMIN_FLAG&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;die&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;Illegal Access&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;//----
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Register the New Tools tool into the admin menu structure.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;//
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// NOTES:  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// 1) Once this file has run once and you see the Tools &amp;gt; New Tool link in the admin
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// menu structure, it is safe to delete this file (unless you have other functions that
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// are initialized in the file).
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// 2) If you have multiple items to add to the admin-level menus, then you should 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// register each of the pages here, just make sure that the &amp;#34;page key&amp;#34; is unique or 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// a debug-log will be generated!
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;//
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;function_exists&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;zen_register_admin_page&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;zen_page_key_exists&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;toolsNewTool&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000&#34;&gt;zen_register_admin_page&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;toolsNewTool&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;BOX_TOOLS_NEW_TOOL&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;FILENAME_NEW_TOOL&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;tools&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;Y&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// Optionally display a message here, using the $messageStack
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#000&#34;&gt;$messageStack&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;add_session&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;BOX_TOOLS_NEW_TOOL&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39; installed&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;success&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;The value &lt;em&gt;toolsNewTool&lt;/em&gt; is a (hopefully) unique value that identifies your new tool.&lt;/li&gt;
&lt;li&gt;The values &lt;code&gt;BOX_TOOLS_NEW_TOOL&lt;/code&gt; and &lt;code&gt;FILENAME_NEW_TOOL&lt;/code&gt; are defined within the other files within your toolset.&lt;/li&gt;
&lt;li&gt;The fourth parameter (&amp;rsquo;&amp;rsquo;) has any parameters that your tool might require.  Rarely used, except when you&amp;rsquo;re adding a configuration-page element.&lt;/li&gt;
&lt;li&gt;The fifth parameter (&lt;code&gt;&#39;tools&#39;&lt;/code&gt; in the example) identifies which of the high-level menu items your tool &amp;ldquo;attaches&amp;rdquo; to, one of: configuration,  catalog, modules, customers, taxes, localization, reports, tools, gv,  access, or extras.&lt;/li&gt;
&lt;li&gt;The sixth parameter (&amp;lsquo;Y&amp;rsquo;) identifies whether (&amp;lsquo;Y&amp;rsquo;) or not (&amp;lsquo;N&amp;rsquo;) to display the page on the admin menu.&lt;/li&gt;
&lt;li&gt;The seventh (optional) parameter is the sort order for the page, i.e. where it lives on the drop-down menu in relation to the sort order of others.  Leave this entry empty and the function will place &lt;code&gt;new_tool&lt;/code&gt; at the bottom of the selected menu dropdown.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To remove your menu item, in the case a store-owner chooses to  un-install your plugin, simply include a file in your distribution zip-file named  &lt;code&gt;/uninstall_new_page.sql&lt;/code&gt; that contains&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DELETE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;admin_pages&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHERE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;page_key&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;toolsNewTool&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Notes:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Instead of distributing the &lt;code&gt;init_new_tool.php&lt;/code&gt; file, you could include instructions to install using the &lt;em&gt;&lt;strong&gt;Admin Access  Management &amp;gt; Admin Page Registration&lt;/strong&gt;&lt;/em&gt; tool.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Set &lt;em&gt;Page Key&lt;/em&gt; to &lt;code&gt;toolsNewTool&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Set &lt;em&gt;Page Name&lt;/em&gt; to &lt;code&gt;BOX_TOOLS_NEW_TOOL&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Set &lt;em&gt;Page File Name&lt;/em&gt; to &lt;code&gt;FILENAME_NEW_TOOL&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Leave &lt;em&gt;Page Parameters&lt;/em&gt; blank&lt;/li&gt;
&lt;li&gt;Select &amp;ldquo;Tools&amp;rdquo; from the &lt;em&gt;Menu&lt;/em&gt; dropdown&lt;/li&gt;
&lt;li&gt;Check the &lt;em&gt;Show on Menu&lt;/em&gt; box&lt;/li&gt;
&lt;li&gt;(optional) Set the &lt;em&gt;Sort Order&lt;/em&gt; value to position your new tool on the displayed menu dropdown.&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;If you don&amp;rsquo;t see your newly added item, it&amp;rsquo;s likely somewhere in the middle of the menu&amp;rsquo;s dropdown list.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Use 999 (or any other large number) for the sort order value if you want to ensure that your item is at the bottom of the menu&amp;rsquo;s list.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;To reposition an item within one of the admin menus, use your cPanel&amp;rsquo;s phpMyAdmin tool and  browse the &lt;code&gt;admin_pages&lt;/code&gt; table to find the added menu item and adjust its sort_order value as desired.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;one-thing-not-to-do&#34;&gt;One thing NOT to do!&lt;/h3&gt;
&lt;p&gt;Rather than simply using the call &lt;code&gt;toolsNewTool&lt;/code&gt; to see if the menu entry has already been added, some developers will delete the registration file.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;@unlink(DIR_WS_INCLUDES . &amp;#39;functions/extra_functions/somescript_admin_page_reg.php&amp;#39;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;PLEASE don&amp;rsquo;t do this. If you do, it becomes difficult to create copies of the site for testing.  Instead, simply test the existence of whatever you&amp;rsquo;re trying not to re-do.  For example, to see if an admin menu exists, use &lt;code&gt;zen_page_key_exists&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;alternate-approaches-to-menu-creation&#34;&gt;Alternate Approaches to Menu Creation&lt;/h2&gt;
&lt;p&gt;Rather than write code as shown above, some developers prefer to provide a SQL file that can be run from Admin &amp;gt; Tools &amp;gt; Install SQL Patches.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;INSERT INTO admin_pages (page_key, language_key, main_page, page_params, menu_key, display_on_menu, sort_order) VALUES (&amp;#39;mod_list&amp;#39;, &amp;#39;BOX_TOOLS_MOD_LIST&amp;#39;, &amp;#39;FILENAME_MOD_LIST&amp;#39;, &amp;#39;&amp;#39;, &amp;#39;tools&amp;#39;, &amp;#39;Y&amp;#39;, 999);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The advantage of this approach is that it&amp;rsquo;s a one time operation with no checking overhead in the future.&lt;/p&gt;
&lt;p&gt;Still others simply point users to the &lt;a href=&#34;/zendocs_test1/user/admin_pages/admins/admin_page_registration/&#34;&gt;Admin Page Registration&lt;/a&gt; page. Note that this approach is not encouraged.&lt;/p&gt;
&lt;h2 id=&#34;using-the-encapsulated-plugin-manager&#34;&gt;Using the Encapsulated Plugin Manager&lt;/h2&gt;
&lt;p&gt;For developers targeting 1.5.7 and above, the &lt;a href=&#34;/zendocs_test1/dev/plugins/encapsulated_plugins/&#34;&gt;encapsulated plugin&lt;/a&gt; architecture is the new standard.  For details on SQL actions in encapsulated plugins, see &lt;a href=&#34;/zendocs_test1/dev/plugins/encapsulated_plugins/sql_installation/&#34;&gt;Plugin SQL Installation&lt;/a&gt;.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Dev: Creating or Modifying a table</title>
      <link>/zendocs_test1/dev/code/creating_tables/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/zendocs_test1/dev/code/creating_tables/</guid>
      <description>
        
        
        &lt;h2 id=&#34;creating-a-new-table&#34;&gt;Creating a New Table&lt;/h2&gt;
&lt;p&gt;Creating a new table is done with the SQL &lt;code&gt;CREATE TABLE&lt;/code&gt; command. You may provide a .sql file that does this operation with instructions to run the file in Admin &amp;gt; Tools &amp;gt; Install SQL Patches, or you may embed the CREATE TABLE operation in a file that is run automatically in the admin (for example, &lt;code&gt;admin/includes/functions/extra_functions/your-feature.php&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;When you create a new table, be sure to create a defined constant for the table name on both the storefront and admin side.  Example:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;?php
define(&amp;#39;TABLE_PRODUCTS_XSELL&amp;#39;, DB_PREFIX . &amp;#39;products_xsell&amp;#39;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This would go in &lt;code&gt;includes/extra_datafiles/xsell_definitions.php&lt;/code&gt; and &lt;code&gt;admin/includes/extra_datafiles/xsell_definitions.php&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;modifying-a-table&#34;&gt;Modifying a Table&lt;/h2&gt;
&lt;p&gt;Changing a table&amp;rsquo;s structure - adding or removing fields, modifying default values and so forth - is done with the SQL &lt;code&gt;ALTER TABLE&lt;/code&gt; command.  Again, you may provide a .sql file or automate this action.&lt;/p&gt;
&lt;h2 id=&#34;related-articles&#34;&gt;Related Articles&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/zendocs_test1/dev/code/add_field_products/&#34;&gt;Adding a field to the products table&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Dev: Displaying Custom Fields</title>
      <link>/zendocs_test1/dev/code/displaying_custom_fields/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/zendocs_test1/dev/code/displaying_custom_fields/</guid>
      <description>
        
        
        &lt;p&gt;Once you have finished adding a field to the database, you will need to figure out where you want to display it, and write the code to do that.   Here are some guidelines.&lt;/p&gt;
&lt;h2 id=&#34;case-1-new-field-in-products-table&#34;&gt;Case 1: New field in products table&lt;/h2&gt;
&lt;p&gt;a) Adding the new field to the &lt;a href=&#34;/zendocs_test1/user/products/product_info/&#34;&gt;product_info page&lt;/a&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Modify &lt;code&gt;includes/modules/pages/product_info/main_template_vars.php&lt;/code&gt; to retrieve the field and create a variable to store it.&lt;/li&gt;
&lt;li&gt;Modify &lt;code&gt;includes/templates/YOURTEMPLATE/templates/tpl_product_info_display.php&lt;/code&gt; to show the variable.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;b) Adding the new field to the &lt;a href=&#34;/zendocs_test1/user/template/product_listing_page_configuration/&#34;&gt;product listing&lt;/a&gt; page:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Modify &lt;code&gt;includes/modules/pages/index/main_template_vars.php&lt;/code&gt; to retrieve the new field.&lt;/li&gt;
&lt;li&gt;Modify &lt;code&gt;includes/modules/YOURTEMPLATE/product_listing.php&lt;/code&gt; to display the field.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(Some people shortcut this process by skipping the first file and just doing the query in the second file.)&lt;/p&gt;
&lt;h2 id=&#34;case-2-new-field-in-orders-table&#34;&gt;Case 2: New field in orders table&lt;/h2&gt;
&lt;p&gt;If you add a field to the orders table which is set during order creation, add the field to &lt;code&gt;includes/classes/order.php&lt;/code&gt; in the &lt;code&gt;query()&lt;/code&gt; method.&lt;/p&gt;
&lt;p&gt;Then you can reference it as needed in&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;tpl_account_default.php&lt;/li&gt;
&lt;li&gt;tpl_account_history_default.php&lt;/li&gt;
&lt;li&gt;tpl_account_history_info_default.php&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;On the admin side, you may also wish to reference it in&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;admin/invoice.php&lt;/li&gt;
&lt;li&gt;admin/orders.php&lt;/li&gt;
&lt;li&gt;admin/packingslip.php&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;In the &lt;code&gt;query()&lt;/code&gt; method from &lt;code&gt;includes/classes/order.php&lt;/code&gt;, add it to whatever array makes sense (&lt;code&gt;info&lt;/code&gt;, &lt;code&gt;customer&lt;/code&gt;, or &lt;code&gt;delivery&lt;/code&gt;), then reference it in any of the files above the same way other fields in that array are referenced.&lt;/p&gt;
&lt;h2 id=&#34;related-articles&#34;&gt;Related Articles&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;/zendocs_test1/dev/code/add_field_products/&#34;&gt;Adding a field to the products table&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Dev: Extra Folders</title>
      <link>/zendocs_test1/dev/code/extra_folders/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/zendocs_test1/dev/code/extra_folders/</guid>
      <description>
        
        
        &lt;p&gt;Files in these folders are autoloaded:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;includes/extra_datafiles/
includes/languages/english/extra_definitions/
includes/functions/extra_functions/
includes/extra_configures/
admin/includes/extra_datafiles/
admin/includes/languages/english/extra_definitions/
admin/includes/functions/extra_functions/
admin/includes/extra_configures/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Note that the folder &lt;code&gt;/extras&lt;/code&gt; at the root of Zen Cart is 
a set of utilities, not autoloads.&lt;/p&gt;
&lt;p&gt;Autoloads are designed to make upgrades easier since using them means fewer core file edits.&lt;/p&gt;
&lt;p&gt;The usage of these folders is as follows:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;includes/extra_datafiles&lt;/code&gt;: definitions of table names and PHP files which have been added.  Using this folder means not having to update the core files &lt;code&gt;includes/database_tables.php&lt;/code&gt; and &lt;code&gt;includes/filenames.php&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;includes/languages/english/extra_definitions&lt;/code&gt;: language constants which have been added.  Using this folder means not having to update the core files &lt;code&gt;includes/languages/english.php&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;includes/functions/extra_functions&lt;/code&gt; - global functions which have been added.  Using this folder means not having to update &lt;code&gt;includes/init_includes/init_general_funcs.php&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;includes/extra_configures&lt;/code&gt; - global configuration settings which have been added.  Using this folder means not having to modify &lt;code&gt;includes/configure.php&lt;/code&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The admin folders use the same pattern.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Dev: Init System</title>
      <link>/zendocs_test1/dev/code/init_system/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/zendocs_test1/dev/code/init_system/</guid>
      <description>
        
        
        &lt;p&gt;The initSystem refers to all of those files that are automatically included/initialised before any &lt;code&gt;command&lt;/code&gt; scripts can be run.&lt;/p&gt;
&lt;p&gt;Zen Cart v1.x uses a (non Object Oriented) page controller pattern to decide the scripts to run, based on &lt;code&gt;HTTP_GET&lt;/code&gt; parameters. The most important of these is the &lt;code&gt;main_page&lt;/code&gt; parameter. Depending on that parameter, a command script is then run. Each commmand script resides in a directory in &lt;code&gt;/includes/modules/pages&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For example if &lt;code&gt;main_page=login&lt;/code&gt; the command script would be taken from the &lt;code&gt;/includes/modules/pages/login/&lt;/code&gt; directory.&lt;/p&gt;
&lt;p&gt;However the first thing every command script always does is &lt;code&gt;require()&lt;/code&gt; the &lt;code&gt;/includes/application_top.php&lt;/code&gt; file. This is the heart of the initSystem.&lt;/p&gt;
&lt;p&gt;It is &lt;code&gt;application_top.php&lt;/code&gt; that is responsible for initialising basic subsystems (database abstraction/sessions/languages etc.) and loading global configuration data.&lt;/p&gt;
&lt;p&gt;Zen Cart uses a control array to decide which functions/classes/data files are to be included and initialised. This allows contribution authors and third party developers to gain access to and extend the initSystem without compromising upgradeability.&lt;/p&gt;
&lt;p&gt;The following sections describe how the Zen Cart engine uses &lt;code&gt;application_top.php&lt;/code&gt; to bootstrap itself and initialise core systems.&lt;/p&gt;
&lt;h3 id=&#34;application_topphp---breakpoints&#34;&gt;application_top.php - Breakpoints&lt;/h3&gt;
&lt;p&gt;The focus of &lt;code&gt;application_top.php&lt;/code&gt; is primarily to set up some core requirements, and then process the auto_loader breakpoints as described below.&lt;/p&gt;
&lt;p&gt;Breakpoints can simply be described as points of importance.&lt;/p&gt;
&lt;p&gt;At each breakpoint something important happens: we may load a function or class, initialise a class, load a script fragment, and so on. 
The important point is to recognise that at each breakpoint, third party code can, by adding to the control array, also load functions, load classes, initialise classes, run a class method or load (require) a script fragment.&lt;/p&gt;
&lt;h3 id=&#34;the-control-array&#34;&gt;The Control Array&lt;/h3&gt;
&lt;p&gt;Control arrays are automatically loaded from the directory &lt;code&gt;/includes/auto_loaders&lt;/code&gt;. 
Every &lt;code&gt;*.php&lt;/code&gt; file within that directory is expected to have a certain structure.&lt;/p&gt;
&lt;p&gt;The master &lt;code&gt;config.core.php&lt;/code&gt; is the main file for governing &lt;code&gt;application_top.php&lt;/code&gt;, and should not be altered.&lt;/p&gt;
&lt;p&gt;Third party developers can add their own control array files.&lt;/p&gt;
&lt;p&gt;The structure of each file should look like this:&lt;/p&gt;
&lt;pre&gt; 
$autoLoadConfig[0] = array(); 
&lt;/pre&gt;
&lt;p&gt;The value after $autoLoadConfig (in this case &lt;code&gt;[0]&lt;/code&gt;) represents the order in which the actions happen (e.g. the Breakpoint), such that &lt;code&gt;$autoLoadConfig[0]&lt;/code&gt; will occur before &lt;code&gt;$autoLoadConfig[1]&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Note also that any two entries where the breakpoint is the same will occur in the order they appear within the file.&lt;/p&gt;
&lt;p&gt;The actual contents of the &lt;code&gt;array()&lt;/code&gt; part depends upon what effect is needed.&lt;/p&gt;
&lt;p&gt;Let&amp;rsquo;s consider a number of different scenarios.&lt;/p&gt;
&lt;h4 id=&#34;require&#34;&gt;require&lt;/h4&gt;
&lt;p&gt;First the case of just wanting to &lt;code&gt;require&lt;/code&gt; a file to be loaded. For this, the control array entry would be:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$autoLoadConfig[0][] = array(&amp;#39;autoType&amp;#39;=&amp;gt;&amp;#39;require&amp;#39;, &amp;#39;loadFile&amp;#39;=&amp;gt; DIR_WS_INCLUDES . &amp;#39;somefile.php&amp;#39;); 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The &lt;code&gt;autotype&lt;/code&gt; parameter tells us that we just want to &lt;code&gt;require&lt;/code&gt; a file&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;loadFile&lt;/code&gt; parameter tells us which file we want to load.&lt;/p&gt;
&lt;p&gt;Loading &lt;code&gt;function&lt;/code&gt; files can also obviously be done using the above. (Alternatively they could just be placed in the &lt;code&gt;extra_functions&lt;/code&gt; directory.)&lt;/p&gt;
&lt;h4 id=&#34;include&#34;&gt;include&lt;/h4&gt;
&lt;p&gt;Similarly if we want to &lt;code&gt;include&lt;/code&gt; a file:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$autoLoadConfig[0][] = array(&amp;#39;autoType&amp;#39;=&amp;gt;&amp;#39;include&amp;#39;, &amp;#39;loadFile&amp;#39;=&amp;gt; DIR_WS_INCLUDES . &amp;#39;somefile.php&amp;#39;); 
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;init-scripts&#34;&gt;init scripts&lt;/h4&gt;
&lt;p&gt;The initSystem introduces a special class of &lt;code&gt;.php&lt;/code&gt; files called &lt;strong&gt;init scripts&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;These are stored in the &lt;code&gt;includes/init_includes&lt;/code&gt; directory.&lt;/p&gt;
&lt;p&gt;Each of these contains a small amount of procedural code that can be run as part of the initSystem process.&lt;/p&gt;
&lt;p&gt;The reason for separating them out into a special directory is to allow for those init_scripts to be overridden, more of which will be discussed later.&lt;/p&gt;
&lt;p&gt;To load an &lt;code&gt;init_script&lt;/code&gt; we use the following control array structure:&lt;/p&gt;
&lt;pre&gt;
$autoLoadConfig[] = array(array(&#39;autoType&#39;=&gt;&#39;init_script&#39;, &#39;loadFile&#39;=&gt; &#39;init_database.php&#39;));
&lt;/pre&gt;
&lt;h4 id=&#34;classes&#34;&gt;classes&lt;/h4&gt;
&lt;p&gt;Classes often require special handling. With a class file we want to load the class file definition, then instantiate the class, and finally possibly run a class method (all running thus within the scope of &lt;code&gt;application_top.php&lt;/code&gt;)&lt;/p&gt;
&lt;p&gt;In terms of the control array we have the following entries to help us.&lt;/p&gt;
&lt;pre&gt;
  $autoLoadConfig[0][] = array(&#39;autoType&#39;=&gt;&#39;class&#39;,
                               &#39;loadFile&#39;=&gt;&#39;shopping_cart.php&#39;,
                               );
&lt;/pre&gt;
&lt;pre&gt;
 $autoLoadConfig[30][] = array(&#39;autoType&#39;=&gt;&#39;classInstantiate&#39;,
                               &#39;className&#39;=&gt;&#39;cache&#39;,
                               &#39;objectName&#39;=&gt;&#39;zc_cache&#39;,
                               );
&lt;/pre&gt;
&lt;pre&gt;
 $autoLoadConfig[80][] = array(&#39;autoType&#39;=&gt;&#39;classInstantiate&#39;,
                               &#39;className&#39;=&gt;&#39;shoppingCart&#39;,
                               &#39;objectName&#39;=&gt;&#39;cart&#39;,
                               &#39;checkInstantiated&#39;=&gt;true,
                               &#39;classSession&#39;=&gt;true,
                               );
&lt;/pre&gt;
&lt;pre&gt;
 $autoLoadConfig[120][] = array(&#39;autoType&#39;=&gt;&#39;objectMethod&#39;,
                                &#39;objectName&#39;=&gt;&#39;navigation&#39;,
                                &#39;methodName&#39; =&gt; &#39;add_current_page&#39;,
                                );
&lt;/pre&gt;
&lt;p&gt;Taking these options one by one&lt;/p&gt;
&lt;h4 id=&#34;class&#34;&gt;class&lt;/h4&gt;
&lt;p&gt;Where &lt;code&gt;autotype=&amp;gt;&#39;class&#39;&lt;/code&gt; all we are really doing here is &amp;lsquo;including&amp;rsquo; the &amp;rsquo;loadFile&amp;rsquo;. However, in this case we draw the file from the includes/classes (DIR_WS_CLASS) directory.&lt;/p&gt;
&lt;h4 id=&#34;classinstantiate&#34;&gt;classInstantiate&lt;/h4&gt;
&lt;p&gt;If &lt;code&gt;autotype=&amp;gt;&#39;classInstantiate&#39;&lt;/code&gt; is specified it instantiates the class as: &lt;code&gt;objectName = new className();&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;An example based on the code above is&lt;/p&gt;
&lt;pre&gt;
$zc_cache = new cache();
&lt;/pre&gt;
&lt;h4 id=&#34;objectname&#34;&gt;objectName&lt;/h4&gt;
&lt;p&gt;One corollary to this is that we may need to instantiate a class that is bound to a session, like the shopping_cart class. 
In this case as from the example above we get&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$_SESSION[&amp;#39;cart&amp;#39;] = new shoppingCart();
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;and in fact we take that one step further:&lt;/p&gt;
&lt;h4 id=&#34;checkinstantiated&#34;&gt;checkInstantiated&lt;/h4&gt;
&lt;p&gt;Normally we only want to instantiate a session object if it is not already a session object. 
In this case we take advantage of the &lt;code&gt;checkInstantiated&lt;/code&gt; property, which would generate code:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;if (!$_SESSION[&amp;#39;cart&amp;#39;]) {
   $_SESSION[&amp;#39;cart&amp;#39;] = new shoppingCart();  
 }  
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;objectmethod&#34;&gt;objectMethod&lt;/h4&gt;
&lt;p&gt;To call a class method in the scope of &lt;code&gt;application_top.php&lt;/code&gt;, use &lt;code&gt;autotype=&#39;objectMethod&#39;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The code generated would be (based on the example above):&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$navigation-&amp;gt;add_current_page();
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;classpath&#34;&gt;classPath&lt;/h4&gt;
&lt;p&gt;Unless otherwise specified, the path where a class file is expected to be found is the catalog classes directory.
To override that you can pass a &lt;code&gt;classPath&lt;/code&gt; of &lt;code&gt;DIR_WS_CLASSES&lt;/code&gt; or a specific directory path.&lt;/p&gt;
&lt;p&gt;For example:&lt;/p&gt;
&lt;pre&gt;
 $autoLoadConfig[0][] = array(&#39;autoType&#39;=&gt;&#39;class&#39;,
                              &#39;loadFile&#39;=&gt;&#39;split_page_results.php&#39;,
                              &#39;classPath&#39;=&gt;DIR_WS_CLASSES);
&lt;/pre&gt;
&lt;h3 id=&#34;extending-the-system-autoloader&#34;&gt;Extending the system autoloader&lt;/h3&gt;
&lt;p&gt;To add additional loading/instantiation actions, add a new file to the &lt;code&gt;/includes/auto_loader/&lt;/code&gt; directory.&lt;/p&gt;
&lt;p&gt;The file you add here should have start with &lt;code&gt;config&lt;/code&gt; and have a &lt;code&gt;.php&lt;/code&gt; extension (ie: &lt;code&gt;config.yourapp_name.php&lt;/code&gt;), and should contain one or more control array definitions.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;This is the recommended method&lt;/strong&gt; to use for adding code to be executed within &lt;code&gt;application_top.php&lt;/code&gt;, and allows contribution authors to customise the code here in a way that will be generally unaffected by system upgrades.&lt;/p&gt;
&lt;h3 id=&#34;init_scripts&#34;&gt;init_scripts&lt;/h3&gt;
&lt;p&gt;The &lt;code&gt;init_scripts&lt;/code&gt; allow us to run some procedural core code.&lt;/p&gt;
&lt;p&gt;And also allows 3rd party plugins to override that procedural code.&lt;/p&gt;
&lt;h4 id=&#34;core-init_scripts&#34;&gt;core init_scripts&lt;/h4&gt;
&lt;p&gt;There are several default init_scripts in core code, located in the &lt;code&gt;includes/init_includes&lt;/code&gt; directory. Similar files exist also in the Admin directory structure.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;*   init_add_crumbs.php (Responsible for initialising the Breadcrumb)
*   init_cart_handler.php (Responsible for handling Cart actions)
*   init_category_path.php (Responsible for initialising Category Paths)
*   init_currencies.php (Responsible for initialising the Currencies Sub-System)
*   init_customer_auth.php (Responsible for checking customer status, either thru Down for Maintenance or the Approval level)
*   init_database.php (Responsible for initialising the DB layer)
*   init_db_config_read.php (Responsible for reading configuration data from database)
*   init_file_db_names.php (Responsible for loading File and Database tablename Defines)
*   init_general_funcs.php (Responsible for loading general functions from the includes/functions directory as well as the extra_functions folder)
*   init_gzip.php (Responsible for loading Gzip output-buffering functions)
*   init_header.php (Responsible for running page-header procedures)
*   init_languages.php (Responsible for loading multiple-language support sub-system)
*   init_sanitize.php (Responsible for loading input-sanitising code)
*   init_sefu.php (Responsible for loading code to provide search-engine-friendly URLs)
*   init_sessions.php (Responsible for loading Session code)
*   init_special_funcs.php (Responsible for loading specialized but necessary functions)
*   init_templates.php (Responsible for initialising the template System and activating template-specific language-content defines)
*   init_tlds.php (Responsible for setting Top Level Domain Variables)
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;overriding-init_scripts&#34;&gt;Overriding init_scripts&lt;/h4&gt;
&lt;p&gt;It is very simple to override a core init_script. The directory &lt;code&gt;includes/init_includes&lt;/code&gt; contains a directory called &lt;code&gt;overrides&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If I wanted to override the &lt;code&gt;includes/init_includes/init_sessions.php&lt;/code&gt; script then I would simply create a file called &lt;code&gt;init_sessions.php&lt;/code&gt; in the &lt;code&gt;includes/init_includes/overrides&lt;/code&gt; directory.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Dev: Notifier Report</title>
      <link>/zendocs_test1/dev/code/notifier_report/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/zendocs_test1/dev/code/notifier_report/</guid>
      <description>
        
        
        &lt;p&gt;Run on Zen Cart 1.5.7c.&lt;/p&gt;
&lt;!-- RELEASETIME - update --&gt;
&lt;!-- 
To generate this file, run notifier_report.php?markdown on 
an installation of the latest version of Zen Cart.  Get the notifier report
from https://github.com/lat9/notifier_report 
--&gt; 
&lt;h4 id=&#34;build_additionalphp&#34;&gt;build_additional.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#41:  &amp;#39;NOTIFY_MODULES_ADDITIONAL_IMAGES_FILE_MATCH&amp;#39;, array( &amp;#39;file&amp;#39; =&amp;gt; $file, &amp;#39;file_extension&amp;#39; =&amp;gt; $file_extension, &amp;#39;products_image&amp;#39; =&amp;gt; $products_image, &amp;#39;products_image_base&amp;#39; =&amp;gt; $products_image_base ), $current_image_match 
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;ipn_main_handlerphp&#34;&gt;ipn_main_handler.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#304: &amp;#39;NOTIFY_CHECKOUT_PROCESS_BEFORE_ORDER_TOTALS_PROCESS&amp;#39;
#306: &amp;#39;NOTIFY_CHECKOUT_PROCESS_AFTER_ORDER_TOTALS_PROCESS&amp;#39;
#318: &amp;#39;NOTIFY_CHECKOUT_PROCESS_AFTER_ORDER_CREATE&amp;#39;
#325: &amp;#39;NOTIFY_CHECKOUT_PROCESS_AFTER_PAYMENT_MODULES_AFTER_ORDER_CREATE&amp;#39;
#352: &amp;#39;NOTIFY_CHECKOUT_PROCESS_AFTER_ORDER_CREATE_ADD_PRODUCTS&amp;#39;
#355: &amp;#39;NOTIFY_CHECKOUT_PROCESS_AFTER_SEND_ORDER_EMAIL&amp;#39;
#389: &amp;#39;NOTIFY_CHECKOUT_PROCESS_HANDLE_AFFILIATES&amp;#39;, &amp;#39;paypalipn&amp;#39;
#470: &amp;#39;NOTIFY_PAYPALIPN_STATUS_HISTORY_UPDATE&amp;#39;, array($ordersID, $new_status, $txn_type)
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesclassesshopping_cartphp&#34;&gt;includes/classes/shopping_cart.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#77: &amp;#39;NOTIFIER_CART_INSTANTIATE_START&amp;#39;
#79: &amp;#39;NOTIFIER_CART_INSTANTIATE_END&amp;#39;
#99: &amp;#39;NOTIFIER_CART_RESTORE_CONTENTS_START&amp;#39;
#182: &amp;#39;NOTIFIER_CART_RESTORE_CONTENTS_END&amp;#39;
#198: &amp;#39;NOTIFIER_CART_RESET_START&amp;#39;, array(), $reset_database
#220: &amp;#39;NOTIFIER_CART_RESET_END&amp;#39;
#255: &amp;#39;NOTIFIER_CART_ADD_CART_START&amp;#39;, array(), $products_id, $qty, $attributes, $notify
#343: &amp;#39;NOTIFIER_CART_ADD_CART_END&amp;#39;, array(), $products_id, $qty, $attributes, $notify
#367: &amp;#39;NOTIFIER_CART_UPDATE_QUANTITY_START&amp;#39;, array(), $products_id, $quantity, $attributes
#443: &amp;#39;NOTIFIER_CART_UPDATE_QUANTITY_END&amp;#39;
#457: &amp;#39;NOTIFIER_CART_CLEANUP_START&amp;#39;
#475: &amp;#39;NOTIFIER_CART_CLEANUP_END&amp;#39;
#490: &amp;#39;NOTIFIER_CART_COUNT_CONTENTS_START&amp;#39;
#497: &amp;#39;NOTIFIER_CART_COUNT_CONTENTS_END&amp;#39;
#510: &amp;#39;NOTIFIER_CART_GET_QUANTITY_START&amp;#39;, array(), $products_id
#512: &amp;#39;NOTIFIER_CART_GET_QUANTITY_END_QTY&amp;#39;, array(), $products_id
#515: &amp;#39;NOTIFIER_CART_GET_QUANTITY_END_FALSE&amp;#39;, $products_id
#526: &amp;#39;NOTIFIER_CART_IN_CART_START&amp;#39;, array(), $products_id
#528: &amp;#39;NOTIFIER_CART_IN_CART_END_TRUE&amp;#39;, array(), $products_id
#531: &amp;#39;NOTIFIER_CART_IN_CART_END_FALSE&amp;#39;, $products_id
#543: &amp;#39;NOTIFIER_CART_REMOVE_START&amp;#39;, array(), $products_id
#560: &amp;#39;NOTIFIER_CART_REMOVE_END&amp;#39;
#568: &amp;#39;NOTIFIER_CART_REMOVE_ALL_START&amp;#39;
#570: &amp;#39;NOTIFIER_CART_REMOVE_ALL_END&amp;#39;
#624: &amp;#39;NOTIFY_CART_CALCULATE_PRODUCT_PRICE&amp;#39;, $products_id, $product-&amp;gt;fields
#702: &amp;#39;NOTIFY_CART_CALCULATE_ATTRIBUTE_PRICE&amp;#39;, $products_id, $attribute_price-&amp;gt;fields
#867: &amp;#39;NOTIFY_CART_CALCULATE_ATTRIBUTE_WEIGHT&amp;#39;, array(&amp;#39;products_id&amp;#39; =&amp;gt; $products_id, &amp;#39;options_id&amp;#39; =&amp;gt; $option), $attribute_weight-&amp;gt;fields
#934: &amp;#39;NOTIFY_CART_ATTRIBUTES_PRICE_START&amp;#39;, $products_id
#953: &amp;#39;NOTIFY_CART_ATTRIBUTES_PRICE_NEXT&amp;#39;, $products_id, $attribute_price-&amp;gt;fields
#1044: &amp;#39;NOTIFY_CART_ATTRIBUTES_PRICE_ONETIME_CHARGES_START&amp;#39;, $products_id
#1061: &amp;#39;NOTIFY_CART_ATTRIBUTES_PRICE_ONETIME_CHARGES_NEXT&amp;#39;, $products_id, $attribute_price-&amp;gt;fields
#1122: &amp;#39;NOTIFY_CART_ATTRIBUTES_WEIGHT_START&amp;#39;, $products_id
#1137: &amp;#39;NOTIFY_CART_ATTRIBUTES_WEIGHT_NEXT&amp;#39;, $products_id, $attribute_weight_info-&amp;gt;fields
#1170: &amp;#39;NOTIFIER_CART_GET_PRODUCTS_START&amp;#39;, array(), $check_for_valid_cart
#1184: &amp;#39;NOTIFY_CART_GET_PRODUCTS_NEXT&amp;#39;, $products_id, $products-&amp;gt;fields
#1351: &amp;#39;NOTIFIER_CART_GET_PRODUCTS_END&amp;#39;, array(), $products_array
#1360: &amp;#39;NOTIFIER_CART_SHOW_TOTAL_START&amp;#39;
#1362: &amp;#39;NOTIFIER_CART_SHOW_TOTAL_END&amp;#39;
#1372: &amp;#39;NOTIFIER_CART_SHOW_TOTAL_BEFORE_DISCOUNT_START&amp;#39;
#1374: &amp;#39;NOTIFIER_CART_SHOW_TOTAL_BEFORE_DISCOUNT_END&amp;#39;
#1977: &amp;#39;NOTIFIER_CART_OPTIONAL_ATTRIBUTE_ERROR_MESSAGE_HOOK&amp;#39;, $_POST, $the_list
#2216: &amp;#39;NOTIFY_CART_USER_ACTION&amp;#39;, array(), $goto, $parameters
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesclassesorderphp&#34;&gt;includes/classes/order.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#30: &amp;#39;NOTIFY_ORDER_INSTANTIATE&amp;#39;, array(), $order_id
#47: &amp;#39;NOTIFY_ORDER_BEFORE_QUERY&amp;#39;, array(), $order_id
#78: &amp;#39;NOTIFY_ORDER_COUPON_LINK&amp;#39;, $coupon_link-&amp;gt;fields, $zc_coupon_link
#232: &amp;#39;NOTIFY_ORDER_QUERY_ADD_PRODUCT&amp;#39;, $this-&amp;gt;products[$index], $index
#238: &amp;#39;NOTIFY_ORDER_AFTER_QUERY&amp;#39;, IS_ADMIN_FLAG, $this-&amp;gt;orderId
#244: &amp;#39;ORDER_QUERY_ADMIN_COMPLETE&amp;#39;, array(&amp;#39;orders_id&amp;#39; =&amp;gt; $this-&amp;gt;orderId)
#252: &amp;#39;NOTIFY_ORDER_CART_BEGINS&amp;#39;
#424: &amp;#39;NOTIFY_ORDER_CART_AFTER_ADDRESSES_SET&amp;#39;, &amp;#39;&amp;#39;, $taxCountryId, $taxZoneId
#455: &amp;#39;NOTIFY_ORDER_CART_ADD_PRODUCT_LIST&amp;#39;, array(&amp;#39;index&amp;#39;=&amp;gt;$index, &amp;#39;products&amp;#39;=&amp;gt;$products[$i])
#492: &amp;#39;NOTIFY_ORDER_CART_ADD_ATTRIBUTE_LIST&amp;#39;, array(&amp;#39;index&amp;#39;=&amp;gt;$index, &amp;#39;subindex&amp;#39;=&amp;gt;$subindex, &amp;#39;products&amp;#39;=&amp;gt;$products[$i], &amp;#39;attributes&amp;#39;=&amp;gt;$attributes)
#523: &amp;#39;NOTIFY_ORDER_CART_FINISHED&amp;#39;
#577: &amp;#39;NOTIFY_ORDER_CART_EXTERNAL_TAX_RATE_LOOKUP&amp;#39;, STORE_PRODUCT_TAX_BASIS, $products, $loop, $index, $taxCountryId, $taxZoneId, $taxRates
#604: &amp;#39;NOTIFY_ORDER_CART_EXTERNAL_TAX_HANDLING&amp;#39;, array(), $index, $taxCountryId, $taxZoneId
#614: &amp;#39;NOTIFY_ORDER_CART_SUBTOTAL_CALCULATE&amp;#39;, array(&amp;#39;shown_price&amp;#39; =&amp;gt; $shown_price)
#647: &amp;#39;NOTIFY_ORDER_CART_EXTERNAL_TAX_DURING_ORDER_CREATE&amp;#39;, array(), $zf_ot_modules
#658: &amp;#39;NOTIFY_ORDER_CART_ORDERSTATUS&amp;#39;
#724: &amp;#39;NOTIFY_ORDER_DURING_CREATE_ADDED_ORDER_HEADER&amp;#39;, array_merge(array(&amp;#39;orders_id&amp;#39; =&amp;gt; $this-&amp;gt;orderId, &amp;#39;shipping_weight&amp;#39; =&amp;gt; $_SESSION[&amp;#39;cart&amp;#39;]-&amp;gt;weight), $sql_data_array), $this-&amp;gt;orderId
#737: &amp;#39;NOTIFY_ORDER_DURING_CREATE_ADDED_ORDERTOTAL_LINE_ITEM&amp;#39;, $sql_data_array, $ot_insert_id
#764: &amp;#39;NOTIFY_ORDER_DURING_CREATE_ADDED_ORDER_COMMENT&amp;#39;, $sql_data_array, $osh_insert_id
#792: &amp;#39;NOTIFY_ORDER_PROCESSING_STOCK_DECREMENT_INIT&amp;#39;, array(&amp;#39;i&amp;#39;=&amp;gt;$i), $this-&amp;gt;products[$i], $i
#816: &amp;#39;NOTIFY_ORDER_PROCESSING_STOCK_DECREMENT_BEGIN&amp;#39;, $i, $stock_values
#843: &amp;#39;NOTIFY_ORDER_PROCESSING_BESTSELLERS_UPDATE&amp;#39;, array(), $this-&amp;gt;products[$i], $i
#848: &amp;#39;NOTIFY_ORDER_PROCESSING_STOCK_DECREMENT_END&amp;#39;, $i
#877: &amp;#39;NOTIFY_ORDER_DURING_CREATE_ADDED_PRODUCT_LINE_ITEM&amp;#39;, array_merge(array(&amp;#39;orders_products_id&amp;#39; =&amp;gt; $order_products_id, &amp;#39;i&amp;#39; =&amp;gt; $i), $sql_data_array), $order_products_id
#879: &amp;#39;NOTIFY_ORDER_PROCESSING_CREDIT_ACCOUNT_UPDATE_BEGIN&amp;#39;
#882: &amp;#39;NOTIFY_ORDER_PROCESSING_ATTRIBUTES_BEGIN&amp;#39;
#960: &amp;#39;NOTIFY_ORDER_DURING_CREATE_ADDED_ATTRIBUTE_LINE_ITEM&amp;#39;, array_merge(array(&amp;#39;orders_products_attributes_id&amp;#39; =&amp;gt; $opa_insert_id), $sql_data_array), $opa_insert_id
#974: &amp;#39;NOTIFY_ORDER_DURING_CREATE_ADDED_ATTRIBUTE_DOWNLOAD_LINE_ITEM&amp;#39;, $sql_data_array, $opd_insert_id
#980: &amp;#39;NOTIFY_ORDER_PROCESSING_ATTRIBUTES_EXIST&amp;#39;, $attributes_exist
#982: &amp;#39;NOTIFY_ORDER_DURING_CREATE_ADD_PRODUCTS&amp;#39;, $i, $custom_insertable_text
#1010: &amp;#39;NOTIFY_ORDER_PROCESSING_ONE_TIME_CHARGES_BEGIN&amp;#39;, $i
#1034: &amp;#39;NOTIFY_ORDER_AFTER_ORDER_CREATE_ADD_PRODUCTS&amp;#39;
#1047: &amp;#39;NOTIFY_ORDER_SEND_EMAIL_INITIALIZE&amp;#39;, array(), $zf_insert_id, $order_totals, $zf_mode
#1051: &amp;#39;NOTIFY_ORDER_SEND_LOW_STOCK_EMAILS&amp;#39;
#1096: &amp;#39;NOTIFY_ORDER_EMAIL_BEFORE_PRODUCTS&amp;#39;, array(), $email_order, $html_msg
#1160: &amp;#39;NOTIFY_ORDER_SET_ORDER_MESSAGE&amp;#39;
#1182: &amp;#39;NOTIFY_ORDER_INVOICE_CONTENT_READY_TO_SEND&amp;#39;, array(&amp;#39;zf_insert_id&amp;#39; =&amp;gt; $zf_insert_id, &amp;#39;text_email&amp;#39; =&amp;gt; $email_order, &amp;#39;html_email&amp;#39; =&amp;gt; $html_msg), $email_order, $html_msg, $send_customer_email
#1203: &amp;#39;NOTIFY_ORDER_INVOICE_CONTENT_FOR_ADDITIONAL_EMAILS&amp;#39;, $zf_insert_id, $email_order, $html_msg
#1210: &amp;#39;NOTIFY_ORDER_AFTER_SEND_ORDER_EMAIL&amp;#39;, $zf_insert_id, $email_order, $extra_info, $html_msg
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesclassesshippingphp&#34;&gt;includes/classes/shipping.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#26: &amp;#39;NOTIFY_SHIPPING_CLASS_GET_INSTALLED_MODULES&amp;#39;, $module
#63: &amp;#39;NOTIFY_SHIPPING_MODULE_ENABLE&amp;#39;, $include_modules[$i][&amp;#39;class&amp;#39;], $include_modules[$i][&amp;#39;class&amp;#39;]
#82: &amp;#39;NOTIFY_SHIPPING_CHECK_ENABLED_FOR_ZONE&amp;#39;, array(), $class, $enabled
#87: &amp;#39;NOTIFY_SHIPPING_CHECK_ENABLED&amp;#39;, array(), $class, $enabled
#95: &amp;#39;NOTIFY_SHIPPING_MODULE_PRE_CALCULATE_BOXES_AND_TARE&amp;#39;, array(), $total_weight, $shipping_weight, $shipping_quoted, $shipping_num_boxes
#143: &amp;#39;NOTIFY_SHIPPING_MODULE_CALCULATE_BOXES_AND_TARE&amp;#39;, array(), $total_weight, $shipping_weight, $shipping_quoted, $shipping_num_boxes
#179: &amp;#39;NOTIFY_SHIPPING_MODULE_GET_ALL_QUOTES&amp;#39;, $quotes_array, $quotes_array
#221: &amp;#39;NOTIFY_SHIPPING_MODULE_CALCULATE_CHEAPEST&amp;#39;, $cheapest, $cheapest, $rates
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesclassestableviewcontrollersbasecontrollerphp&#34;&gt;includes/classes/TableViewControllers/BaseController.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#194: &amp;#39;ADMIN_VIEW_CONTROLLER_GET_ACTION&amp;#39;, $action
#255: &amp;#39;TABLE_CONTROLLER_SET_TABLE_DESC_DEFAULTS&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesclassespaymentphp&#34;&gt;includes/classes/payment.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#27: &amp;#39;NOTIFY_PAYMENT_CLASS_GET_INSTALLED_MODULES&amp;#39;, $module
#78: &amp;#39;NOTIFY_PAYMENT_MODULE_ENABLE&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesclassesquerybuilderphp&#34;&gt;includes/classes/QueryBuilder.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#47: &amp;#39;NOTIFY_QUERYBUILDER_INIT_START&amp;#39;
#63: &amp;#39;NOTIFY_QUERYBUILDER_INIT_END&amp;#39;
#75: &amp;#39;NOTIFY_QUERYBUILDER_PROCESSQUERY_START&amp;#39;
#89: &amp;#39;NOTIFY_QUERYBUILDER_PROCESSQUERY_END&amp;#39;
#94: &amp;#39;NOTIFY_QUERYBUILDER_SETFINALQUERY_START&amp;#39;
#102: &amp;#39;NOTIFY_QUERYBUILDER_SETFINALQUERY_END&amp;#39;
#110: &amp;#39;NOTIFY_QUERYBUILDER_PREPROCESSJOINS_START&amp;#39;
#115: &amp;#39;NOTIFY_QUERYBUILDER_PREPROCESSJOINS_END&amp;#39;
#124: &amp;#39;NOTIFY_QUERYBUILDER_PROCESSJOINS_START&amp;#39;
#136: &amp;#39;NOTIFY_QUERYBUILDER_PROCESSJOINS_END&amp;#39;
#146: &amp;#39;NOTIFY_QUERYBUILDER_PROCESSJOINSCUSTOMAND_START&amp;#39;
#150: &amp;#39;NOTIFY_QUERYBUILDER_PROCESSJOINSCUSTOMAND_END&amp;#39;
#160: &amp;#39;NOTIFY_QUERYBUILDER_PROCESSJOINADDCOLUMN_START&amp;#39;
#168: &amp;#39;NOTIFY_QUERYBUILDER_PROCESSJOINADDCOLUMN_ENDT&amp;#39;
#178: &amp;#39;NOTIFY_QUERYBUILDER_PROCESSJOINFKEYFIELD_START&amp;#39;
#195: &amp;#39;NOTIFY_QUERYBUILDER_PROCESSJOINFKEYFIELD_END&amp;#39;
#203: &amp;#39;NOTIFY_QUERYBUILDER_PROCESSWHERECLAUSE_START&amp;#39;
#215: &amp;#39;NOTIFY_QUERYBUILDER_PROCESSWHERECLAUSE_END&amp;#39;
#225: &amp;#39;NOTIFY_QUERYBUILDER_PROCESSWHERECLAUSETEST_START&amp;#39;
#238: &amp;#39;NOTIFY_QUERYBUILDER_PROCESSWHERECLAUSETEST_END&amp;#39;
#246: &amp;#39;NOTIFY_QUERYBUILDER_PROCESSORDERBYS_START&amp;#39;
#261: &amp;#39;NOTIFY_QUERYBUILDER_PROCESSORDERBYS_END&amp;#39;
#269: &amp;#39;NOTIFY_QUERYBUILDER_PROCESSGROUPBYS_START&amp;#39;
#284: &amp;#39;NOTIFY_QUERYBUILDER_PROCESSGROUPBYS_END&amp;#39;
#311: &amp;#39;NOTIFY_QUERYBUILDER_PROCESSSELECTLIST_START&amp;#39;
#319: &amp;#39;NOTIFY_QUERYBUILDER_PROCESSSELECTLIST_END&amp;#39;
#327: &amp;#39;NOTIFY_QUERYBUILDER_PROCESSBINDVARS_START&amp;#39;
#337: &amp;#39;NOTIFY_QUERYBUILDER_PROCESSBINDVARS_END&amp;#39;
#368: &amp;#39;NOTIFY_QUERYBUILDER_SETPARTS_START&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesclassesobserversautodownloads_via_streamingphp&#34;&gt;includes/classes/observers/auto.downloads_via_streaming.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#42: &amp;#39;NOTIFY_DOWNLOAD_WITHOUT_REDIRECT___COMPLETED&amp;#39;, $origin_filename
#54: &amp;#39;NOTIFY_DOWNLOAD_IN_CHUNKS___COMPLETED&amp;#39;, $origin_filename
#77: &amp;#39;NOTIFY_DOWNLOAD_WITHOUT_REDIRECT_VIA_CHUNKS___COMPLETED&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesclassesobserversautodownloads_via_redirectphp&#34;&gt;includes/classes/observers/auto.downloads_via_redirect.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#77: &amp;#39;NOTIFY_DOWNLOAD_VIA_SYMLINK___BEGINS&amp;#39;, array($download_link, $origin_filename, $tempdir)
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesinit_includesinit_languagesphp&#34;&gt;includes/init_includes/init_languages.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#18: &amp;#39;NOTIFY_LANGUAGE_CHANGE_REQUESTED_BY_VISITOR&amp;#39;, $_GET[&amp;#39;language&amp;#39;], $lng
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesinit_includesinit_canonicalphp&#34;&gt;includes/init_includes/init_canonical.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#41: &amp;#39;NOTIFY_INIT_CANONICAL_PARAM_WHITELIST&amp;#39;, $current_page, $excludeParams, $keepableParams, $includeCPath
#112: &amp;#39;NOTIFY_INIT_CANONICAL_DEFAULT&amp;#39;, $current_page, $excludeParams, $canonicalLink
#114: &amp;#39;NOTIFY_INIT_CANONICAL_FINAL&amp;#39;, $current_page, $excludeParams, $canonicalLink
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesinit_includesinit_customer_authphp&#34;&gt;includes/init_includes/init_customer_auth.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#57: &amp;#39;NOTIFY_LOGIN_BANNED&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesfunctionshtml_outputphp&#34;&gt;includes/functions/html_output.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#17: &amp;#39;NOTIFY_SEFU_INTERCEPT&amp;#39;, array(), $link, $page, $parameters, $connection, $add_session_id, $static, $use_dir_ws_catalog
#201: &amp;#39;NOTIFY_HANDLE_IMAGE&amp;#39;, array($newimg)
#204: &amp;#39;NOTIFY_OPTIMIZE_IMAGE&amp;#39;, $template_dir, $src, $alt, $width, $height, $parameters
#282: &amp;#39;PAGE_OUTPUT_IMAGE_SUBMIT&amp;#39;
#306: &amp;#39;PAGE_OUTPUT_IMAGE_BUTTON&amp;#39;
#358:  &amp;#39;NOTIFY_ZEN_CSS_BUTTON_SUBMIT&amp;#39;, array( &amp;#39;button_name&amp;#39; =&amp;gt; $button_name, &amp;#39;text&amp;#39; =&amp;gt; $text, &amp;#39;sec_class&amp;#39; =&amp;gt; $sec_class, &amp;#39;parameters&amp;#39; =&amp;gt; $parameters, ), $css_button 
#380:  &amp;#39;NOTIFY_ZEN_CSS_BUTTON_BUTTON&amp;#39;, array( &amp;#39;button_name&amp;#39; =&amp;gt; $button_name, &amp;#39;text&amp;#39; =&amp;gt; $text, &amp;#39;sec_class&amp;#39; =&amp;gt; $sec_class, &amp;#39;parameters&amp;#39; =&amp;gt; $parameters, ), $css_button 
#435:  &amp;#39;NOTIFY_ZEN_DRAW_INPUT_FIELD_OVERRIDE&amp;#39;, array( &amp;#39;name&amp;#39; =&amp;gt; $name, &amp;#39;value&amp;#39; =&amp;gt; $value, &amp;#39;parameters&amp;#39; =&amp;gt; $parameters, &amp;#39;type&amp;#39; =&amp;gt; $type, &amp;#39;reinsert_value&amp;#39; =&amp;gt; $reinsert_value, &amp;#39;required&amp;#39; =&amp;gt; $required, ), $field 
#465:  &amp;#39;NOTIFY_ZEN_DRAW_INPUT_FIELD&amp;#39;, array( &amp;#39;name&amp;#39; =&amp;gt; $name, &amp;#39;value&amp;#39; =&amp;gt; $value, &amp;#39;parameters&amp;#39; =&amp;gt; $parameters, &amp;#39;type&amp;#39; =&amp;gt; $type, &amp;#39;reinsert_value&amp;#39; =&amp;gt; $reinsert_value, &amp;#39;required&amp;#39; =&amp;gt; $required, ), $field 
#500:  &amp;#39;NOTIFY_ZEN_DRAW_SELECTION_FIELD_OVERRIDE&amp;#39;, array( &amp;#39;name&amp;#39; =&amp;gt; $name, &amp;#39;value&amp;#39; =&amp;gt; $value, &amp;#39;parameters&amp;#39; =&amp;gt; $parameters, &amp;#39;type&amp;#39; =&amp;gt; $type, &amp;#39;checked&amp;#39; =&amp;gt; $checked ), $selection 
#535:  &amp;#39;NOTIFY_ZEN_DRAW_SELECTION_FIELD&amp;#39;, array( &amp;#39;name&amp;#39; =&amp;gt; $name, &amp;#39;value&amp;#39; =&amp;gt; $value, &amp;#39;parameters&amp;#39; =&amp;gt; $parameters, &amp;#39;type&amp;#39; =&amp;gt; $type, &amp;#39;checked&amp;#39; =&amp;gt; $checked ), $selection 
#571:  &amp;#39;NOTIFY_ZEN_DRAW_TEXTAREA_FIELD_OVERRIDE&amp;#39;, array( &amp;#39;name&amp;#39; =&amp;gt; $name, &amp;#39;width&amp;#39; =&amp;gt; $width, &amp;#39;height&amp;#39; =&amp;gt; $height, &amp;#39;text&amp;#39; =&amp;gt; $text, &amp;#39;parameters&amp;#39; =&amp;gt; $parameters, &amp;#39;reinsert_value&amp;#39; =&amp;gt; $reinsert_value, ), $field 
#604:  &amp;#39;NOTIFY_ZEN_DRAW_TEXTAREA_FIELD&amp;#39;, array( &amp;#39;name&amp;#39; =&amp;gt; $name, &amp;#39;width&amp;#39; =&amp;gt; $width, &amp;#39;height&amp;#39; =&amp;gt; $height, &amp;#39;text&amp;#39; =&amp;gt; $text, &amp;#39;parameters&amp;#39; =&amp;gt; $parameters, &amp;#39;reinsert_value&amp;#39; =&amp;gt; $reinsert_value, ), $field 
#679:  &amp;#39;NOTIFY_ZEN_DRAW_PULL_DOWN_MENU_OVERRIDE&amp;#39;, array( &amp;#39;name&amp;#39; =&amp;gt; $name, &amp;#39;values&amp;#39; =&amp;gt; $values, &amp;#39;default&amp;#39; =&amp;gt; $default, &amp;#39;parameters&amp;#39; =&amp;gt; $parameters, &amp;#39;required&amp;#39; =&amp;gt; $required, ), $field 
#728:  &amp;#39;NOTIFY_ZEN_DRAW_PULL_DOWN_MENU&amp;#39;, array( &amp;#39;name&amp;#39; =&amp;gt; $name, &amp;#39;values&amp;#39; =&amp;gt; $values, &amp;#39;default&amp;#39; =&amp;gt; $default, &amp;#39;parameters&amp;#39; =&amp;gt; $parameters, &amp;#39;required&amp;#39; =&amp;gt; $required, ), $field 
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesfunctionsfunctions_productsphp&#34;&gt;includes/functions/functions_products.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#76: &amp;#39;NOTIFY_PRODUCT_INFO_PRODUCT_STATUS_CHECK&amp;#39;, $product_info-&amp;gt;fields, $product_status, $should_throw_404, $response_code, $use_custom_response_code
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesfunctionsfunctions_pricesphp&#34;&gt;includes/functions/functions_prices.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#130: &amp;#39;ZEN_GET_PRODUCTS_BASE_PRICE&amp;#39;, $products_id, $products_base_price, $base_price_is_handled
#240:  &amp;#39;NOTIFY_ZEN_GET_PRODUCTS_DISPLAY_PRICE_SALE&amp;#39;, array( &amp;#39;products_id&amp;#39; =&amp;gt; $products_id, &amp;#39;display_sale_price&amp;#39; =&amp;gt; $display_sale_price, &amp;#39;display_special_price&amp;#39; =&amp;gt; $display_special_price, &amp;#39;display_normal_price&amp;#39; =&amp;gt; $display_normal_price, &amp;#39;products_tax_class_id&amp;#39; =&amp;gt; $product_check-&amp;gt;fields[&amp;#39;products_tax_class_id&amp;#39;] ), $pricing_handled, $show_sale_discount 
#280:  &amp;#39;NOTIFY_ZEN_GET_PRODUCTS_DISPLAY_PRICE_SPECIAL&amp;#39;, array( &amp;#39;products_id&amp;#39; =&amp;gt; $products_id, &amp;#39;display_sale_price&amp;#39; =&amp;gt; $display_sale_price, &amp;#39;display_special_price&amp;#39; =&amp;gt; $display_special_price, &amp;#39;display_normal_price&amp;#39; =&amp;gt; $display_normal_price, &amp;#39;products_tax_class_id&amp;#39; =&amp;gt; $product_check-&amp;gt;fields[&amp;#39;products_tax_class_id&amp;#39;], &amp;#39;product_is_free&amp;#39; =&amp;gt; $product_check-&amp;gt;fields[&amp;#39;product_is_free&amp;#39;] ), $pricing_handled, $show_normal_price, $show_special_price, $show_sale_price 
#318:  &amp;#39;NOTIFY_ZEN_GET_PRODUCTS_DISPLAY_PRICE_NORMAL&amp;#39;, array( &amp;#39;products_id&amp;#39; =&amp;gt; $products_id, &amp;#39;display_sale_price&amp;#39; =&amp;gt; $display_sale_price, &amp;#39;display_special_price&amp;#39; =&amp;gt; $display_special_price, &amp;#39;display_normal_price&amp;#39; =&amp;gt; $display_normal_price, &amp;#39;products_tax_class_id&amp;#39; =&amp;gt; $product_check-&amp;gt;fields[&amp;#39;products_tax_class_id&amp;#39;], &amp;#39;product_is_free&amp;#39; =&amp;gt; $product_check-&amp;gt;fields[&amp;#39;product_is_free&amp;#39;] ), $pricing_handled, $show_normal_price, $show_special_price, $show_sale_price 
#361:  &amp;#39;NOTIFY_ZEN_GET_PRODUCTS_DISPLAY_PRICE_FREE_OR_CALL&amp;#39;, array( &amp;#39;product_is_free&amp;#39; =&amp;gt; $product_check-&amp;gt;fields[&amp;#39;product_is_free&amp;#39;], &amp;#39;product_is_call&amp;#39; =&amp;gt; $product_check-&amp;gt;fields[&amp;#39;product_is_call&amp;#39;], ), $tags_handled, $free_tag, $call_tag 
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesfunctionsfunctions_osh_updatephp&#34;&gt;includes/functions/functions_osh_update.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#70: &amp;#39;ZEN_UPDATE_ORDERS_HISTORY_PRE_EMAIL&amp;#39;, array(&amp;#39;message&amp;#39; =&amp;gt; $message), $osh_additional_comments
#88: &amp;#39;ZEN_UPDATE_ORDERS_HISTORY_STATUS_VALUES&amp;#39;, array(&amp;#39;orders_id&amp;#39; =&amp;gt; $orders_id, &amp;#39;new&amp;#39; =&amp;gt; $orders_new_status, &amp;#39;old&amp;#39; =&amp;gt; $orders_current_status)
#126: &amp;#39;ZEN_UPDATE_ORDERS_HISTORY_SET_ORDER_UPDATE_MESSAGE&amp;#39;, $orders_id, $email_order_message
#192: &amp;#39;ZEN_UPDATE_ORDERS_HISTORY_BEFORE_INSERT&amp;#39;, array(), $osh_sql
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesfunctionsfunctions_customersphp&#34;&gt;includes/functions/functions_customers.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#97:  &amp;#39;NOTIFY_END_ZEN_ADDRESS_FORMAT&amp;#39;, array( &amp;#39;format&amp;#39; =&amp;gt; $fmt, &amp;#39;address&amp;#39; =&amp;gt; $incoming, &amp;#39;firstname&amp;#39; =&amp;gt; $address[&amp;#39;$firstname&amp;#39;], &amp;#39;lastname&amp;#39; =&amp;gt; $address[&amp;#39;$lastname&amp;#39;], &amp;#39;street&amp;#39; =&amp;gt; $address[&amp;#39;$street&amp;#39;], &amp;#39;suburb&amp;#39; =&amp;gt; $address[&amp;#39;$suburb&amp;#39;], &amp;#39;city&amp;#39; =&amp;gt; $address[&amp;#39;$city&amp;#39;], &amp;#39;state&amp;#39; =&amp;gt; $address[&amp;#39;$state&amp;#39;], &amp;#39;country&amp;#39; =&amp;gt; $address[&amp;#39;$country&amp;#39;], &amp;#39;postcode&amp;#39; =&amp;gt; $address[&amp;#39;$postcode&amp;#39;], &amp;#39;company&amp;#39; =&amp;gt; $address[&amp;#39;$company&amp;#39;], &amp;#39;streets&amp;#39; =&amp;gt; $address[&amp;#39;$streets&amp;#39;], &amp;#39;statecomma&amp;#39; =&amp;gt; $address[&amp;#39;$statecomma&amp;#39;], &amp;#39;zip&amp;#39; =&amp;gt; $address[&amp;#39;$zip&amp;#39;], &amp;#39;cr&amp;#39; =&amp;gt; $address[&amp;#39;$cr&amp;#39;], &amp;#39;hr&amp;#39; =&amp;gt; $address[&amp;#39;$hr&amp;#39;], ), $address_out 
#139: &amp;#39;NOTIFY_ZEN_ADDRESS_LABEL&amp;#39;, array(), $customers_id, $address_id, $address-&amp;gt;fields
#264: &amp;#39;NOTIFY_ZEN_IN_GUEST_CHECKOUT&amp;#39;, &amp;#39;&amp;#39;, $in_guest_checkout
#274: &amp;#39;NOTIFY_ZEN_IS_LOGGED_IN&amp;#39;, &amp;#39;&amp;#39;, $is_logged_in
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesfunctionsfunctions_lookupsphp&#34;&gt;includes/functions/functions_lookups.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#164:  &amp;#39;ZEN_GET_PRODUCTS_STOCK&amp;#39;, $products_id, $products_quantity, $quantity_handled 
#199:  &amp;#39;ZEN_CHECK_STOCK_MESSAGE&amp;#39;, array( $products_id, $products_quantity ), $out_of_stock_message 
#301: &amp;#39;NOTIFY_FUNCTIONS_LOOKUPS_REQUIRES_ATTRIBUTES_SELECTION&amp;#39;, &amp;#39;&amp;#39;, $query, $noSingles, $noDoubles
#357: &amp;#39;FUNCTIONS_LOOKUPS_OPTION_NAME_NO_VALUES_OPT_TYPE&amp;#39;, $opt_type, $test_var
#378: &amp;#39;NOTIFY_ZEN_HAS_PRODUCT_ATTRIBUTES_VALUES&amp;#39;, $products_id, $value_to_return
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesfunctionsfunctions_generalphp&#34;&gt;includes/functions/functions_general.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#627: &amp;#39;NOTIFY_ZEN_INVALID_IP_DETECTED&amp;#39;, $original_ip
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesfunctionsfunctions_taxesphp&#34;&gt;includes/functions/functions_taxes.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#19:  &amp;#39;NOTIFY_ZEN_GET_TAX_RATE_OVERRIDE&amp;#39;, array( &amp;#39;class_id&amp;#39; =&amp;gt; $class_id, &amp;#39;country_id&amp;#39; =&amp;gt; $country_id, &amp;#39;zone_id&amp;#39; =&amp;gt; $zone_id ), $tax_rate 
#83:  &amp;#39;NOTIFY_ZEN_GET_TAX_DESCRIPTION_OVERRIDE&amp;#39;, array( &amp;#39;class_id&amp;#39; =&amp;gt; $class_id, &amp;#39;country_id&amp;#39; =&amp;gt; $country_id, &amp;#39;zone_id&amp;#39; =&amp;gt; $zone_id ), $tax_description 
#142:  &amp;#39;NOTIFY_ZEN_GET_MULTIPLE_TAX_RATES_OVERRIDE&amp;#39;, array( &amp;#39;class_id&amp;#39; =&amp;gt; $class_id, &amp;#39;country_id&amp;#39; =&amp;gt; $country_id, &amp;#39;zone_id&amp;#39; =&amp;gt; $zone_id, &amp;#39;tax_description&amp;#39; =&amp;gt; $tax_description ), $rates_array 
#284:  &amp;#39;ZEN_GET_TAX_LOCATIONS&amp;#39;, array( &amp;#39;country&amp;#39; =&amp;gt; $store_country, &amp;#39;zone&amp;#39; =&amp;gt; $store_zone ), $tax_address 
#347:  &amp;#39;NOTIFY_ZEN_GET_ALL_TAX_DESCRIPTIONS_OVERRIDE&amp;#39;, array( &amp;#39;country_id&amp;#39; =&amp;gt; $country_id, &amp;#39;zone_id&amp;#39; =&amp;gt; $zone_id ), $tax_descriptions 
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesfunctionsfunctions_emailphp&#34;&gt;includes/functions/functions_email.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#92: &amp;#39;NOTIFY_EMAIL_ADDRESS_TEST&amp;#39;, array(), $to_name, $to_email_address, $email_subject
#95: &amp;#39;NOTIFY_EMAIL_ADDRESS_VALIDATION_FAILURE&amp;#39;, sprintf(EMAIL_SEND_FAILED . &amp;#39; (failed validation)&amp;#39;, $to_name, $to_email_address, $email_subject)
#171: &amp;#39;NOTIFY_EMAIL_DETERMINING_EMAIL_FORMAT&amp;#39;, $to_email_address, $customers_email_format, $module
#191: &amp;#39;NOTIFY_EMAIL_AFTER_EMAIL_FORMAT_DETERMINED&amp;#39;
#282: &amp;#39;NOTIFY_EMAIL_BEFORE_PROCESS_ATTACHMENTS&amp;#39;, array(&amp;#39;attachments&amp;#39;=&amp;gt;$attachments_list, &amp;#39;module&amp;#39;=&amp;gt;$module), $mail, $attachments_list
#312: &amp;#39;NOTIFY_EMAIL_AFTER_PROCESS_ATTACHMENTS&amp;#39;, sizeof($attachments_list)
#354: &amp;#39;NOTIFY_EMAIL_READY_TO_SEND&amp;#39;, array($mail), $mail
#371: &amp;#39;NOTIFY_EMAIL_AFTER_SEND&amp;#39;
#376: &amp;#39;NOTIFY_EMAIL_AFTER_SEND_WITH_ALL_PARAMS&amp;#39;, array($to_name, $to_email_address, $from_email_name, $from_email_address, $email_subject, $email_html, $text, $module, $ErrorInfo)
#383: &amp;#39;NOTIFY_EMAIL_AFTER_SEND_ALL_SPECIFIED_ADDRESSES&amp;#39;
#410: &amp;#39;NOTIFY_EMAIL_BEGIN_ARCHIVE_WRITE&amp;#39;, array($to_name, $to_email_address, $from_email_name, $from_email_address, $email_subject, $email_html, $email_text, $module, $error_msgs)
#740: &amp;#39;NOTIFY_EMAIL_VALIDATION_TEST&amp;#39;, array($email, $valid_address)
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includestemplatesresponsive_classiccommontpl_columnar_displayphp&#34;&gt;includes/templates/responsive_classic/common/tpl_columnar_display.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#12: &amp;#39;NOTIFY_TPL_COLUMNAR_DISPLAY_START&amp;#39;, $current_page_base, $list_box_contents, $title
#45: &amp;#39;NOTIFY_TPL_COLUMNAR_DISPLAY_END&amp;#39;, $current_page_base, $list_box_contents, $title
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includestemplatesresponsive_classiccommonmain_template_varsphp&#34;&gt;includes/templates/responsive_classic/common/main_template_vars.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#20: &amp;#39;NOTIFY_MAIN_TEMPLATE_VARS_START&amp;#39;, $template_dir
#52: &amp;#39;NOTIFY_MAIN_TEMPLATE_VARS_END&amp;#39;, $template_dir, $body_code
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includestemplatesresponsive_classiccommonhtml_headerphp&#34;&gt;includes/templates/responsive_classic/common/html_header.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#16: &amp;#39;NOTIFY_HTML_HEAD_START&amp;#39;, $current_page_base, $template_dir
#212: &amp;#39;NOTIFY_HTML_HEAD_END&amp;#39;, $current_page_base
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includestemplatesresponsive_classiccommontpl_main_pagephp&#34;&gt;includes/templates/responsive_classic/common/tpl_main_page.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#266: &amp;#39;NOTIFY_FOOTER_END&amp;#39;, $current_page
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includestemplatesresponsive_classiccommontpl_tabular_displayphp&#34;&gt;includes/templates/responsive_classic/common/tpl_tabular_display.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#13: &amp;#39;NOTIFY_TPL_TABULAR_DISPLAY_START&amp;#39;, $current_page_base, $list_box_contents
#50: &amp;#39;NOTIFY_TPL_TABULAR_DISPLAY_END&amp;#39;, $current_page_base, $list_box_contents
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includestemplatestemplate_defaultcommontpl_columnar_displayphp&#34;&gt;includes/templates/template_default/common/tpl_columnar_display.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#12: &amp;#39;NOTIFY_TPL_COLUMNAR_DISPLAY_START&amp;#39;, $current_page_base, $list_box_contents, $title
#45: &amp;#39;NOTIFY_TPL_COLUMNAR_DISPLAY_END&amp;#39;, $current_page_base, $list_box_contents, $title
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includestemplatestemplate_defaultcommonmain_template_varsphp&#34;&gt;includes/templates/template_default/common/main_template_vars.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#20: &amp;#39;NOTIFY_MAIN_TEMPLATE_VARS_START&amp;#39;, $template_dir
#38: &amp;#39;NOTIFY_MAIN_TEMPLATE_VARS_END&amp;#39;, $template_dir, $body_code
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includestemplatestemplate_defaultcommonhtml_headerphp&#34;&gt;includes/templates/template_default/common/html_header.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#16: &amp;#39;NOTIFY_HTML_HEAD_START&amp;#39;, $current_page_base, $template_dir
#166: &amp;#39;NOTIFY_HTML_HEAD_END&amp;#39;, $current_page_base
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includestemplatestemplate_defaultcommontpl_main_pagephp&#34;&gt;includes/templates/template_default/common/tpl_main_page.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#195: &amp;#39;NOTIFY_FOOTER_END&amp;#39;, $current_page
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includestemplatestemplate_defaultcommontpl_tabular_displayphp&#34;&gt;includes/templates/template_default/common/tpl_tabular_display.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#13: &amp;#39;NOTIFY_TPL_TABULAR_DISPLAY_START&amp;#39;, $current_page_base, $list_box_contents
#48: &amp;#39;NOTIFY_TPL_TABULAR_DISPLAY_END&amp;#39;, $current_page_base, $list_box_contents
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulesfeatured_productsphp&#34;&gt;includes/modules/featured_products.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#68: &amp;#39;NOTIFY_MODULES_FEATURED_PRODUCTS_B4_LIST_BOX&amp;#39;, array(), $featured_products-&amp;gt;fields, $products_price
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulesmain_product_imagephp&#34;&gt;includes/modules/main_product_image.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#17: &amp;#39;NOTIFY_MODULES_MAIN_PRODUCT_IMAGE_START&amp;#39;
#39:  &amp;#39;NOTIFY_MODULES_MAIN_PRODUCT_IMAGE_FILENAME&amp;#39;, $products_image, $main_image_handled, $products_image_extension, $products_image_base, $products_image_medium, $products_image_large 
#76: &amp;#39;NOTIFY_MODULES_MAIN_PRODUCT_IMAGE_END&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulesspecials_indexphp&#34;&gt;includes/modules/specials_index.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#72: &amp;#39;NOTIFY_MODULES_SPECIALS_INDEX_B4_LIST_BOX&amp;#39;, array(), $specials_index-&amp;gt;fields, $products_price
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulesresponsive_classicezpages_bar_headerphp&#34;&gt;includes/modules/responsive_classic/ezpages_bar_header.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#12: &amp;#39;NOTIFY_START_EZPAGES_HEADERBAR&amp;#39;
#71: &amp;#39;NOTIFY_END_EZPAGES_HEADERBAR&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulesresponsive_classicproduct_listingphp&#34;&gt;includes/modules/responsive_classic/product_listing.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#33: &amp;#39;NOTIFY_MODULE_PRODUCT_LISTING_RESULTCOUNT&amp;#39;, $listing_split-&amp;gt;number_of_rows
#198: &amp;#39;NOTIFY_MODULES_PRODUCT_LISTING_PRODUCTS_BUTTON&amp;#39;, array(), $listing-&amp;gt;fields, $lc_button
#286: &amp;#39;NOTIFY_PRODUCT_LISTING_END&amp;#39;, $current_page_base, $list_box_contents, $listing_split, $show_top_submit_button, $show_bottom_submit_button, $show_submit, $how_many
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulescheckout_new_addressphp&#34;&gt;includes/modules/checkout_new_address.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#10: &amp;#39;NOTIFY_MODULE_START_CHECKOUT_NEW_ADDRESS&amp;#39;
#134: &amp;#39;NOTIFY_MODULE_CHECKOUT_NEW_ADDRESS_VALIDATION&amp;#39;, array(), $error
#160: &amp;#39;NOTIFY_MODULE_CHECKOUT_ADDED_ADDRESS_BOOK_RECORD&amp;#39;, array_merge(array(&amp;#39;address_id&amp;#39; =&amp;gt; $address_book_id ), $sql_data_array)
#254: &amp;#39;NOTIFY_MODULE_END_CHECKOUT_NEW_ADDRESS&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulesmeta_tagsphp&#34;&gt;includes/modules/meta_tags.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#15: &amp;#39;NOTIFY_MODULE_START_META_TAGS&amp;#39;, $current_page_base, $metatag_page_name, $meta_tags_over_ride
#34: &amp;#39;NOTIFY_MODULE_META_TAGS_BUILDKEYWORDS&amp;#39;, CUSTOM_KEYWORDS, $keywords_string_metatags
#333: &amp;#39;NOTIFY_MODULE_META_TAGS_UNSPECIFIEDPAGE&amp;#39;, $current_page_base, $metatag_page_name, $meta_tags_over_ride, $metatags_title, $metatags_description, $metatags_keywords
#341: &amp;#39;NOTIFY_MODULE_META_TAGS_OVERRIDE&amp;#39;, $metatag_page_name, $meta_tags_over_ride, $metatags_title, $metatags_description, $metatags_keywords
#351: &amp;#39;NOTIFY_MODULE_END_META_TAGS&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulesattributesphp&#34;&gt;includes/modules/attributes.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#118: &amp;#39;NOTIFY_ATTRIBUTES_MODULE_START_OPTION&amp;#39;, $products_options_names-&amp;gt;fields
#151: &amp;#39;NOTIFY_ATTRIBUTES_MODULE_START_OPTIONS_LOOP&amp;#39;, $i++, $products_options-&amp;gt;fields, $products_options_names-&amp;gt;fields, $data_properties, $field_disabled, $attributeDetailsArrayForJson
#207: &amp;#39;NOTIFY_ATTRIBUTES_MODULE_SALEMAKER_DISPLAY_PRICE_PERCENTAGE&amp;#39;, $products_options-&amp;gt;fields, $product_info-&amp;gt;fields, $products_options_display_price, $data_properties
#227: &amp;#39;NOTIFY_ATTRIBUTES_MODULE_ORIGINAL_PRICE&amp;#39;, $products_options-&amp;gt;fields, $products_options_array, $products_options_display_price, $data_properties
#300: &amp;#39;NOTIFY_ATTRIBUTES_MODULE_RADIO_SELECTED&amp;#39;, $products_options-&amp;gt;fields, $data_properties
#389: &amp;#39;NOTIFY_ATTRIBUTES_MODULE_CHECKBOX_SELECTED&amp;#39;, $products_options-&amp;gt;fields, $data_properties
#522: &amp;#39;NOTIFY_ATTRIBUTES_MODULE_FORMAT_VALUE&amp;#39;, array_merge($products_options-&amp;gt;fields, $products_options_names-&amp;gt;fields), $data_properties, $field_disabled, $attributeDetailsArrayForJson
#562: &amp;#39;NOTIFY_ATTRIBUTES_MODULE_BEFORE_ASSEMBLE_OUTPUTS&amp;#39;, $products_options-&amp;gt;fields, $data_properties, $inputFieldId, $field_disabled
#638: &amp;#39;NOTIFY_ATTRIBUTES_MODULE_DEFAULT_SWITCH&amp;#39;, $products_options_names-&amp;gt;fields, $options_name, $options_menu, $options_comment, $options_comment_position, $options_html_id, $data_properties, $options_inputfield_id
#645: &amp;#39;NOTIFY_ATTRIBUTES_MODULE_OPTION_BUILT&amp;#39;, $products_options_names-&amp;gt;fields, $options_name, $options_menu, $options_comment, $options_comment_position, $options_html_id, $options_attributes_image, $data_properties, $options_inputfield_id
#650: &amp;#39;NOTIFY_ATTRIBUTES_MODULE_END&amp;#39;, $prod_id, $options_name, $options_menu, $options_comment, $options_comment_position, $options_html_id, $options_attributes_image, $options_inputfield_id, $attributeDetailsArrayForJson
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulescreate_accountphp&#34;&gt;includes/modules/create_account.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#10: &amp;#39;NOTIFY_MODULE_START_CREATE_ACCOUNT&amp;#39;
#41: &amp;#39;NOTIFY_CREATE_ACCOUNT_CAPTCHA_CHECK&amp;#39;
#148: &amp;#39;NOTIFY_CREATE_ACCOUNT_LOOKUP_BY_EMAIL&amp;#39;, $email_address, $check_email_query, $send_welcome_email
#156: &amp;#39;NOTIFY_NICK_CHECK_FOR_EXISTING_EMAIL&amp;#39;, $email_address, $nick_error, $nick
#166: &amp;#39;NOTIFY_NICK_CHECK_FOR_MIN_LENGTH&amp;#39;, $nick, $nick_error, $nick_length_min
#168: &amp;#39;NOTIFY_NICK_CHECK_FOR_DUPLICATE&amp;#39;, $nick, $nick_error
#258: &amp;#39;NOTIFY_CREATE_ACCOUNT_VALIDATION_CHECK&amp;#39;, array(), $error, $send_welcome_email
#270: &amp;#39;NOTIFY_FAILURE_DURING_CREATE_ACCOUNT&amp;#39;
#272: &amp;#39;NOTIFY_SPAM_DETECTED_DURING_CREATE_ACCOUNT&amp;#39;
#297: &amp;#39;NOTIFY_MODULE_CREATE_ACCOUNT_ADDED_CUSTOMER_RECORD&amp;#39;, array_merge(array(&amp;#39;customer_id&amp;#39; =&amp;gt; $_SESSION[&amp;#39;customer_id&amp;#39;]), $sql_data_array)
#327: &amp;#39;NOTIFY_MODULE_CREATE_ACCOUNT_ADDED_ADDRESS_BOOK_RECORD&amp;#39;, array_merge(array(&amp;#39;address_id&amp;#39; =&amp;gt; $address_id), $sql_data_array)
#344: &amp;#39;NOTIFY_NICK_CREATE_NEW&amp;#39;, $nick, $password, $nick_email, $extra_welcome_text
#361: &amp;#39;NOTIFY_LOGIN_SUCCESS_VIA_CREATE_ACCOUNT&amp;#39;, $email_address, $extra_welcome_text, $send_welcome_email
#467: &amp;#39;NOTIFY_NICK_SET_TEMPLATE_FLAG&amp;#39;, 0, $display_nick_field
#471: &amp;#39;NOTIFY_MODULE_END_CREATE_ACCOUNT&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespaymentauthorizenetphp&#34;&gt;includes/modules/payment/authorizenet.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#346: &amp;#39;NOTIFY_PAYMENT_AUTHNETSIM_PRESUBMIT_HOOK&amp;#39;
#419: &amp;#39;NOTIFY_PAYMENT_AUTHNETSIM_POSTSUBMIT_HOOK&amp;#39;, $this-&amp;gt;authorize
#458: &amp;#39;NOTIFY_PAYMENT_AUTHNETSIM_POSTPROCESS_HOOK&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespaymentpaypaldpphp&#34;&gt;includes/modules/payment/paypaldp.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#1082: &amp;#39;NOTIFY_PAYMENT_PAYPALDP_INSTALLED&amp;#39;
#1098: &amp;#39;NOTIFY_PAYMENT_PAYPALDP_UNINSTALLED&amp;#39;
#1483: &amp;#39;NOTIFY_PAYMENT_PAYPALDP_SUBTOTALS_REVIEW&amp;#39;, $order, $order_totals
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespaymentpaypalwppphp&#34;&gt;includes/modules/payment/paypalwpp.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#426: &amp;#39;NOTIFY_PAYPALWPP_BEFORE_DOEXPRESSCHECKOUT&amp;#39;
#477: &amp;#39;NOTIFY_PAYPALWPP_BEFORE_PROCESS_FINISHED&amp;#39;, $response
#545: &amp;#39;NOTIFY_PAYPALWPP_AFTER_PROCESS_FINISHED&amp;#39;, $paypal_order
#700: &amp;#39;NOTIFY_PAYMENT_PAYPALWPP_INSTALLED&amp;#39;
#743: &amp;#39;NOTIFY_PAYMENT_PAYPALWPP_UNINSTALLED&amp;#39;
#1245: &amp;#39;NOTIFY_PAYMENT_PAYPALEC_SUBTOTALS_TAX&amp;#39;, $order, $order_totals
#1337: &amp;#39;NOTIFY_PAYPALWPP_GETLINEITEMDETAILS&amp;#39;, $numberOfLineItemsProcessed, $optionsLI
#1662: &amp;#39;NOTIFY_PAYMENT_PAYPALEC_BEFORE_SETEC&amp;#39;, array(), $options, $order, $order_totals
#1670: &amp;#39;NOTIFY_PAYMENT_PAYPALEC_TOKEN&amp;#39;, $response, $options
#1785: &amp;#39;NOTIFY_PAYPALEC_PARSE_GETEC_RESULT&amp;#39;, array(), $response
#1822: &amp;#39;NOTIFY_PAYPAL_EXPRESS_CHECKOUT_PAYERID_DETERMINED&amp;#39;, $response[&amp;#39;PAYERID&amp;#39;]
#1953: &amp;#39;NOTIFY_PAYPAL_CUSTOMER_ATTEMPT_TO_USE_INVALID_COUNTRY_CODE&amp;#39;
#2041: &amp;#39;NOTIFY_PAYPALEXPRESS_BYPASS_ADDRESS_CREATION&amp;#39;, $paypal_ec_payer_info, $bypass_address_creation
#2151: &amp;#39;NOTIFY_PAYPALEXPRESS_CREATE_ACCOUNT_ADDED_CUSTOMER_RECORD&amp;#39;, $customer_id, $sql_data_array
#2182: &amp;#39;NOTIFY_PAYPALEXPRESS_CREATE_ACCOUNT_ADDED_ADDRESS_BOOK_RECORD&amp;#39;, array(), $address_id, $sql_data_array
#2235: &amp;#39;NOTIFY_LOGIN_SUCCESS_VIA_CREATE_ACCOUNT&amp;#39;, &amp;#39;paypal express checkout&amp;#39;
#2276: &amp;#39;NOTIFY_PAYPALEC_END_ECSTEP2&amp;#39;, $order
#2348: &amp;#39;NOTIFY_PAYPALWPP_DISABLE_GET_OVERRIDE_ADDRESS&amp;#39;, $address_id, $disable_address_override
#2607: &amp;#39;NOTIFY_HEADER_ADDRESS_BOOK_ADD_ENTRY_INVALID_ATTEMPT&amp;#39;, $customer_id, $country_id, $address_format_id, $address_question_arr
#2670: &amp;#39;NOTIFY_HEADER_ADDRESS_BOOK_ADD_ENTRY_DONE&amp;#39;, &amp;#39;paypal express checkout&amp;#39;, $new_address_book_id, $sql_data_array, $make_default
#2925: &amp;#39;NOTIFY_PAYPALWPP_ERROR_HANDLER&amp;#39;, $response, $operation, $basicError, $ignoreList, $errorInfo
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespaymentfirstdata_hcophp&#34;&gt;includes/modules/payment/firstdata_hco.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#294: &amp;#39;MODULE_PAYMENT_FIRSTDATA_PAYMENTPAGES_PRESUBMIT_HOOK&amp;#39;
#347: &amp;#39;MODULE_PAYMENT_FIRSTDATA_PAYMENTPAGES_POSTSUBMIT_HOOK&amp;#39;, $this-&amp;gt;authorize
#381: &amp;#39;MODULE_PAYMENT_FIRSTDATA_PAYMENTPAGES_POSTPROCESS_HOOK&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespaymentpaypalpaypal_curlphp&#34;&gt;includes/modules/payment/paypal/paypal_curl.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#108: &amp;#39;NOTIFY_PAYPAL_CURL_CONSTRUCT&amp;#39;, $params
#155: &amp;#39;NOTIFY_PAYPAL_SETEXPRESSCHECKOUT&amp;#39;
#171: &amp;#39;NOTIFY_PAYPAL_GETEXPRESSCHECKOUTDETAILS&amp;#39;
#195: &amp;#39;NOTIFY_PAYPAL_DOEXPRESSCHECKOUTPAYMENT&amp;#39;
#238: &amp;#39;NOTIFY_PAYPAL_DODIRECTPAYMENT&amp;#39;
#560: &amp;#39;NOTIFY_PAYPAL_CURL_BUILDNAMEVALUELIST&amp;#39;, $string
#661: &amp;#39;PAYPAL_CURL_LOG&amp;#39;, $token, $tokenHash
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespaymentauthorizenet_aimphp&#34;&gt;includes/modules/payment/authorizenet_aim.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#399: &amp;#39;NOTIFY_PAYMENT_AUTHNET_EMULATOR_CHECK&amp;#39;, $this-&amp;gt;code, $submit_data
#414: &amp;#39;NOTIFY_PAYMENT_AUTHNET_PRESUBMIT_HOOK&amp;#39;, $this-&amp;gt;code, $submit_data
#420: &amp;#39;NOTIFY_PAYMENT_AUTHNET_POSTSUBMIT_HOOK&amp;#39;, $this-&amp;gt;code, $response
#604: &amp;#39;NOTIFY_PAYMENT_AUTHNET_MODE_SELECTION&amp;#39;, $this-&amp;gt;mode, $submit_data
#684: &amp;#39;NOTIFY_PAYMENT_AUTHNET_ENCAPSULATION_CHECK&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespaymentpaypalphp&#34;&gt;includes/modules/payment/paypal.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#355: &amp;#39;NOTIFY_PAYMENT_PAYPAL_RETURN_TO_STORE&amp;#39;, $_GET
#380: &amp;#39;NOTIFY_PAYMENT_PAYPAL_CANCELLED_DURING_CHECKOUT&amp;#39;, $_GET
#531: &amp;#39;NOTIFY_PAYMENT_PAYPAL_INSTALLED&amp;#39;
#540: &amp;#39;NOTIFY_PAYMENT_PAYPAL_UNINSTALLED&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulesdownloadsphp&#34;&gt;includes/modules/downloads.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#108: &amp;#39;NOTIFY_MODULE_DOWNLOAD_TEMPLATE_DETAILS&amp;#39;, $data, $data
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulesproduct_listing_alpha_sorterphp&#34;&gt;includes/modules/product_listing_alpha_sorter.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#28: &amp;#39;NOTIFY_PRODUCT_LISTING_ALPHA_SORTER_SELECTLIST&amp;#39;, isset($prefix) ? $prefix : &amp;#39;&amp;#39;, $letters_list
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulesadditional_imagesphp&#34;&gt;includes/modules/additional_images.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#14: &amp;#39;NOTIFY_MODULES_ADDITIONAL_PRODUCT_IMAGES_START&amp;#39;
#54:  &amp;#39;NOTIFY_MODULES_ADDITIONAL_IMAGES_FILE_MATCH&amp;#39;, array( &amp;#39;file&amp;#39; =&amp;gt; $file, &amp;#39;file_extension&amp;#39; =&amp;gt; $file_extension, &amp;#39;products_image&amp;#39; =&amp;gt; $products_image, &amp;#39;products_image_base&amp;#39; =&amp;gt; $products_image_base ), $current_image_match 
#84: &amp;#39;NOTIFY_MODULES_ADDITIONAL_PRODUCT_IMAGES_LIST&amp;#39;, NULL, $images_array
#111: &amp;#39;NOTIFY_MODULES_ADDITIONAL_IMAGES_GET_LARGE&amp;#39;, $products_name, $products_image_large
#126: &amp;#39;NOTIFY_MODULES_ADDITIONAL_IMAGES_THUMB_SLASHES&amp;#39;, array(), $thumb_slashes
#145:  &amp;#39;NOTIFY_MODULES_ADDITIONAL_IMAGES_SCRIPT_LINK&amp;#39;, array( &amp;#39;flag_display_large&amp;#39; =&amp;gt; $flag_display_large, &amp;#39;products_name&amp;#39; =&amp;gt; $products_name, &amp;#39;products_image_large&amp;#39; =&amp;gt; $products_image_large, &amp;#39;thumb_slashes&amp;#39; =&amp;gt; $thumb_slashes, &amp;#39;large_link&amp;#39; =&amp;gt; $large_link, &amp;#39;index&amp;#39; =&amp;gt; $i ), $script_link, $link_parameters 
#182: &amp;#39;NOTIFY_MODULES_ADDITIONAL_PRODUCT_IMAGES_END&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulescheckout_address_bookphp&#34;&gt;includes/modules/checkout_address_book.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#26: &amp;#39;NOTIFY_MODULE_END_CHECKOUT_ADDRESS_BOOK&amp;#39;, $addresses_query, $addresses
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulessideboxesezpagesphp&#34;&gt;includes/modules/sideboxes/ezpages.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#10: &amp;#39;NOTIFY_START_EZPAGES_SIDEBOX&amp;#39;
#71: &amp;#39;NOTIFY_END_EZPAGES_SIDEBOX&amp;#39;
#76: &amp;#39;NOTIFY_END_EZPAGES_SIDEBOX&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulesezpages_bar_headerphp&#34;&gt;includes/modules/ezpages_bar_header.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#12: &amp;#39;NOTIFY_START_EZPAGES_HEADERBAR&amp;#39;
#71: &amp;#39;NOTIFY_END_EZPAGES_HEADERBAR&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulescheckout_processphp&#34;&gt;includes/modules/checkout_process.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#12: &amp;#39;NOTIFY_CHECKOUT_PROCESS_BEGIN&amp;#39;
#31: &amp;#39;NOTIFY_CHECKOUT_SLAMMING_ALERT&amp;#39;, $_SESSION[&amp;#39;payment_attempt&amp;#39;], $slamming_threshold
#33: &amp;#39;NOTIFY_CHECKOUT_SLAMMING_LOCKOUT&amp;#39;
#73: &amp;#39;NOTIFY_CHECKOUT_PROCESS_BEFORE_ORDER_TOTALS_PRE_CONFIRMATION_CHECK&amp;#39;
#81: &amp;#39;NOTIFY_CHECKOUT_PROCESS_BEFORE_ORDER_TOTALS_PROCESS&amp;#39;
#83: &amp;#39;NOTIFY_CHECKOUT_PROCESS_AFTER_ORDER_TOTALS_PROCESS&amp;#39;
#91: &amp;#39;NOTIFY_CHECKOUT_PROCESS_AFTER_PAYMENT_MODULES_BEFOREPROCESS&amp;#39;
#94: &amp;#39;NOTIFY_CHECKOUT_PROCESS_AFTER_ORDER_CREATE&amp;#39;, $insert_id
#96: &amp;#39;NOTIFY_CHECKOUT_PROCESS_AFTER_PAYMENT_MODULES_AFTER_ORDER_CREATE&amp;#39;, $insert_id
#100: &amp;#39;NOTIFY_CHECKOUT_PROCESS_AFTER_ORDER_CREATE_ADD_PRODUCTS&amp;#39;, $insert_id, $order
#103: &amp;#39;NOTIFY_CHECKOUT_PROCESS_AFTER_SEND_ORDER_EMAIL&amp;#39;, $insert_id, $order
#143: &amp;#39;NOTIFY_CHECKOUT_PROCESS_HANDLE_AFFILIATES&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulesezpages_bar_footerphp&#34;&gt;includes/modules/ezpages_bar_footer.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#12: &amp;#39;NOTIFY_START_EZPAGES_FOOTERBAR&amp;#39;
#70: &amp;#39;NOTIFY_END_EZPAGES_FOOTERBAR&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulesproduct_listingphp&#34;&gt;includes/modules/product_listing.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#14: &amp;#39;NOTIFY_MODULE_PRODUCT_LISTING_RESULTCOUNT&amp;#39;, $listing_split-&amp;gt;number_of_rows
#148: &amp;#39;NOTIFY_MODULES_PRODUCT_LISTING_PRODUCTS_BUTTON&amp;#39;, array(), $listing-&amp;gt;fields, $lc_button
#203: &amp;#39;NOTIFY_PRODUCT_LISTING_END&amp;#39;, $current_page_base, $list_box_contents, $listing_split, $show_top_submit_button, $show_bottom_submit_button, $show_submit, $how_many
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulesorder_totalot_shippingphp&#34;&gt;includes/modules/order_total/ot_shipping.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#72:  &amp;#39;NOTIFY_OT_SHIPPING_TAX_CALCS&amp;#39;, array(), $external_shipping_tax_handler, $shipping_tax, $shipping_tax_description 
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulesorder_totalot_couponphp&#34;&gt;includes/modules/order_total/ot_coupon.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#189:  &amp;#39;NOTIFY_OT_COUPON_COUPON_REMOVED&amp;#39; 
#234:  &amp;#39;NOTIFY_OT_COUPON_COUPON_INFO&amp;#39;, array( &amp;#39;coupon_result&amp;#39; =&amp;gt; $coupon_result-&amp;gt;fields, &amp;#39;code&amp;#39; =&amp;gt; $dc_check ) 
#351: &amp;#39;NOTIFY_OT_COUPON_USES_PER_USER_CHECK&amp;#39;, $coupon_result-&amp;gt;fields, $coupon_uses_per_user_exceeded
#626:  &amp;#39;NOTIFY_OT_COUPON_CALCS_FINISHED&amp;#39;, array( &amp;#39;coupon&amp;#39; =&amp;gt; $coupon, &amp;#39;order_totals&amp;#39; =&amp;gt; $orderTotalDetails, &amp;#39;od_amount&amp;#39; =&amp;gt; $od_amount, ) 
#650:  &amp;#39;NOTIFY_OT_COUPON_PRODUCT_VALIDITY&amp;#39;, array( &amp;#39;is_product_valid&amp;#39; =&amp;gt; $is_product_valid, &amp;#39;i&amp;#39; =&amp;gt; $i ) 
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulesnew_productsphp&#34;&gt;includes/modules/new_products.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#70: &amp;#39;NOTIFY_MODULES_NEW_PRODUCTS_B4_LIST_BOX&amp;#39;, array(), $new_products-&amp;gt;fields, $products_price
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagespageheader_phpphp&#34;&gt;includes/modules/pages/page/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#18: &amp;#39;NOTIFY_HEADER_START_EZPAGE&amp;#39;
#194: &amp;#39;NOTIFY_HEADER_END_EZPAGE&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagescheckout_successheader_phpphp&#34;&gt;includes/modules/pages/checkout_success/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#11: &amp;#39;NOTIFY_HEADER_START_CHECKOUT_SUCCESS&amp;#39;
#171: &amp;#39;NOTIFY_HEADER_END_CHECKOUT_SUCCESS&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagescreate_account_successheader_phpphp&#34;&gt;includes/modules/pages/create_account_success/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#12: &amp;#39;NOTIFY_HEADER_START_CREATE_ACCOUNT_SUCCESS&amp;#39;
#65: &amp;#39;NOTIFY_HEADER_END_CREATE_ACCOUNT_SUCCESS&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagesaccount_history_infoheader_phpphp&#34;&gt;includes/modules/pages/account_history_info/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#10: &amp;#39;NOTIFY_HEADER_START_ACCOUNT_HISTORY_INFO&amp;#39;
#61: &amp;#39;NOTIFY_HEADER_END_ACCOUNT_HISTORY_INFO&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagesproduct_free_shipping_infomain_template_varsphp&#34;&gt;includes/modules/pages/product_free_shipping_info/main_template_vars.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#14: &amp;#39;NOTIFY_MAIN_TEMPLATE_VARS_START_PRODUCT_FREE_SHIPPING_INFO&amp;#39;
#34: &amp;#39;NOTIFY_PRODUCT_VIEWS_HIT_INCREMENTOR&amp;#39;, (int)$_GET[&amp;#39;products_id&amp;#39;]
#109: &amp;#39;NOTIFY_MAIN_TEMPLATE_VARS_PRODUCT_TYPE_VARS_PRODUCT_FREE_SHIPPING_INFO&amp;#39;
#149: &amp;#39;NOTIFY_MAIN_TEMPLATE_VARS_EXTRA_PRODUCT_FREE_SHIPPING_INFO&amp;#39;
#157: &amp;#39;NOTIFY_MAIN_TEMPLATE_VARS_END_PRODUCT_FREE_SHIPPING_INFO&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagesproduct_free_shipping_infoheader_phpphp&#34;&gt;includes/modules/pages/product_free_shipping_info/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#11: &amp;#39;NOTIFY_HEADER_START_PRODUCT_FREE_SHIPPING_INFO&amp;#39;
#25: &amp;#39;NOTIFY_HEADER_END_PRODUCT_FREE_SHIPPING_INFO&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagesproduct_free_shipping_infomain_template_vars_product_typephp&#34;&gt;includes/modules/pages/product_free_shipping_info/main_template_vars_product_type.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#18: &amp;#39;NOTIFY_PRODUCT_TYPE_VARS_START_PRODUCT_FREE_SHIPPING_INFO&amp;#39;
#36: &amp;#39;NOTIFY_PRODUCT_TYPE_VARS_END_PRODUCT_FREE_SHIPPING_INFO&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagesaccount_historyheader_phpphp&#34;&gt;includes/modules/pages/account_history/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#10: &amp;#39;NOTIFY_HEADER_START_ACCOUNT_HISTORY&amp;#39;
#69: &amp;#39;NOTIFY_HEADER_END_ACCOUNT_HISTORY&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagescheckout_paymentheader_phpphp&#34;&gt;includes/modules/pages/checkout_payment/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#12: &amp;#39;NOTIFY_HEADER_START_CHECKOUT_PAYMENT&amp;#39;
#123: &amp;#39;NOTIFY_HEADER_END_CHECKOUT_PAYMENT&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagesdocument_general_infomain_template_varsphp&#34;&gt;includes/modules/pages/document_general_info/main_template_vars.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#14: &amp;#39;NOTIFY_MAIN_TEMPLATE_VARS_START_DOCUMENT_GENERAL_INFO&amp;#39;
#34: &amp;#39;NOTIFY_PRODUCT_VIEWS_HIT_INCREMENTOR&amp;#39;, (int)$_GET[&amp;#39;products_id&amp;#39;]
#109: &amp;#39;NOTIFY_MAIN_TEMPLATE_VARS_PRODUCT_TYPE_VARS_DOCUMENT_GENERAL_INFO&amp;#39;
#150: &amp;#39;NOTIFY_MAIN_TEMPLATE_VARS_EXTRA_DOCUMENT_GENERAL_INFO&amp;#39;
#158: &amp;#39;NOTIFY_MAIN_TEMPLATE_VARS_END_DOCUMENT_GENERAL_INFO&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagesdocument_general_infoheader_phpphp&#34;&gt;includes/modules/pages/document_general_info/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#11: &amp;#39;NOTIFY_HEADER_START_DOCUMENT_GENERAL_INFO&amp;#39;
#20: &amp;#39;NOTIFY_HEADER_END_DOCUMENT_GENERAL_INFO&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagesdocument_general_infomain_template_vars_product_typephp&#34;&gt;includes/modules/pages/document_general_info/main_template_vars_product_type.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#18: &amp;#39;NOTIFY_PRODUCT_TYPE_VARS_START_DOCUMENT_GENERAL_INFO&amp;#39;
#36: &amp;#39;NOTIFY_PRODUCT_TYPE_VARS_END_DOCUMENT_GENERAL_INFO&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagescheckout_confirmationheader_phpphp&#34;&gt;includes/modules/pages/checkout_confirmation/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#11: &amp;#39;NOTIFY_HEADER_START_CHECKOUT_CONFIRMATION&amp;#39;
#169: &amp;#39;NOTIFY_HEADER_END_CHECKOUT_CONFIRMATION&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagesproduct_reviewsheader_phpphp&#34;&gt;includes/modules/pages/product_reviews/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#12: &amp;#39;NOTIFY_HEADER_START_PRODUCT_REVIEWS&amp;#39;
#87: &amp;#39;NOTIFY_HEADER_END_PRODUCT_REVIEWS&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagescontact_usheader_phpphp&#34;&gt;includes/modules/pages/contact_us/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#11: &amp;#39;NOTIFY_HEADER_START_CONTACT_US&amp;#39;
#28: &amp;#39;NOTIFY_CONTACT_US_CAPTCHA_CHECK&amp;#39;, $_POST
#35: &amp;#39;NOTIFY_SPAM_DETECTED_USING_CONTACT_US&amp;#39;, $_POST
#55: &amp;#39;NOTIFY_CONTACT_US_ACTION&amp;#39;, (isset($_SESSION[&amp;#39;customer_id&amp;#39;]) ? $_SESSION[&amp;#39;customer_id&amp;#39;] : 0), $customer_email, $customer_name, $email_address, $name, $enquiry, $telephone
#146: &amp;#39;NOTIFY_HEADER_END_CONTACT_US&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagesfeatured_productsheader_phpphp&#34;&gt;includes/modules/pages/featured_products/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#11: &amp;#39;NOTIFY_HEADER_START_FEATURED_PRODUCTS&amp;#39;
#36: &amp;#39;NOTIFY_FEATURED_PRODUCTS_SQL_STRING&amp;#39;, array(), $featured_products_query_raw, $count_key
#83: &amp;#39;NOTIFY_HEADER_END_FEATURED_PRODUCTS&amp;#39;, $how_many
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagesgv_sendheader_phpphp&#34;&gt;includes/modules/pages/gv_send/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#14: &amp;#39;NOTIFY_HEADER_START_GV_SEND&amp;#39;
#214: &amp;#39;NOTIFY_HEADER_END_GV_SEND&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagesspecialsmain_template_varsphp&#34;&gt;includes/modules/pages/specials/main_template_vars.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#24: &amp;#39;NOTIFY_SPECIALS_MAIN_TEMPLATE_VARS_SQL_STRING&amp;#39;, array(), $specials_query_raw, $count_key
#56: &amp;#39;NOTIFY_SPECIALS_MAIN_TEMPLATE_VARS_END&amp;#39;, array(), $list_box_contents
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagesspecialsheader_phpphp&#34;&gt;includes/modules/pages/specials/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#10: &amp;#39;NOTIFY_HEADER_START_SPECIALS&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagescheckout_shippingheader_phpphp&#34;&gt;includes/modules/pages/checkout_shipping/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#10: &amp;#39;NOTIFY_HEADER_START_CHECKOUT_SHIPPING&amp;#39;
#230: &amp;#39;NOTIFY_HEADER_END_CHECKOUT_SHIPPING&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagesask_a_questionheader_phpphp&#34;&gt;includes/modules/pages/ask_a_question/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#9: &amp;#39;NOTIFY_HEADER_START_ASK_A_QUESTION&amp;#39;
#53: &amp;#39;NOTIFY_ASK_A_QUESTION_CAPTCHA_CHECK&amp;#39;, $_POST
#60: &amp;#39;NOTIFY_SPAM_DETECTED_USING_CONTACT_US&amp;#39;, $_POST
#80: &amp;#39;NOTIFY_ASK_A_QUESTION_ACTION&amp;#39;, (isset($_SESSION[&amp;#39;customer_id&amp;#39;]) ? $_SESSION[&amp;#39;customer_id&amp;#39;] : 0), $customer_email, $customer_name, $email_address, $name, $enquiry, $telephone
#174: &amp;#39;NOTIFY_HEADER_END_ASK_A_QUESTION&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagespage_not_foundheader_phpphp&#34;&gt;includes/modules/pages/page_not_found/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#12: &amp;#39;NOTIFY_HEADER_START_PAGE_NOT_FOUND&amp;#39;
#28: &amp;#39;NOTIFY_HEADER_END_PAGE_NOT_FOUND&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagespassword_forgottenheader_phpphp&#34;&gt;includes/modules/pages/password_forgotten/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#11: &amp;#39;NOTIFY_HEADER_START_PASSWORD_FORGOTTEN&amp;#39;
#42: &amp;#39;NOTIFY_PASSWORD_FORGOTTEN_VALIDATED&amp;#39;, $email_address
#62: &amp;#39;NOTIFY_PASSWORD_FORGOTTEN_CHANGED&amp;#39;, $email_address, $check_customer-&amp;gt;fields[&amp;#39;customers_id&amp;#39;], $new_password
#65: &amp;#39;NOTIFY_PASSWORD_FORGOTTEN_NOT_FOUND&amp;#39;, $email_address
#77: &amp;#39;NOTIFY_HEADER_END_PASSWORD_FORGOTTEN&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagesunsubscribeheader_phpphp&#34;&gt;includes/modules/pages/unsubscribe/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#12: &amp;#39;NOTIFY_HEADER_START_UNSUBSCRIBE&amp;#39;
#57: &amp;#39;NOTIFY_HEADER_END_UNSUBSCRIBE&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagesaccount_newslettersheader_phpphp&#34;&gt;includes/modules/pages/account_newsletters/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#11: &amp;#39;NOTIFY_HEADER_START_ACCOUNT_NEWSLETTERS&amp;#39;
#46: &amp;#39;NOTIFY_HEADER_ACCOUNT_NEWSLETTER_UPDATED&amp;#39;, $newsletter_general
#57: &amp;#39;NOTIFY_HEADER_END_ACCOUNT_NEWSLETTERS&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagespopup_image_additionalheader_phpphp&#34;&gt;includes/modules/pages/popup_image_additional/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#10: &amp;#39;NOTIFY_HEADER_START_POPUP_IMAGES_ADDITIONAL&amp;#39;
#49: &amp;#39;NOTIFY_HEADER_END_POPUP_IMAGES_ADDITIONAL&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagesdocument_product_infomain_template_varsphp&#34;&gt;includes/modules/pages/document_product_info/main_template_vars.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#14: &amp;#39;NOTIFY_MAIN_TEMPLATE_VARS_START_DOCUMENT_PRODUCT_INFO&amp;#39;
#34: &amp;#39;NOTIFY_PRODUCT_VIEWS_HIT_INCREMENTOR&amp;#39;, (int)$_GET[&amp;#39;products_id&amp;#39;]
#109: &amp;#39;NOTIFY_MAIN_TEMPLATE_VARS_PRODUCT_TYPE_VARS_DOCUMENT_PRODUCT_INFO&amp;#39;
#149: &amp;#39;NOTIFY_MAIN_TEMPLATE_VARS_EXTRA_DOCUMENT_PRODUCT_INFO&amp;#39;
#157: &amp;#39;NOTIFY_MAIN_TEMPLATE_VARS_END_DOCUMENT_PRODUCT_INFO&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagesdocument_product_infoheader_phpphp&#34;&gt;includes/modules/pages/document_product_info/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#11: &amp;#39;NOTIFY_HEADER_START_DOCUMENT_PRODUCT_INFO&amp;#39;
#25: &amp;#39;NOTIFY_HEADER_END_DOCUMENT_PRODUCT_INFO&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagesdocument_product_infomain_template_vars_product_typephp&#34;&gt;includes/modules/pages/document_product_info/main_template_vars_product_type.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#18: &amp;#39;NOTIFY_PRODUCT_TYPE_VARS_START_DOCUMENT_PRODUCT_INFO&amp;#39;
#36: &amp;#39;NOTIFY_PRODUCT_TYPE_VARS_END_DOCUMENT_PRODUCT_INFO&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagesgv_redeemheader_phpphp&#34;&gt;includes/modules/pages/gv_redeem/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#9: &amp;#39;NOTIFY_HEADER_START_GV_REDEEM&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagespopup_imageheader_phpphp&#34;&gt;includes/modules/pages/popup_image/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#15: &amp;#39;NOTIFY_HEADER_START_POPUP_IMAGES_ADDITIONAL&amp;#39;
#64: &amp;#39;NOTIFY_HEADER_END_POPUP_IMAGES&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagestime_outheader_phpphp&#34;&gt;includes/modules/pages/time_out/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#12: &amp;#39;NOTIFY_HEADER_START_LOGIN&amp;#39;
#13: &amp;#39;NOTIFY_HEADER_START_LOGIN_TIMEOUT&amp;#39;
#79: &amp;#39;NOTIFY_LOGIN_SUCCESS&amp;#39;
#105: &amp;#39;NOTIFY_LOGIN_FAILURE&amp;#39;
#110: &amp;#39;NOTIFY_HEADER_END_LOGIN_TIMEOUT&amp;#39;
#111: &amp;#39;NOTIFY_HEADER_END_LOGIN&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagesdownloadheader_phpphp&#34;&gt;includes/modules/pages/download/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#14: &amp;#39;NOTIFY_HEADER_START_DOWNLOAD&amp;#39;
#54: &amp;#39;NOTIFY_DOWNLOAD_NO_MATCH_FOUND&amp;#39;, $sql
#88: &amp;#39;NOTIFY_CHECK_DOWNLOAD_HANDLER&amp;#39;, $downloads, $downloads-&amp;gt;fields, $origin_filename, $browser_filename, $source_directory, $file_exists, $service, $isExpired, $download_timestamp
#140: &amp;#39;NOTIFY_DOWNLOAD_BROWSER_DETECTION&amp;#39;, array(), $detectedBrowser, $_SERVER[&amp;#39;HTTP_USER_AGENT&amp;#39;], $version, $browser_headers_override, $browser_extra_headers
#146: &amp;#39;NOTIFY_DOWNLOAD_BEFORE_START&amp;#39;, $_SESSION[&amp;#39;customers_host_address&amp;#39;], $service, $origin_filename, $browser_filename, $source_directory, $downloadFilesize, $mime_type, $downloads-&amp;gt;fields, $browser_headers_override
#147: &amp;#39;NOTIFY_DOWNLOAD_READY_TO_START&amp;#39;, $_SESSION[&amp;#39;customers_host_address&amp;#39;], $service, $origin_filename, $browser_filename, $source_directory, $downloadFilesize, $mime_type, $downloads-&amp;gt;fields, $browser_headers_override
#210: &amp;#39;NOTIFY_DOWNLOAD_READY_TO_REDIRECT&amp;#39;, array(), $service, $origin_filename, $browser_filename, $source_directory, $link_create_status
#214: &amp;#39;NOTIFY_DOWNLOAD_READY_TO_STREAM&amp;#39;, array(), $service, $origin_filename, $browser_filename, $source_directory, $downloadFilesize
#216: &amp;#39;NOTIFY_HEADER_END_DOWNLOAD&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagescheckout_payment_addressheader_phpphp&#34;&gt;includes/modules/pages/checkout_payment_address/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#12: &amp;#39;NOTIFY_HEADER_START_CHECKOUT_PAYMENT_ADDRESS&amp;#39;
#45: &amp;#39;NOTIFY_HEADER_END_CHECKOUT_PAYMENT_ADDRESS&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagesproduct_reviews_writeheader_phpphp&#34;&gt;includes/modules/pages/product_reviews_write/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#14: &amp;#39;NOTIFY_HEADER_START_PRODUCT_REVIEWS_WRITE&amp;#39;
#52: &amp;#39;NOTIFY_REVIEWS_WRITE_CAPTCHA_CHECK&amp;#39;
#66: &amp;#39;NOTIFY_SPAM_DETECTED_DURING_WRITE_REVIEW&amp;#39;
#87: &amp;#39;NOTIFY_REVIEW_INSERTED_DURING_WRITE_REVIEW&amp;#39;
#100: &amp;#39;NOTIFY_SEND_ADMIN_EMAIL_WRITE_REVIEW&amp;#39;
#112: &amp;#39;NOTIFY_EMAIL_READY_WRITE_REVIEW&amp;#39;
#141: &amp;#39;NOTIFY_HEADER_END_PRODUCT_REVIEWS_WRITE&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagesproduct_music_infomain_template_varsphp&#34;&gt;includes/modules/pages/product_music_info/main_template_vars.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#14: &amp;#39;NOTIFY_MAIN_TEMPLATE_VARS_START_PRODUCT_MUSIC_INFO&amp;#39;
#34: &amp;#39;NOTIFY_PRODUCT_VIEWS_HIT_INCREMENTOR&amp;#39;, (int)$_GET[&amp;#39;products_id&amp;#39;]
#109: &amp;#39;NOTIFY_MAIN_TEMPLATE_VARS_PRODUCT_TYPE_VARS_PRODUCT_MUSIC_INFO&amp;#39;
#153: &amp;#39;NOTIFY_MAIN_TEMPLATE_VARS_EXTRA_PRODUCT_MUSIC_INFO&amp;#39;
#161: &amp;#39;NOTIFY_MAIN_TEMPLATE_VARS_END_PRODUCT_MUSIC_INFO&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagesproduct_music_infoheader_phpphp&#34;&gt;includes/modules/pages/product_music_info/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#11: &amp;#39;NOTIFY_HEADER_START_PRODUCT_MUSIC_INFO&amp;#39;
#25: &amp;#39;NOTIFY_HEADER_END_PRODUCT_MUSIC_INFO&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagesproduct_music_infomain_template_vars_product_typephp&#34;&gt;includes/modules/pages/product_music_info/main_template_vars_product_type.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#17: &amp;#39;NOTIFY_PRODUCT_TYPE_VARS_START_PRODUCT_MUSIC_INFO&amp;#39;
#70: &amp;#39;NOTIFY_PRODUCT_TYPE_VARS_END_PRODUCT_MUSIC_INFO&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagesproduct_reviews_infoheader_phpphp&#34;&gt;includes/modules/pages/product_reviews_info/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#16: &amp;#39;NOTIFY_HEADER_START_PRODUCT_REVIEWS_INFO&amp;#39;
#117: &amp;#39;NOTIFY_HEADER_END_PRODUCT_REVIEWS_INFO&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespageslogoffheader_phpphp&#34;&gt;includes/modules/pages/logoff/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#12: &amp;#39;NOTIFY_HEADER_START_LOGOFF&amp;#39;
#33: &amp;#39;NOTIFY_HEADER_END_LOGOFF&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagesredirectheader_phpphp&#34;&gt;includes/modules/pages/redirect/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#21: &amp;#39;NOTIFY_BEFORE_REDIRECT_ACTION_PRODUCT&amp;#39;, array(), $_GET[&amp;#39;products_id&amp;#39;], $_SESSION[&amp;#39;languages_id&amp;#39;]
#29: &amp;#39;NOTIFY_BEFORE_REDIRECT_ACTION_PRODUCT&amp;#39;, array(), $_GET[&amp;#39;products_id&amp;#39;], $_SESSION[&amp;#39;languages_id&amp;#39;]
#42: &amp;#39;NOTIFY_BEFORE_REDIRECT_ACTION_MUSIC_ARTIST&amp;#39;, array(), $_GET[&amp;#39;artists_id&amp;#39;], $_SESSION[&amp;#39;languages_id&amp;#39;]
#51: &amp;#39;NOTIFY_BEFORE_REDIRECT_ACTION_MUSIC_ARTIST&amp;#39;, array(), $_GET[&amp;#39;artists_id&amp;#39;], $_SESSION[&amp;#39;languages_id&amp;#39;]
#65: &amp;#39;NOTIFY_BEFORE_REDIRECT_ACTION_RECORD_COMPANY&amp;#39;, array(), $_GET[&amp;#39;record_company_id&amp;#39;], $_SESSION[&amp;#39;languages_id&amp;#39;]
#74: &amp;#39;NOTIFY_BEFORE_REDIRECT_ACTION_RECORD_COMPANY&amp;#39;, array(), $_GET[&amp;#39;record_company_id&amp;#39;], $_SESSION[&amp;#39;languages_id&amp;#39;]
#147: &amp;#39;NOTIFY_REDIRECT_DEFAULT_ACTION&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagesadvanced_search_resultheader_phpphp&#34;&gt;includes/modules/pages/advanced_search_result/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#11: &amp;#39;NOTIFY_HEADER_START_ADVANCED_SEARCH_RESULTS&amp;#39;
#33: &amp;#39;NOTIFY_ADVANCED_SEARCH_RESULTS_ADDL_CLAUSE&amp;#39;, array(), $search_additional_clause
#215: &amp;#39;NOTIFY_SEARCH_COLUMNLIST_STRING&amp;#39;
#229: &amp;#39;NOTIFY_SEARCH_SELECT_STRING&amp;#39;
#262: &amp;#39;NOTIFY_SEARCH_FROM_STRING&amp;#39;
#415: &amp;#39;NOTIFY_SEARCH_WHERE_STRING&amp;#39;
#477: &amp;#39;NOTIFY_SEARCH_ORDERBY_STRING&amp;#39;, $listing_sql
#494: &amp;#39;NOTIFY_HEADER_END_ADVANCED_SEARCH_RESULTS&amp;#39;, $keywords
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagesindexmain_template_varsphp&#34;&gt;includes/modules/pages/index/main_template_vars.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#12: &amp;#39;NOTIFY_HEADER_START_INDEX_MAIN_TEMPLATE_VARS&amp;#39;
#55: &amp;#39;NOTIFY_HEADER_INDEX_MAIN_TEMPLATE_VARS_RELEASE_PRODUCT_TYPE_VARS&amp;#39;
#229: &amp;#39;NOTIFY_HEADER_INDEX_MAIN_TEMPLATE_VARS_PAGE_BODY&amp;#39;, NULL, $tpl_page_body, $current_categories_name
#234: &amp;#39;NOTIFY_HEADER_END_INDEX_MAIN_TEMPLATE_VARS&amp;#39;, NULL, $current_categories_description
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagesindexheader_phpphp&#34;&gt;includes/modules/pages/index/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#11: &amp;#39;NOTIFY_HEADER_START_INDEX&amp;#39;
#63:  &amp;#39;NOTIFY_INDEX_CATEGORY_STATUS_CHECK&amp;#39;, array(&amp;#39;cPath&amp;#39; =&amp;gt; $cPath, &amp;#39;current_category_id&amp;#39; =&amp;gt; $current_category_id), $category_redirect_handled, $current_category_not_found, $current_category_is_disabled, $current_category_has_products, $current_category_has_subcats, $category_depth 
#146: &amp;#39;NOTIFY_HEADER_END_INDEX&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagesproduct_infomain_template_varsphp&#34;&gt;includes/modules/pages/product_info/main_template_vars.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#14: &amp;#39;NOTIFY_MAIN_TEMPLATE_VARS_START_PRODUCT_INFO&amp;#39;
#34: &amp;#39;NOTIFY_PRODUCT_VIEWS_HIT_INCREMENTOR&amp;#39;, (int)$_GET[&amp;#39;products_id&amp;#39;]
#109: &amp;#39;NOTIFY_MAIN_TEMPLATE_VARS_PRODUCT_TYPE_VARS_PRODUCT_INFO&amp;#39;
#149: &amp;#39;NOTIFY_MAIN_TEMPLATE_VARS_EXTRA_PRODUCT_INFO&amp;#39;
#157: &amp;#39;NOTIFY_MAIN_TEMPLATE_VARS_END_PRODUCT_INFO&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagesproduct_infoheader_phpphp&#34;&gt;includes/modules/pages/product_info/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#11: &amp;#39;NOTIFY_HEADER_START_PRODUCT_INFO&amp;#39;
#25: &amp;#39;NOTIFY_HEADER_END_PRODUCT_INFO&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagesproduct_infomain_template_vars_product_typephp&#34;&gt;includes/modules/pages/product_info/main_template_vars_product_type.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#18: &amp;#39;NOTIFY_PRODUCT_TYPE_VARS_START_PRODUCT_INFO&amp;#39;
#36: &amp;#39;NOTIFY_PRODUCT_TYPE_VARS_END_PRODUCT_INFO&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagesgv_faqheader_phpphp&#34;&gt;includes/modules/pages/gv_faq/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#11: &amp;#39;NOTIFY_HEADER_START_GV_FAQ&amp;#39;
#35: &amp;#39;NOTIFY_HEADER_END_GV_FAQ&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagesaccount_notificationsheader_phpphp&#34;&gt;includes/modules/pages/account_notifications/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#10: &amp;#39;NOTIFY_HEADER_START_ACCOUNT_NOTIFICATION&amp;#39;
#136: &amp;#39;NOTIFY_HEADER_END_ACCOUNT_NOTIFICATION&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagesaddress_bookheader_phpphp&#34;&gt;includes/modules/pages/address_book/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#11: &amp;#39;NOTIFY_HEADER_START_ADDRESS_BOOK&amp;#39;
#48: &amp;#39;NOTIFY_HEADER_END_ADDRESS_BOOK&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagescreate_accountheader_phpphp&#34;&gt;includes/modules/pages/create_account/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#12: &amp;#39;NOTIFY_HEADER_START_CREATE_ACCOUNT&amp;#39;
#21: &amp;#39;NOTIFY_HEADER_END_CREATE_ACCOUNT&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagesaccountheader_phpphp&#34;&gt;includes/modules/pages/account/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#10: &amp;#39;NOTIFY_HEADER_START_ACCOUNT&amp;#39;
#72: &amp;#39;NOTIFY_HEADER_END_ACCOUNT&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagesaccount_passwordheader_phpphp&#34;&gt;includes/modules/pages/account_password/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#11: &amp;#39;NOTIFY_HEADER_START_ACCOUNT_PASSWORD&amp;#39;
#56: &amp;#39;NOTIFY_HEADER_ACCOUNT_PASSWORD_CHANGED&amp;#39;, $_SESSION[&amp;#39;customer_id&amp;#39;], $password_new, $check_customer-&amp;gt;fields[&amp;#39;customers_nick&amp;#39;]
#73: &amp;#39;NOTIFY_HEADER_END_ACCOUNT_PASSWORD&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagescheckout_shipping_addressheader_phpphp&#34;&gt;includes/modules/pages/checkout_shipping_address/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#12: &amp;#39;NOTIFY_HEADER_START_CHECKOUT_SHIPPING_ADDRESS&amp;#39;
#57: &amp;#39;NOTIFY_HEADER_END_CHECKOUT_SHIPPING_ADDRESS&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagesshopping_cartheader_phpphp&#34;&gt;includes/modules/pages/shopping_cart/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#11: &amp;#39;NOTIFY_HEADER_START_SHOPPING_CART&amp;#39;
#160: &amp;#39;NOTIFY_HEADER_END_SHOPPING_CART&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagesaccount_editheader_phpphp&#34;&gt;includes/modules/pages/account_edit/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#10: &amp;#39;NOTIFY_HEADER_START_ACCOUNT_EDIT&amp;#39;
#93: &amp;#39;NOTIFY_NICK_CHECK_FOR_EXISTING_EMAIL&amp;#39;, $email_address, $nick_error, $nick
#102: &amp;#39;NOTIFY_HEADER_ACCOUNT_EDIT_VERIFY_COMPLETE&amp;#39;
#106: &amp;#39;NOTIFY_NICK_UPDATE_EMAIL_ADDRESS&amp;#39;, $nick, $email_address
#151: &amp;#39;NOTIFY_HEADER_ACCOUNT_EDIT_UPDATES_COMPLETE&amp;#39;
#208: &amp;#39;NOTIFY_HEADER_END_ACCOUNT_EDIT&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagessite_mapheader_phpphp&#34;&gt;includes/modules/pages/site_map/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#12: &amp;#39;NOTIFY_HEADER_START_SITE_MAP&amp;#39;
#26: &amp;#39;NOTIFY_HEADER_END_SITE_MAP&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagesloginheader_phpphp&#34;&gt;includes/modules/pages/login/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#10: &amp;#39;NOTIFY_HEADER_START_LOGIN&amp;#39;
#75: &amp;#39;NOTIFY_LOGIN_BANNED&amp;#39;
#91: &amp;#39;NOTIFY_PROCESS_3RD_PARTY_LOGINS&amp;#39;, $email_address, $password, $loginAuthorized
#137: &amp;#39;NOTIFY_LOGIN_SUCCESS&amp;#39;
#182: &amp;#39;NOTIFY_LOGIN_FAILURE&amp;#39;
#194: &amp;#39;NOTIFY_HEADER_END_LOGIN&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagescheckout_processheader_phpphp&#34;&gt;includes/modules/pages/checkout_process/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#11: &amp;#39;NOTIFY_HEADER_START_CHECKOUT_PROCESS&amp;#39;
#18: &amp;#39;NOTIFY_CHECKOUT_PROCESS_BEFORE_CART_RESET&amp;#39;, $insert_id
#30: &amp;#39;NOTIFY_HEADER_END_CHECKOUT_PROCESS&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;includesmodulespagesaddress_book_processheader_phpphp&#34;&gt;includes/modules/pages/address_book_process/header_php.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#10: &amp;#39;NOTIFY_HEADER_START_ADDRESS_BOOK_PROCESS&amp;#39;
#32: &amp;#39;NOTIFY_HEADER_ADDRESS_BOOK_DELETION_DONE&amp;#39;
#169: &amp;#39;NOTIFY_ADDRESS_BOOK_PROCESS_VALIDATION&amp;#39;, array(), $error
#198: &amp;#39;NOTIFY_MODULE_ADDRESS_BOOK_UPDATED_ADDRESS_BOOK_RECORD&amp;#39;, array_merge(array(&amp;#39;address_book_id&amp;#39; =&amp;gt; $_GET[&amp;#39;edit&amp;#39;], &amp;#39;customers_id&amp;#39; =&amp;gt; $_SESSION[&amp;#39;customer_id&amp;#39;]), $sql_data_array)
#216: &amp;#39;NOTIFY_MODULE_ADDRESS_BOOK_UPDATED_CUSTOMER_RECORD&amp;#39;, array_merge(array(&amp;#39;customers_id&amp;#39; =&amp;gt; $_SESSION[&amp;#39;customer_id&amp;#39;]), $sql_data_array)
#224: &amp;#39;NOTIFY_MODULE_ADDRESS_BOOK_ADDED_ADDRESS_BOOK_RECORD&amp;#39;, array_merge(array(&amp;#39;address_id&amp;#39; =&amp;gt; $new_address_book_id), $sql_data_array)
#246: &amp;#39;NOTIFY_MODULE_ADDRESS_BOOK_UPDATED_PRIMARY_CUSTOMER_RECORD&amp;#39;, array_merge(array(&amp;#39;address_id&amp;#39; =&amp;gt; $new_address_book_id, &amp;#39;customers_id&amp;#39; =&amp;gt; $_SESSION[&amp;#39;customer_id&amp;#39;]), $sql_data_array)
#353: &amp;#39;NOTIFY_HEADER_END_ADDRESS_BOOK_PROCESS&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;adminattributes_controllerphp&#34;&gt;admin/attributes_controller.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#347: &amp;#39;NOTIFY_ATTRIBUTE_CONTROLLER_ADD_PRODUCT_ATTRIBUTES&amp;#39;, $products_attributes_id
#492: &amp;#39;NOTIFY_ATTRIBUTE_CONTROLLER_UPDATE_PRODUCT_ATTRIBUTE&amp;#39;, $attribute_id
#505: &amp;#39;NOTIFY_ATTRIBUTE_CONTROLLER_DELETE_ATTRIBUTE&amp;#39;, [&amp;#39;attribute_id&amp;#39; =&amp;gt; $attribute_id], $attribute_id
#522: &amp;#39;NOTIFY_ATTRIBUTE_CONTROLLER_DELETE_ALL&amp;#39;, [&amp;#39;pID&amp;#39; =&amp;gt; $_POST[&amp;#39;products_filter&amp;#39;]]
#536: &amp;#39;NOTIFY_ATTRIBUTE_CONTROLLER_DELETE_OPTION_NAME_VALUES&amp;#39;, [&amp;#39;pID&amp;#39; =&amp;gt; $_POST[&amp;#39;products_filter&amp;#39;], &amp;#39;options_id&amp;#39; =&amp;gt; $_POST[&amp;#39;products_options_id_all&amp;#39;]]
#749: &amp;#39;NOTIFY_ATTRIBUTE_CONTROLLER_ADDITIONAL_ACTIONS_DROPDOWN_UPPER&amp;#39;, $zc_products, $action, $products_filter, $current_category_id
#755: &amp;#39;NOTIFY_ATTRIBUTE_CONTROLLER_ADDITIONAL_ACTIONS_DROPDOWN_SUBMENU&amp;#39;, $zc_products, $action, $products_filter, $current_category_id
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;adminproductphp&#34;&gt;admin/product.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#14: &amp;#39;NOTIFY_BEGIN_ADMIN_PRODUCTS&amp;#39;, $action
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;adminlanguagesphp&#34;&gt;admin/languages.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#178: &amp;#39;NOTIFY_ADMIN_LANGUAGE_INSERT&amp;#39;, (int)$insert_id
#255: &amp;#39;NOTIFY_ADMIN_LANGUAGE_DELETE&amp;#39;, (int)$lID
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;admincategory_product_listingphp&#34;&gt;admin/category_product_listing.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#352: &amp;#39;NOTIFY_ADMIN_PROD_LISTING_DEFAULT_ACTION&amp;#39;
#624: &amp;#39;NOTIFY_ADMIN_PROD_LISTING_HEADERS_B4_QTY&amp;#39;, &amp;#39;&amp;#39;, $extra_headings
#659: &amp;#39;NOTIFY_ADMIN_PROD_LISTING_HEADERS_AFTER_QTY&amp;#39;, &amp;#39;&amp;#39;, $extra_headings
#794: &amp;#39;NOTIFY_ADMIN_PROD_LISTING_PRODUCTS_QUERY&amp;#39;, &amp;#39;&amp;#39;, $extra_select, $extra_from, $extra_joins, $extra_ands, $order_by
#897: &amp;#39;NOTIFY_ADMIN_PROD_LISTING_DATA_B4_QTY&amp;#39;, &amp;#39;&amp;#39;, $extra_data
#928: &amp;#39;NOTIFY_ADMIN_PROD_LISTING_DATA_AFTER_QTY&amp;#39;, &amp;#39;&amp;#39;, $extra_data
#941: &amp;#39;NOTIFY_ADMIN_PROD_LISTING_ADD_ICON&amp;#39;, $product, $additional_icons
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;adminadmin_activityphp&#34;&gt;admin/admin_activity.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#293: &amp;#39;NOTIFY_ADMIN_ACTIVITY_LOG_RESET&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;adminincludesclassesclassadminzcobserverlogeventlistenerphp&#34;&gt;admin/includes/classes/class.admin.zcObserverLogEventListener.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#57: $this-&amp;gt;notifier-&amp;gt;notify(&amp;#39;NOTIFY_ADMIN_FIRE_LOG_WRITERS&amp;#39;, $log_data
#192: $this-&amp;gt;notifier-&amp;gt;notify(&amp;#39;NOTIFY_ADMIN_FIRE_LOG_WRITER_RESET&amp;#39;
#208: &amp;#39;NOTIFY_ADMIN_ACTIVITY_LOG_EVENT&amp;#39;, $message, $severity
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;adminincludesinit_includesinit_languagesphp&#34;&gt;admin/includes/init_includes/init_languages.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#21: &amp;#39;NOTIFY_LANGUAGE_CHANGE_REQUESTED_BY_ADMIN_VISITOR&amp;#39;, $_GET[&amp;#39;language&amp;#39;], $lng
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;adminincludesinit_includesinit_admin_historyphp&#34;&gt;admin/includes/init_includes/init_admin_history.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#12: &amp;#39;NOTIFY_ADMIN_ACTIVITY_LOG_EVENT&amp;#39;, &amp;#39;POST&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;adminincludesattributes_previewphp&#34;&gt;admin/includes/attributes_preview.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#95: &amp;#39;NOTIFY_ATTRIBUTES_MODULE_START_OPTION&amp;#39;, $products_options_names-&amp;gt;fields
#105: &amp;#39;NOTIFY_ATTRIBUTES_MODULE_START_OPTIONS_LOOP&amp;#39;, array(), $products_options-&amp;gt;fields
#594: &amp;#39;NOTIFY_ATTRIBUTES_MODULE_DEFAULT_SWITCH&amp;#39;, $products_options_names-&amp;gt;fields, $options_name, $options_menu, $options_comment, $options_comment_position, $options_html_id
#601: &amp;#39;NOTIFY_ATTRIBUTES_MODULE_OPTION_BUILT&amp;#39;, $products_options_names-&amp;gt;fields, $options_name, $options_menu, $options_comment, $options_comment_position, $options_html_id, $options_attributes_image
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;adminincludesfooterphp&#34;&gt;admin/includes/footer.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#26: &amp;#39;NOTIFY_ADMIN_FOOTER_END&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;adminincludesfunctionshtml_outputphp&#34;&gt;admin/includes/functions/html_output.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#14:  &amp;#39;NOTIFY_HANDLE_ADMIN_HREF_LINK&amp;#39;, array( &amp;#39;page&amp;#39; =&amp;gt; $page, &amp;#39;parameters&amp;#39; =&amp;gt; $parameters, &amp;#39;add_session_id&amp;#39; =&amp;gt; false, ), $page, $parameters 
#70: &amp;#39;NOTIFY_SEFU_INTERCEPT_ADMCATHREF&amp;#39;, array(), $link, $page, $parameters, $connection
#109: &amp;#39;NOTIFY_SEFU_INTERCEPT_ADMCATHOME&amp;#39;, array(), $link, $connection
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;adminincludesfunctionsfunctions_pricesphp&#34;&gt;admin/includes/functions/functions_prices.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#119: &amp;#39;ZEN_GET_PRODUCTS_BASE_PRICE&amp;#39;, $products_id, $products_base_price, $base_price_is_handled
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;adminincludesfunctionslocalizationphp&#34;&gt;admin/includes/functions/localization.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#41: &amp;#39;ADMIN_CURRENCY_EXCHANGE_RATE_MULTIPLIER&amp;#39;, $currency-&amp;gt;fields[&amp;#39;code&amp;#39;], $multiplier, $rate
#52: &amp;#39;ADMIN_CURRENCY_EXCHANGE_RATE_SINGLE&amp;#39;, $currency-&amp;gt;fields[&amp;#39;code&amp;#39;], $rate
#74: &amp;#39;ADMIN_CURRENCY_EXCHANGE_RATES_UPDATED&amp;#39;, $msg
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;adminincludesfunctionsgeneralphp&#34;&gt;admin/includes/functions/general.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#1103: &amp;#39;NOTIFIER_ADMIN_ZEN_REMOVE_CATEGORY&amp;#39;, array(), $category_id
#1264: &amp;#39;NOTIFIER_ADMIN_ZEN_REMOVE_PRODUCT&amp;#39;, array(), $product_id, $ptc
#1354: &amp;#39;NOTIFIER_ADMIN_ZEN_PRODUCTS_ATTRIBUTES_DOWNLOAD_DELETE&amp;#39;, array(), $product_id
#1366: &amp;#39;NOTIFIER_ADMIN_ZEN_REMOVE_ORDER&amp;#39;, array(), $order_id, $restock
#1582:  &amp;#39;NOTIFY_ZEN_GET_TAX_RATE_OVERRIDE&amp;#39;, array( &amp;#39;class_id&amp;#39; =&amp;gt; $class_id, &amp;#39;country_id&amp;#39; =&amp;gt; $country_id, &amp;#39;zone_id&amp;#39; =&amp;gt; $zone_id ), $tax_rate 
#2023: &amp;#39;FUNCTIONS_LOOKUPS_OPTION_NAME_NO_VALUES_OPT_TYPE&amp;#39;, $opt_type, $test_var
#2059: &amp;#39;ZEN_COPY_PRODUCTS_ATTRIBUTES_START&amp;#39;, array(&amp;#39;from&amp;#39; =&amp;gt; (int)$products_id_from, &amp;#39;to&amp;#39; =&amp;gt; (int)$products_id_to)
#2072: &amp;#39;ZEN_COPY_PRODUCTS_ATTRIBUTES_DELETE&amp;#39;, (int)$products_id_to
#2154: &amp;#39;ZEN_COPY_PRODUCTS_ATTRIBUTES_ADD&amp;#39;, array(&amp;#39;pID&amp;#39; =&amp;gt; (int)$products_id_to, &amp;#39;fields&amp;#39; =&amp;gt; $products_copy_from-&amp;gt;fields)
#2194: &amp;#39;ZEN_COPY_PRODUCTS_ATTRIBUTES_UPDATE&amp;#39;, array(&amp;#39;pID&amp;#39; =&amp;gt; (int)$products_id_to, &amp;#39;fields&amp;#39; =&amp;gt; $products_copy_from-&amp;gt;fields)
#2203: &amp;#39;ZEN_COPY_PRODUCTS_ATTRIBUTES_COMPLETE&amp;#39;, array(&amp;#39;from&amp;#39; =&amp;gt; (int)$products_id_from, &amp;#39;to&amp;#39; =&amp;gt; (int)$products_id_to)
#2301: &amp;#39;NOTIFIER_ADMIN_ZEN_DELETE_PRODUCTS_ATTRIBUTES&amp;#39;, array(), $delete_product_id
#3293: &amp;#39;NOTIFY_TEST_DOWNLOADABLE_FILE_EXISTS&amp;#39;, $check_filename, $handler
#3668: &amp;#39;NOTIFY_ZEN_ADMIN_INVALID_IP_DETECTED&amp;#39;, $original_ip
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;adminincludesmodulesnew_product_previewphp&#34;&gt;admin/includes/modules/new_product_preview.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#24: &amp;#39;NOTIFY_ADMIN_PRODUCT_IMAGE_UPLOADED&amp;#39;, $products_image, $products_image_name
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;adminincludesmodulesupdate_productphp&#34;&gt;admin/includes/modules/update_product.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#126: &amp;#39;NOTIFY_MODULES_UPDATE_PRODUCT_END&amp;#39;, array(&amp;#39;action&amp;#39; =&amp;gt; $action, &amp;#39;products_id&amp;#39; =&amp;gt; $products_id)
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;adminincludesmodulesproduct_free_shippingcollect_infophp&#34;&gt;admin/includes/modules/product_free_shipping/collect_info.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#209: &amp;#39;NOTIFY_ADMIN_PRODUCT_COLLECT_INFO_EXTRA_INPUTS&amp;#39;, $pInfo, $extra_product_inputs
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;adminincludesmodulesdocument_generalcollect_infophp&#34;&gt;admin/includes/modules/document_general/collect_info.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#217: &amp;#39;NOTIFY_ADMIN_PRODUCT_COLLECT_INFO_EXTRA_INPUTS&amp;#39;, $pInfo, $extra_product_inputs
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;adminincludesmodulesdocument_productcollect_infophp&#34;&gt;admin/includes/modules/document_product/collect_info.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#206: &amp;#39;NOTIFY_ADMIN_PRODUCT_COLLECT_INFO_EXTRA_INPUTS&amp;#39;, $pInfo, $extra_product_inputs
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;adminincludesmodulesproductcollect_infophp&#34;&gt;admin/includes/modules/product/collect_info.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#209: &amp;#39;NOTIFY_ADMIN_PRODUCT_COLLECT_INFO_EXTRA_INPUTS&amp;#39;, $pInfo, $extra_product_inputs
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;adminincludesmodulescopy_product_confirmphp&#34;&gt;admin/includes/modules/copy_product_confirm.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#76: &amp;#39;NOTIFY_MODULES_COPY_PRODUCT_CONFIRM_DUPLICATE_FIELDS&amp;#39;, $product, $separately_updated_fields, $casted_fields
#198: &amp;#39;NOTIFY_MODULES_COPY_TO_CONFIRM_DUPLICATE&amp;#39;, compact(&amp;#39;products_id&amp;#39;, &amp;#39;dup_products_id&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;adminincludesmodulesproduct_musicupdate_productphp&#34;&gt;admin/includes/modules/product_music/update_product.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#142: &amp;#39;NOTIFY_PRODUCT_MUSIC_UPDATE_PRODUCT_END&amp;#39;, array(&amp;#39;action&amp;#39; =&amp;gt; $action, &amp;#39;products_id&amp;#39; =&amp;gt; $products_id)
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;adminincludesmodulesproduct_musiccollect_infophp&#34;&gt;admin/includes/modules/product_music/collect_info.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#242: &amp;#39;NOTIFY_ADMIN_PRODUCT_COLLECT_INFO_EXTRA_INPUTS&amp;#39;, $pInfo, $extra_product_inputs
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;adminincludesmodulesproduct_musiccopy_product_confirmphp&#34;&gt;admin/includes/modules/product_music/copy_product_confirm.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#76: &amp;#39;NOTIFY_MODULES_COPY_PRODUCT_CONFIRM_DUPLICATE_FIELDS&amp;#39;, $product, $separately_updated_fields, $casted_fields
#151: &amp;#39;NOTIFY_PRODUCT_MUSIC_COPY_TO_CONFIRM_DUPLICATE&amp;#39;, compact(&amp;#39;products_id&amp;#39;, &amp;#39;dup_products_id&amp;#39;)
#229: &amp;#39;NOTIFY_PRODUCT_MUSIC_COPY_TO_CONFIRM_DUPLICATE&amp;#39;, compact(&amp;#39;products_id&amp;#39;, &amp;#39;dup_products_id&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;adminincludesmodulesproduct_musiccopy_productphp&#34;&gt;admin/includes/modules/product_music/copy_product.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#49: &amp;#39;NOTIFY_ADMIN_PRODUCT_COPY_TO_ATTRIBUTES&amp;#39;, $pInfo, $contents
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;adminincludesmodulescopy_productphp&#34;&gt;admin/includes/modules/copy_product.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#48: &amp;#39;NOTIFY_ADMIN_PRODUCT_COPY_TO_ATTRIBUTES&amp;#39;, $pInfo, $contents
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;adminoptions_values_managerphp&#34;&gt;admin/options_values_manager.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#163: &amp;#39;OPTIONS_VALUES_MANAGER_DELETE_VALUE&amp;#39;, array(&amp;#39;value_id&amp;#39; =&amp;gt; $value_id)
#475: &amp;#39;OPTIONS_VALUES_MANAGER_DELETE_VALUES_OF_OPTIONNAME&amp;#39;, array(&amp;#39;current_products_id&amp;#39; =&amp;gt; $current_products_id, &amp;#39;remove_ids&amp;#39; =&amp;gt; $remove_downloads_ids, &amp;#39;options_id&amp;#39; =&amp;gt; $options_id_from, &amp;#39;options_values_id&amp;#39; =&amp;gt; $options_values_values_id_from)
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;adminwhos_onlinephp&#34;&gt;admin/whos_online.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#243: &amp;#39;ADMIN_WHOSONLINE_IP_LINKS&amp;#39;, $item, $additional_ipaddress_links, $whois_url
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;adminezpagesphp&#34;&gt;admin/ezpages.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#136: &amp;#39;NOTIFY_ADMIN_EZPAGES_UPDATE_BASE&amp;#39;, $action, $page_error, $sql_data_array
#168: &amp;#39;NOTIFY_ADMIN_EZPAGES_UPDATE_LANG_INSERT&amp;#39;, array(&amp;#39;pages_id&amp;#39; =&amp;gt; (int)$pages_id, &amp;#39;languages_id&amp;#39; =&amp;gt; $language_id), $sql_data_array
#184: &amp;#39;NOTIFY_ADMIN_EZPAGES_UPDATE_LANG_UPDATE&amp;#39;, array(&amp;#39;pages_id&amp;#39; =&amp;gt; (int)$pages_id, &amp;#39;languages_id&amp;#39; =&amp;gt; $language_id), $sql_data_array
#299: &amp;#39;NOTIFY_ADMIN_EZPAGES_NEW&amp;#39;, &amp;#39;&amp;#39;, $parameters
#372: &amp;#39;NOTIFY_ADMIN_EZPAGES_FORM_FIELDS&amp;#39;, $ezInfo, $extra_page_inputs
#620: &amp;#39;NOTIFY_ADMIN_EZPAGES_EXTRA_ACTION_ICONS&amp;#39;, $page, $extra_action_icons
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;admincoupon_adminphp&#34;&gt;admin/coupon_admin.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#95: &amp;#39;ADMIN_COUPON_CODE_EMAILED_TO_CUSTOMER&amp;#39;, $coupon_result-&amp;gt;fields[&amp;#39;coupon_code&amp;#39;], $mail-&amp;gt;fields[&amp;#39;customers_email_address&amp;#39;]
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;admincategoriesphp&#34;&gt;admin/categories.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#41: &amp;#39;NOTIFY_BEGIN_ADMIN_CATEGORIES&amp;#39;, $action
#352: &amp;#39;NOTIFY_ADMIN_CATEGORIES_EXTRA_INPUTS&amp;#39;, $cInfo, $extra_category_inputs
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;admincustomersphp&#34;&gt;admin/customers.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#35: &amp;#39;NOTIFY_ADMIN_CUSTOMERS_LIST_ADDRESSES&amp;#39;, $addresses_query
#244: &amp;#39;NOTIFY_ADMIN_CUSTOMERS_UPDATE_VALIDATE&amp;#39;, array(), $error
#302: &amp;#39;NOTIFY_ADMIN_CUSTOMERS_B4_ADDRESS_UPDATE&amp;#39;, array(&amp;#39;customers_id&amp;#39; =&amp;gt; $customers_id, &amp;#39;address_book_id&amp;#39; =&amp;gt; $default_address_id), $sql_data_array
#306: &amp;#39;ADMIN_CUSTOMER_UPDATE&amp;#39;, (int)$customers_id, $default_address_id, $sql_data_array
#366: &amp;#39;NOTIFIER_ADMIN_ZEN_CUSTOMERS_DELETE_CONFIRM&amp;#39;, array(&amp;#39;customers_id&amp;#39; =&amp;gt; $customers_id)
#731: &amp;#39;NOTIFY_ADMIN_CUSTOMERS_CUSTOMER_EDIT&amp;#39;, $cInfo, $additional_fields
#1127: &amp;#39;NOTIFY_ADMIN_CUSTOMERS_LISTING_HEADER&amp;#39;, array(), $additional_headings
#1201: &amp;#39;NOTIFY_ADMIN_CUSTOMERS_LISTING_NEW_FIELDS&amp;#39;, array(), $new_fields, $disp_order
#1311: &amp;#39;NOTIFY_ADMIN_CUSTOMERS_LISTING_ELEMENT&amp;#39;, $customer, $additional_columns
#1402: &amp;#39;NOTIFY_ADMIN_CUSTOMERS_PLACE_ORDER_BUTTON&amp;#39;, $cInfo, $contents, $place_order_override
#1427: &amp;#39;NOTIFY_ADMIN_CUSTOMERS_MENU_BUTTONS&amp;#39;, $cInfo, $contents
#1460: &amp;#39;NOTIFY_ADMIN_CUSTOMERS_MENU_BUTTONS_END&amp;#39;, (isset($cInfo) ? $cInfo : new stdClass), $contents
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;adminordersphp&#34;&gt;admin/orders.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#98: &amp;#39;NOTIFY_ADMIN_ORDER_PREDISPLAY_HOOK&amp;#39;, $oID, $action
#272: &amp;#39;NOTIFY_ADMIN_ORDERS_UPDATE_ORDER_START&amp;#39;, $oID
#437: &amp;#39;NOTIFY_ADMIN_ORDERS_DEFAULT_ACTION&amp;#39;, $oID, $order
#571: &amp;#39;NOTIFY_ADMIN_ORDERS_EDIT_BEGIN&amp;#39;, $oID, $order
#607: &amp;#39;NOTIFY_ADMIN_ORDERS_UPPER_BUTTONS&amp;#39;, $oID, $left_side_buttons, $right_side_buttons
#649: &amp;#39;NOTIFY_ADMIN_ORDERS_ADDRESS_FOOTERS&amp;#39;, &amp;#39;customer&amp;#39;, $address_footer_suffix, $order-&amp;gt;customer
#672: &amp;#39;ADMIN_ORDERS_IP_LINKS&amp;#39;, $lookup_ip, $whois_url
#697: &amp;#39;NOTIFY_ADMIN_ORDERS_ADDRESS_FOOTERS&amp;#39;, &amp;#39;delivery&amp;#39;, $address_footer_suffix, $order-&amp;gt;delivery
#716: &amp;#39;NOTIFY_ADMIN_ORDERS_ADDRESS_FOOTERS&amp;#39;, &amp;#39;billing&amp;#39;, $address_footer_suffix, $order-&amp;gt;billing
#768: &amp;lt;?php &amp;#39;NOTIFY_ADMIN_ORDERS_PAYMENTDATA_COLUMN2&amp;#39;, $oID, $order ?&amp;gt;
#920: &amp;#39;NOTIFY_ADMIN_ORDERS_STATUS_HISTORY_EXTRA_COLUMN_HEADING&amp;#39;, array(), $extra_headings
#974: &amp;#39;NOTIFY_ADMIN_ORDERS_STATUS_HISTORY_EXTRA_COLUMN_DATA&amp;#39;, $orders_history-&amp;gt;fields, $extra_data
#1011: &amp;#39;NOTIFY_ADMIN_ORDERS_AFTER_STATUS_LISTING&amp;#39;, $oID, $additional_content
#1043: &amp;#39;NOTIFY_ADMIN_ORDERS_ADDL_HISTORY_INPUTS&amp;#39;, array()
#1065: &amp;#39;NOTIFY_ADMIN_ORDERS_EXTRA_STATUS_INPUTS&amp;#39;, $order, $extra_status_inputs
#1113: &amp;#39;NOTIFY_ADMIN_ORDERS_EDIT_BUTTONS&amp;#39;, $oID, $order, $extra_buttons
#1143: &amp;#39;NOTIFY_ADMIN_ORDERS_MENU_LEGEND&amp;#39;, array(), $extra_legends
#1204: &amp;#39;NOTIFY_ADMIN_ORDERS_LIST_EXTRA_COLUMN_HEADING&amp;#39;, array(), $extra_headings
#1243: &amp;#39;NOTIFY_ADMIN_ORDERS_SEARCH_PARMS&amp;#39;, $keywords, $search, $search_distinct, $new_fields, $new_table, $order_by
#1306: &amp;#39;NOTIFY_ADMIN_ORDERS_SHOW_ORDER_DIFFERENCE&amp;#39;, array(), $orders-&amp;gt;fields, $show_difference, $extra_action_icons
#1371: &amp;#39;NOTIFY_ADMIN_ORDERS_LIST_EXTRA_COLUMN_DATA&amp;#39;, (isset($oInfo) ? $oInfo : array()), $orders-&amp;gt;fields, $extra_data
#1447: &amp;#39;NOTIFY_ADMIN_ORDERS_MENU_BUTTONS&amp;#39;, $oInfo, $contents
#1514: &amp;#39;NOTIFY_ADMIN_ORDERS_MENU_BUTTONS_END&amp;#39;, (isset($oInfo) ? $oInfo : array()), $contents
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;adminoptions_name_managerphp&#34;&gt;admin/options_name_manager.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#178: &amp;#39;OPTIONS_NAME_MANAGER_DELETE_OPTION&amp;#39;, [&amp;#39;option_id&amp;#39; =&amp;gt; $option_id, &amp;#39;options_values_id&amp;#39; =&amp;gt; (int)$remove_option_value[&amp;#39;products_options_values_id&amp;#39;]]
#297: &amp;#39;OPTIONS_NAME_MANAGER_UPDATE_OPTIONS_VALUES_DELETE&amp;#39;, [ &amp;#39;products_id&amp;#39; =&amp;gt; $all_update_product[&amp;#39;products_id&amp;#39;], &amp;#39;options_id&amp;#39; =&amp;gt; $all_options_value[&amp;#39;products_options_id&amp;#39;], &amp;#39;options_values_id&amp;#39; =&amp;gt; $all_options_value[&amp;#39;products_options_values_id&amp;#39;] ] 
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;image_purge_utilityphp&#34;&gt;image_purge_utility.php&lt;/h4&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#267:  &amp;#39;NOTIFY_MODULES_ADDITIONAL_IMAGES_FILE_MATCH&amp;#39;, array( &amp;#39;file&amp;#39; =&amp;gt; $file, &amp;#39;file_extension&amp;#39; =&amp;gt; $file_extension, &amp;#39;products_image&amp;#39; =&amp;gt; $products_image, &amp;#39;products_image_base&amp;#39; =&amp;gt; $products_image_base ), $current_image_match 
&lt;/code&gt;&lt;/pre&gt;
      </description>
    </item>
    
    <item>
      <title>Dev: Notifiers - List of</title>
      <link>/zendocs_test1/dev/code/notifiers_list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/zendocs_test1/dev/code/notifiers_list/</guid>
      <description>
        
        
        &lt;!-- RELEASETIME - update --&gt;
&lt;!-- see find_notifiers in https://github.com/scottcwilson/zencart_tools --&gt; 
&lt;p&gt;This is a list of notifiers available in Zen Cart 1.5.7c and above.&lt;/p&gt;
&lt;p&gt;For a list of notifiers with module name, line number and parameters, 
please install the &lt;a href=&#34;https://github.com/lat9/notifier_report&#34;&gt;Notifier Report&lt;/a&gt; on your site, or see &lt;a href=&#34;/zendocs_test1/dev/code/notifier_report/&#34;&gt;the output of Notifier Report&lt;/a&gt; here.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;NOTIFIER_ADMIN_ZEN_CUSTOMERS_DELETE_CONFIRM
NOTIFIER_ADMIN_ZEN_DELETE_PRODUCTS_ATTRIBUTES
NOTIFIER_ADMIN_ZEN_PRODUCTS_ATTRIBUTES_DOWNLOAD_DELETE
NOTIFIER_ADMIN_ZEN_REMOVE_CATEGORY
NOTIFIER_ADMIN_ZEN_REMOVE_ORDER
NOTIFIER_ADMIN_ZEN_REMOVE_PRODUCT
NOTIFIER_CART_ADD_CART_END
NOTIFIER_CART_ADD_CART_START
NOTIFIER_CART_CLEANUP_END
NOTIFIER_CART_CLEANUP_START
NOTIFIER_CART_COUNT_CONTENTS_END
NOTIFIER_CART_COUNT_CONTENTS_START
NOTIFIER_CART_GET_PRODUCTS_END
NOTIFIER_CART_GET_PRODUCTS_START
NOTIFIER_CART_GET_QUANTITY_END_FALSE
NOTIFIER_CART_GET_QUANTITY_END_QTY
NOTIFIER_CART_GET_QUANTITY_START
NOTIFIER_CART_INSTANTIATE_END
NOTIFIER_CART_INSTANTIATE_START
NOTIFIER_CART_IN_CART_END_FALSE
NOTIFIER_CART_IN_CART_END_TRUE
NOTIFIER_CART_IN_CART_START
NOTIFIER_CART_OPTIONAL_ATTRIBUTE_ERROR_MESSAGE_HOOK
NOTIFIER_CART_REMOVE_ALL_END
NOTIFIER_CART_REMOVE_ALL_START
NOTIFIER_CART_REMOVE_END
NOTIFIER_CART_REMOVE_START
NOTIFIER_CART_RESET_END
NOTIFIER_CART_RESET_START
NOTIFIER_CART_RESTORE_CONTENTS_END
NOTIFIER_CART_RESTORE_CONTENTS_START
NOTIFIER_CART_SHOW_TOTAL_BEFORE_DISCOUNT_END
NOTIFIER_CART_SHOW_TOTAL_BEFORE_DISCOUNT_START
NOTIFIER_CART_SHOW_TOTAL_END
NOTIFIER_CART_SHOW_TOTAL_START
NOTIFIER_CART_UPDATE_QUANTITY_END
NOTIFIER_CART_UPDATE_QUANTITY_START
NOTIFY_ADDRESS_BOOK_PROCESS_VALIDATION
NOTIFY_ADMIN_ACTIVITY_LOG_EVENT
NOTIFY_ADMIN_ACTIVITY_LOG_RESET
NOTIFY_ADMIN_CATEGORIES_EXTRA_INPUTS
NOTIFY_ADMIN_CUSTOMERS_B4_ADDRESS_UPDATE
NOTIFY_ADMIN_CUSTOMERS_CUSTOMER_EDIT
NOTIFY_ADMIN_CUSTOMERS_LISTING_ELEMENT
NOTIFY_ADMIN_CUSTOMERS_LISTING_HEADER
NOTIFY_ADMIN_CUSTOMERS_LISTING_NEW_FIELDS
NOTIFY_ADMIN_CUSTOMERS_LIST_ADDRESSES
NOTIFY_ADMIN_CUSTOMERS_MENU_BUTTONS
NOTIFY_ADMIN_CUSTOMERS_MENU_BUTTONS_END
NOTIFY_ADMIN_CUSTOMERS_PLACE_ORDER_BUTTON
NOTIFY_ADMIN_CUSTOMERS_UPDATE_VALIDATE
NOTIFY_ADMIN_EZPAGES_EXTRA_ACTION_ICONS
NOTIFY_ADMIN_EZPAGES_FORM_FIELDS
NOTIFY_ADMIN_EZPAGES_NEW
NOTIFY_ADMIN_EZPAGES_UPDATE_BASE
NOTIFY_ADMIN_EZPAGES_UPDATE_LANG_INSERT
NOTIFY_ADMIN_EZPAGES_UPDATE_LANG_UPDATE
NOTIFY_ADMIN_FIRE_LOG_WRITERS
NOTIFY_ADMIN_FIRE_LOG_WRITER_RESET
NOTIFY_ADMIN_FOOTER_END
NOTIFY_ADMIN_INVOICE_DATA_AFTER_TAX 
NOTIFY_ADMIN_INVOICE_DATA_B4_TAX 
NOTIFY_ADMIN_INVOICE_DEFAULTS 
NOTIFY_ADMIN_INVOICE_HEADING_B4_TAX 
NOTIFY_ADMIN_INVOICE_SORT_DISPLAY 
NOTIFY_ADMIN_INVOIVE_HEADERS_AFTER_TAX 
NOTIFY_ADMIN_LANGUAGE_DELETE
NOTIFY_ADMIN_LANGUAGE_INSERT
NOTIFY_ADMIN_ORDERS_ADDL_HISTORY_INPUTS
NOTIFY_ADMIN_ORDERS_ADDRESS_FOOTERS
NOTIFY_ADMIN_ORDERS_AFTER_STATUS_LISTING
NOTIFY_ADMIN_ORDERS_DEFAULT_ACTION
NOTIFY_ADMIN_ORDERS_EDIT_BEGIN
NOTIFY_ADMIN_ORDERS_EDIT_BUTTONS
NOTIFY_ADMIN_ORDERS_EXTRA_STATUS_INPUTS
NOTIFY_ADMIN_ORDERS_LIST_EXTRA_COLUMN_DATA
NOTIFY_ADMIN_ORDERS_LIST_EXTRA_COLUMN_HEADING
NOTIFY_ADMIN_ORDERS_MENU_BUTTONS
NOTIFY_ADMIN_ORDERS_MENU_BUTTONS_END
NOTIFY_ADMIN_ORDERS_MENU_LEGEND
NOTIFY_ADMIN_ORDERS_PAYMENTDATA_COLUMN2
NOTIFY_ADMIN_ORDERS_SEARCH_PARMS
NOTIFY_ADMIN_ORDERS_SHOW_ORDER_DIFFERENCE
NOTIFY_ADMIN_ORDERS_STATUS_HISTORY_EXTRA_COLUMN_DATA
NOTIFY_ADMIN_ORDERS_STATUS_HISTORY_EXTRA_COLUMN_HEADING
NOTIFY_ADMIN_ORDERS_UPDATE_ORDER_START
NOTIFY_ADMIN_ORDERS_UPPER_BUTTONS
NOTIFY_ADMIN_ORDER_PREDISPLAY_HOOK
NOTIFY_ADMIN_PACKINGSLIP_DATA 
NOTIFY_ADMIN_PACKINGSLIP_DEFAULTS 
NOTIFY_ADMIN_PACKINGSLIP_HEADING 
NOTIFY_ADMIN_PACKINGSLIP_SORT_DISPLAY 
NOTIFY_ADMIN_PRODUCT_COLLECT_INFO_EXTRA_INPUTS
NOTIFY_ADMIN_PRODUCT_COPY_TO_ATTRIBUTES
NOTIFY_ADMIN_PRODUCT_IMAGE_UPLOADED
NOTIFY_ADMIN_PROD_LISTING_ADD_ICON
NOTIFY_ADMIN_PROD_LISTING_DATA_AFTER_QTY
NOTIFY_ADMIN_PROD_LISTING_DATA_B4_QTY
NOTIFY_ADMIN_PROD_LISTING_DEFAULT_ACTION
NOTIFY_ADMIN_PROD_LISTING_HEADERS_AFTER_QTY
NOTIFY_ADMIN_PROD_LISTING_HEADERS_B4_QTY
NOTIFY_ADMIN_PROD_LISTING_PRODUCTS_QUERY
NOTIFY_ADVANCED_SEARCH_RESULTS_ADDL_CLAUSE
NOTIFY_ASK_A_QUESTION_ACTION
NOTIFY_ASK_A_QUESTION_CAPTCHA_CHECK
NOTIFY_ATTRIBUTES_MODULE_BEFORE_ASSEMBLE_OUTPUTS
NOTIFY_ATTRIBUTES_MODULE_CHECKBOX_SELECTED
NOTIFY_ATTRIBUTES_MODULE_DEFAULT_SWITCH
NOTIFY_ATTRIBUTES_MODULE_END
NOTIFY_ATTRIBUTES_MODULE_FORMAT_VALUE
NOTIFY_ATTRIBUTES_MODULE_OPTION_BUILT
NOTIFY_ATTRIBUTES_MODULE_ORIGINAL_PRICE
NOTIFY_ATTRIBUTES_MODULE_RADIO_SELECTED
NOTIFY_ATTRIBUTES_MODULE_SALEMAKER_DISPLAY_PRICE_PERCENTAGE
NOTIFY_ATTRIBUTES_MODULE_START_OPTION
NOTIFY_ATTRIBUTES_MODULE_START_OPTIONS_LOOP
NOTIFY_ATTRIBUTE_CONTROLLER_ADDITIONAL_ACTIONS_DROPDOWN_SUBMENU
NOTIFY_ATTRIBUTE_CONTROLLER_ADDITIONAL_ACTIONS_DROPDOWN_UPPER
NOTIFY_ATTRIBUTE_CONTROLLER_ADD_PRODUCT_ATTRIBUTES
NOTIFY_ATTRIBUTE_CONTROLLER_DELETE_ALL
NOTIFY_ATTRIBUTE_CONTROLLER_DELETE_ATTRIBUTE
NOTIFY_ATTRIBUTE_CONTROLLER_DELETE_OPTION_NAME_VALUES
NOTIFY_ATTRIBUTE_CONTROLLER_UPDATE_PRODUCT_ATTRIBUTE
NOTIFY_BEFORE_REDIRECT_ACTION_MUSIC_ARTIST
NOTIFY_BEFORE_REDIRECT_ACTION_PRODUCT
NOTIFY_BEFORE_REDIRECT_ACTION_RECORD_COMPANY
NOTIFY_BEGIN_ADMIN_CATEGORIES
NOTIFY_BEGIN_ADMIN_PRODUCTS
NOTIFY_CART_ATTRIBUTES_PRICE_NEXT
NOTIFY_CART_ATTRIBUTES_PRICE_ONETIME_CHARGES_NEXT
NOTIFY_CART_ATTRIBUTES_PRICE_ONETIME_CHARGES_START
NOTIFY_CART_ATTRIBUTES_PRICE_START
NOTIFY_CART_ATTRIBUTES_WEIGHT_NEXT
NOTIFY_CART_ATTRIBUTES_WEIGHT_START
NOTIFY_CART_CALCULATE_ATTRIBUTE_PRICE
NOTIFY_CART_CALCULATE_ATTRIBUTE_WEIGHT
NOTIFY_CART_CALCULATE_PRODUCT_PRICE
NOTIFY_CART_GET_PRODUCTS_NEXT
NOTIFY_CART_USER_ACTION
NOTIFY_CHECKOUT_PROCESS_AFTER_ORDER_CREATE
NOTIFY_CHECKOUT_PROCESS_AFTER_ORDER_CREATE_ADD_PRODUCTS
NOTIFY_CHECKOUT_PROCESS_AFTER_ORDER_TOTALS_PROCESS
NOTIFY_CHECKOUT_PROCESS_AFTER_PAYMENT_MODULES_AFTER_ORDER_CREATE
NOTIFY_CHECKOUT_PROCESS_AFTER_PAYMENT_MODULES_BEFOREPROCESS
NOTIFY_CHECKOUT_PROCESS_AFTER_SEND_ORDER_EMAIL
NOTIFY_CHECKOUT_PROCESS_BEFORE_CART_RESET
NOTIFY_CHECKOUT_PROCESS_BEFORE_ORDER_TOTALS_PRE_CONFIRMATION_CHECK
NOTIFY_CHECKOUT_PROCESS_BEFORE_ORDER_TOTALS_PROCESS
NOTIFY_CHECKOUT_PROCESS_BEGIN
NOTIFY_CHECKOUT_PROCESS_HANDLE_AFFILIATES
NOTIFY_CHECKOUT_SLAMMING_ALERT
NOTIFY_CHECKOUT_SLAMMING_LOCKOUT
NOTIFY_CHECK_DOWNLOAD_HANDLER
NOTIFY_CONTACT_US_ACTION
NOTIFY_CONTACT_US_CAPTCHA_CHECK
NOTIFY_CREATE_ACCOUNT_CAPTCHA_CHECK
NOTIFY_CREATE_ACCOUNT_LOOKUP_BY_EMAIL
NOTIFY_CREATE_ACCOUNT_VALIDATION_CHECK
NOTIFY_DOWNLOAD_BEFORE_START
NOTIFY_DOWNLOAD_BROWSER_DETECTION
NOTIFY_DOWNLOAD_IN_CHUNKS___COMPLETED
NOTIFY_DOWNLOAD_NO_MATCH_FOUND
NOTIFY_DOWNLOAD_READY_TO_REDIRECT
NOTIFY_DOWNLOAD_READY_TO_START
NOTIFY_DOWNLOAD_READY_TO_STREAM
NOTIFY_DOWNLOAD_VIA_SYMLINK___BEGINS
NOTIFY_DOWNLOAD_WITHOUT_REDIRECT_VIA_CHUNKS___COMPLETED
NOTIFY_DOWNLOAD_WITHOUT_REDIRECT___COMPLETED
NOTIFY_EMAIL_ADDRESS_TEST
NOTIFY_EMAIL_ADDRESS_VALIDATION_FAILURE
NOTIFY_EMAIL_AFTER_EMAIL_FORMAT_DETERMINED
NOTIFY_EMAIL_AFTER_PROCESS_ATTACHMENTS
NOTIFY_EMAIL_AFTER_SEND
NOTIFY_EMAIL_AFTER_SEND_ALL_SPECIFIED_ADDRESSES
NOTIFY_EMAIL_AFTER_SEND_WITH_ALL_PARAMS
NOTIFY_EMAIL_BEFORE_PROCESS_ATTACHMENTS
NOTIFY_EMAIL_BEGIN_ARCHIVE_WRITE
NOTIFY_EMAIL_DETERMINING_EMAIL_FORMAT
NOTIFY_EMAIL_READY_TO_SEND
NOTIFY_EMAIL_READY_WRITE_REVIEW
NOTIFY_EMAIL_VALIDATION_TEST
NOTIFY_END_EZPAGES_FOOTERBAR
NOTIFY_END_EZPAGES_HEADERBAR
NOTIFY_END_EZPAGES_SIDEBOX
NOTIFY_FAILURE_DURING_CREATE_ACCOUNT
NOTIFY_FEATURED_PRODUCTS_SQL_STRING
NOTIFY_FOOTER_END
NOTIFY_FUNCTIONS_LOOKUPS_REQUIRES_ATTRIBUTES_SELECTION
NOTIFY_HANDLE_IMAGE
NOTIFY_HEADER_ACCOUNT_EDIT_UPDATES_COMPLETE
NOTIFY_HEADER_ACCOUNT_EDIT_VERIFY_COMPLETE
NOTIFY_HEADER_ACCOUNT_NEWSLETTER_UPDATED
NOTIFY_HEADER_ACCOUNT_PASSWORD_CHANGED
NOTIFY_HEADER_ADDRESS_BOOK_ADD_ENTRY_DONE
NOTIFY_HEADER_ADDRESS_BOOK_ADD_ENTRY_INVALID_ATTEMPT
NOTIFY_HEADER_ADDRESS_BOOK_DELETION_DONE
NOTIFY_HEADER_END_ACCOUNT
NOTIFY_HEADER_END_ACCOUNT_EDIT
NOTIFY_HEADER_END_ACCOUNT_HISTORY
NOTIFY_HEADER_END_ACCOUNT_HISTORY_INFO
NOTIFY_HEADER_END_ACCOUNT_NEWSLETTERS
NOTIFY_HEADER_END_ACCOUNT_NOTIFICATION
NOTIFY_HEADER_END_ACCOUNT_PASSWORD
NOTIFY_HEADER_END_ADDRESS_BOOK
NOTIFY_HEADER_END_ADDRESS_BOOK_PROCESS
NOTIFY_HEADER_END_ADVANCED_SEARCH_RESULTS
NOTIFY_HEADER_END_ASK_A_QUESTION
NOTIFY_HEADER_END_CHECKOUT_CONFIRMATION
NOTIFY_HEADER_END_CHECKOUT_PAYMENT
NOTIFY_HEADER_END_CHECKOUT_PAYMENT_ADDRESS
NOTIFY_HEADER_END_CHECKOUT_PROCESS
NOTIFY_HEADER_END_CHECKOUT_SHIPPING
NOTIFY_HEADER_END_CHECKOUT_SHIPPING_ADDRESS
NOTIFY_HEADER_END_CHECKOUT_SUCCESS
NOTIFY_HEADER_END_CONTACT_US
NOTIFY_HEADER_END_CREATE_ACCOUNT
NOTIFY_HEADER_END_CREATE_ACCOUNT_SUCCESS
NOTIFY_HEADER_END_DOCUMENT_GENERAL_INFO
NOTIFY_HEADER_END_DOCUMENT_PRODUCT_INFO
NOTIFY_HEADER_END_DOWNLOAD
NOTIFY_HEADER_END_EZPAGE
NOTIFY_HEADER_END_FEATURED_PRODUCTS
NOTIFY_HEADER_END_GV_FAQ
NOTIFY_HEADER_END_GV_SEND
NOTIFY_HEADER_END_INDEX
NOTIFY_HEADER_END_INDEX_MAIN_TEMPLATE_VARS
NOTIFY_HEADER_END_LOGIN
NOTIFY_HEADER_END_LOGIN_TIMEOUT
NOTIFY_HEADER_END_LOGOFF
NOTIFY_HEADER_END_PAGE_NOT_FOUND
NOTIFY_HEADER_END_PASSWORD_FORGOTTEN
NOTIFY_HEADER_END_POPUP_IMAGES
NOTIFY_HEADER_END_POPUP_IMAGES_ADDITIONAL
NOTIFY_HEADER_END_PRODUCT_FREE_SHIPPING_INFO
NOTIFY_HEADER_END_PRODUCT_INFO
NOTIFY_HEADER_END_PRODUCT_MUSIC_INFO
NOTIFY_HEADER_END_PRODUCT_REVIEWS
NOTIFY_HEADER_END_PRODUCT_REVIEWS_INFO
NOTIFY_HEADER_END_PRODUCT_REVIEWS_WRITE
NOTIFY_HEADER_END_SHOPPING_CART
NOTIFY_HEADER_END_SITE_MAP
NOTIFY_HEADER_END_UNSUBSCRIBE
NOTIFY_HEADER_INDEX_MAIN_TEMPLATE_VARS_PAGE_BODY
NOTIFY_HEADER_INDEX_MAIN_TEMPLATE_VARS_RELEASE_PRODUCT_TYPE_VARS
NOTIFY_HEADER_START_ACCOUNT
NOTIFY_HEADER_START_ACCOUNT_EDIT
NOTIFY_HEADER_START_ACCOUNT_HISTORY
NOTIFY_HEADER_START_ACCOUNT_HISTORY_INFO
NOTIFY_HEADER_START_ACCOUNT_NEWSLETTERS
NOTIFY_HEADER_START_ACCOUNT_NOTIFICATION
NOTIFY_HEADER_START_ACCOUNT_PASSWORD
NOTIFY_HEADER_START_ADDRESS_BOOK
NOTIFY_HEADER_START_ADDRESS_BOOK_PROCESS
NOTIFY_HEADER_START_ADVANCED_SEARCH_RESULTS
NOTIFY_HEADER_START_ASK_A_QUESTION
NOTIFY_HEADER_START_CHECKOUT_CONFIRMATION
NOTIFY_HEADER_START_CHECKOUT_PAYMENT
NOTIFY_HEADER_START_CHECKOUT_PAYMENT_ADDRESS
NOTIFY_HEADER_START_CHECKOUT_PROCESS
NOTIFY_HEADER_START_CHECKOUT_SHIPPING
NOTIFY_HEADER_START_CHECKOUT_SHIPPING_ADDRESS
NOTIFY_HEADER_START_CHECKOUT_SUCCESS
NOTIFY_HEADER_START_CONTACT_US
NOTIFY_HEADER_START_CREATE_ACCOUNT
NOTIFY_HEADER_START_CREATE_ACCOUNT_SUCCESS
NOTIFY_HEADER_START_DOCUMENT_GENERAL_INFO
NOTIFY_HEADER_START_DOCUMENT_PRODUCT_INFO
NOTIFY_HEADER_START_DOWNLOAD
NOTIFY_HEADER_START_EZPAGE
NOTIFY_HEADER_START_FEATURED_PRODUCTS
NOTIFY_HEADER_START_GV_FAQ
NOTIFY_HEADER_START_GV_REDEEM
NOTIFY_HEADER_START_GV_SEND
NOTIFY_HEADER_START_INDEX
NOTIFY_HEADER_START_INDEX_MAIN_TEMPLATE_VARS
NOTIFY_HEADER_START_LOGIN
NOTIFY_HEADER_START_LOGIN_TIMEOUT
NOTIFY_HEADER_START_LOGOFF
NOTIFY_HEADER_START_PAGE_NOT_FOUND
NOTIFY_HEADER_START_PASSWORD_FORGOTTEN
NOTIFY_HEADER_START_POPUP_IMAGES_ADDITIONAL
NOTIFY_HEADER_START_PRODUCT_FREE_SHIPPING_INFO
NOTIFY_HEADER_START_PRODUCT_INFO
NOTIFY_HEADER_START_PRODUCT_MUSIC_INFO
NOTIFY_HEADER_START_PRODUCT_REVIEWS
NOTIFY_HEADER_START_PRODUCT_REVIEWS_INFO
NOTIFY_HEADER_START_PRODUCT_REVIEWS_WRITE
NOTIFY_HEADER_START_SHOPPING_CART
NOTIFY_HEADER_START_SITE_MAP
NOTIFY_HEADER_START_SPECIALS
NOTIFY_HEADER_START_UNSUBSCRIBE
NOTIFY_HTML_HEAD_END
NOTIFY_HTML_HEAD_START
NOTIFY_INIT_CANONICAL_DEFAULT
NOTIFY_INIT_CANONICAL_FINAL
NOTIFY_INIT_CANONICAL_PARAM_WHITELIST
NOTIFY_LANGUAGE_CHANGE_REQUESTED_BY_ADMIN_VISITOR
NOTIFY_LANGUAGE_CHANGE_REQUESTED_BY_VISITOR
NOTIFY_LOGIN_BANNED
NOTIFY_LOGIN_FAILURE
NOTIFY_LOGIN_SUCCESS
NOTIFY_LOGIN_SUCCESS_VIA_CREATE_ACCOUNT
NOTIFY_MAIN_TEMPLATE_VARS_END
NOTIFY_MAIN_TEMPLATE_VARS_END_DOCUMENT_GENERAL_INFO
NOTIFY_MAIN_TEMPLATE_VARS_END_DOCUMENT_PRODUCT_INFO
NOTIFY_MAIN_TEMPLATE_VARS_END_PRODUCT_FREE_SHIPPING_INFO
NOTIFY_MAIN_TEMPLATE_VARS_END_PRODUCT_INFO
NOTIFY_MAIN_TEMPLATE_VARS_END_PRODUCT_MUSIC_INFO
NOTIFY_MAIN_TEMPLATE_VARS_EXTRA_DOCUMENT_GENERAL_INFO
NOTIFY_MAIN_TEMPLATE_VARS_EXTRA_DOCUMENT_PRODUCT_INFO
NOTIFY_MAIN_TEMPLATE_VARS_EXTRA_PRODUCT_FREE_SHIPPING_INFO
NOTIFY_MAIN_TEMPLATE_VARS_EXTRA_PRODUCT_INFO
NOTIFY_MAIN_TEMPLATE_VARS_EXTRA_PRODUCT_MUSIC_INFO
NOTIFY_MAIN_TEMPLATE_VARS_PRODUCT_TYPE_VARS_DOCUMENT_GENERAL_INFO
NOTIFY_MAIN_TEMPLATE_VARS_PRODUCT_TYPE_VARS_DOCUMENT_PRODUCT_INFO
NOTIFY_MAIN_TEMPLATE_VARS_PRODUCT_TYPE_VARS_PRODUCT_FREE_SHIPPING_INFO
NOTIFY_MAIN_TEMPLATE_VARS_PRODUCT_TYPE_VARS_PRODUCT_INFO
NOTIFY_MAIN_TEMPLATE_VARS_PRODUCT_TYPE_VARS_PRODUCT_MUSIC_INFO
NOTIFY_MAIN_TEMPLATE_VARS_START
NOTIFY_MAIN_TEMPLATE_VARS_START_DOCUMENT_GENERAL_INFO
NOTIFY_MAIN_TEMPLATE_VARS_START_DOCUMENT_PRODUCT_INFO
NOTIFY_MAIN_TEMPLATE_VARS_START_PRODUCT_FREE_SHIPPING_INFO
NOTIFY_MAIN_TEMPLATE_VARS_START_PRODUCT_INFO
NOTIFY_MAIN_TEMPLATE_VARS_START_PRODUCT_MUSIC_INFO
NOTIFY_MODULES_ADDITIONAL_IMAGES_GET_LARGE
NOTIFY_MODULES_ADDITIONAL_IMAGES_THUMB_SLASHES
NOTIFY_MODULES_ADDITIONAL_PRODUCT_IMAGES_END
NOTIFY_MODULES_ADDITIONAL_PRODUCT_IMAGES_LIST
NOTIFY_MODULES_ADDITIONAL_PRODUCT_IMAGES_START
NOTIFY_MODULES_COPY_PRODUCT_CONFIRM_DUPLICATE_FIELDS
NOTIFY_MODULES_COPY_TO_CONFIRM_DUPLICATE
NOTIFY_MODULES_FEATURED_PRODUCTS_B4_LIST_BOX
NOTIFY_MODULES_MAIN_PRODUCT_IMAGE_END
NOTIFY_MODULES_MAIN_PRODUCT_IMAGE_START
NOTIFY_MODULES_NEW_PRODUCTS_B4_LIST_BOX
NOTIFY_MODULES_PRODUCT_LISTING_PRODUCTS_BUTTON
NOTIFY_MODULES_SPECIALS_INDEX_B4_LIST_BOX
NOTIFY_MODULES_UPDATE_PRODUCT_END
NOTIFY_MODULE_ADDRESS_BOOK_ADDED_ADDRESS_BOOK_RECORD
NOTIFY_MODULE_ADDRESS_BOOK_UPDATED_ADDRESS_BOOK_RECORD
NOTIFY_MODULE_ADDRESS_BOOK_UPDATED_CUSTOMER_RECORD
NOTIFY_MODULE_ADDRESS_BOOK_UPDATED_PRIMARY_CUSTOMER_RECORD
NOTIFY_MODULE_CHECKOUT_ADDED_ADDRESS_BOOK_RECORD
NOTIFY_MODULE_CHECKOUT_NEW_ADDRESS_VALIDATION
NOTIFY_MODULE_CREATE_ACCOUNT_ADDED_ADDRESS_BOOK_RECORD
NOTIFY_MODULE_CREATE_ACCOUNT_ADDED_CUSTOMER_RECORD
NOTIFY_MODULE_DOWNLOAD_TEMPLATE_DETAILS
NOTIFY_MODULE_END_CHECKOUT_ADDRESS_BOOK
NOTIFY_MODULE_END_CHECKOUT_NEW_ADDRESS
NOTIFY_MODULE_END_CREATE_ACCOUNT
NOTIFY_MODULE_END_META_TAGS
NOTIFY_MODULE_META_TAGS_BUILDKEYWORDS
NOTIFY_MODULE_META_TAGS_OVERRIDE
NOTIFY_MODULE_META_TAGS_UNSPECIFIEDPAGE
NOTIFY_MODULE_PRODUCT_LISTING_RESULTCOUNT
NOTIFY_MODULE_START_CHECKOUT_NEW_ADDRESS
NOTIFY_MODULE_START_CREATE_ACCOUNT
NOTIFY_MODULE_START_META_TAGS
NOTIFY_NICK_CHECK_FOR_DUPLICATE
NOTIFY_NICK_CHECK_FOR_EXISTING_EMAIL
NOTIFY_NICK_CHECK_FOR_MIN_LENGTH
NOTIFY_NICK_CREATE_NEW
NOTIFY_NICK_SET_TEMPLATE_FLAG
NOTIFY_NICK_UPDATE_EMAIL_ADDRESS
NOTIFY_OPTIMIZE_IMAGE
NOTIFY_ORDER_AFTER_ORDER_CREATE_ADD_PRODUCTS
NOTIFY_ORDER_AFTER_QUERY
NOTIFY_ORDER_AFTER_SEND_ORDER_EMAIL
NOTIFY_ORDER_BEFORE_QUERY
NOTIFY_ORDER_CART_ADD_ATTRIBUTE_LIST
NOTIFY_ORDER_CART_ADD_PRODUCT_LIST
NOTIFY_ORDER_CART_AFTER_ADDRESSES_SET
NOTIFY_ORDER_CART_BEGINS
NOTIFY_ORDER_CART_EXTERNAL_TAX_DURING_ORDER_CREATE
NOTIFY_ORDER_CART_EXTERNAL_TAX_HANDLING
NOTIFY_ORDER_CART_EXTERNAL_TAX_RATE_LOOKUP
NOTIFY_ORDER_CART_FINISHED
NOTIFY_ORDER_CART_ORDERSTATUS
NOTIFY_ORDER_CART_SUBTOTAL_CALCULATE
NOTIFY_ORDER_COUPON_LINK
NOTIFY_ORDER_DURING_CREATE_ADDED_ATTRIBUTE_DOWNLOAD_LINE_ITEM
NOTIFY_ORDER_DURING_CREATE_ADDED_ATTRIBUTE_LINE_ITEM
NOTIFY_ORDER_DURING_CREATE_ADDED_ORDERTOTAL_LINE_ITEM
NOTIFY_ORDER_DURING_CREATE_ADDED_ORDER_COMMENT
NOTIFY_ORDER_DURING_CREATE_ADDED_ORDER_HEADER
NOTIFY_ORDER_DURING_CREATE_ADDED_PRODUCT_LINE_ITEM
NOTIFY_ORDER_DURING_CREATE_ADD_PRODUCTS
NOTIFY_ORDER_EMAIL_BEFORE_PRODUCTS
NOTIFY_ORDER_INSTANTIATE
NOTIFY_ORDER_INVOICE_CONTENT_FOR_ADDITIONAL_EMAILS
NOTIFY_ORDER_INVOICE_CONTENT_READY_TO_SEND
NOTIFY_ORDER_PROCESSING_ATTRIBUTES_BEGIN
NOTIFY_ORDER_PROCESSING_ATTRIBUTES_EXIST
NOTIFY_ORDER_PROCESSING_BESTSELLERS_UPDATE
NOTIFY_ORDER_PROCESSING_CREDIT_ACCOUNT_UPDATE_BEGIN
NOTIFY_ORDER_PROCESSING_ONE_TIME_CHARGES_BEGIN
NOTIFY_ORDER_PROCESSING_STOCK_DECREMENT_BEGIN
NOTIFY_ORDER_PROCESSING_STOCK_DECREMENT_END
NOTIFY_ORDER_PROCESSING_STOCK_DECREMENT_INIT
NOTIFY_ORDER_QUERY_ADD_PRODUCT
NOTIFY_ORDER_SEND_EMAIL_INITIALIZE
NOTIFY_ORDER_SEND_LOW_STOCK_EMAILS
NOTIFY_ORDER_SET_ORDER_MESSAGE
NOTIFY_OT_COUPON_USES_PER_USER_CHECK
NOTIFY_PASSWORD_FORGOTTEN_CHANGED
NOTIFY_PASSWORD_FORGOTTEN_NOT_FOUND
NOTIFY_PASSWORD_FORGOTTEN_VALIDATED
NOTIFY_PAYMENT_AUTHNETSIM_POSTPROCESS_HOOK
NOTIFY_PAYMENT_AUTHNETSIM_POSTSUBMIT_HOOK
NOTIFY_PAYMENT_AUTHNETSIM_PRESUBMIT_HOOK
NOTIFY_PAYMENT_AUTHNET_EMULATOR_CHECK
NOTIFY_PAYMENT_AUTHNET_ENCAPSULATION_CHECK
NOTIFY_PAYMENT_AUTHNET_MODE_SELECTION
NOTIFY_PAYMENT_AUTHNET_POSTSUBMIT_HOOK
NOTIFY_PAYMENT_AUTHNET_PRESUBMIT_HOOK
NOTIFY_PAYMENT_CLASS_GET_INSTALLED_MODULES
NOTIFY_PAYMENT_MODULE_ENABLE
NOTIFY_PAYMENT_PAYPALDP_INSTALLED
NOTIFY_PAYMENT_PAYPALDP_SUBTOTALS_REVIEW
NOTIFY_PAYMENT_PAYPALDP_UNINSTALLED
NOTIFY_PAYMENT_PAYPALEC_BEFORE_SETEC
NOTIFY_PAYMENT_PAYPALEC_SUBTOTALS_TAX
NOTIFY_PAYMENT_PAYPALEC_TOKEN
NOTIFY_PAYMENT_PAYPALWPP_INSTALLED
NOTIFY_PAYMENT_PAYPALWPP_UNINSTALLED
NOTIFY_PAYMENT_PAYPAL_CANCELLED_DURING_CHECKOUT
NOTIFY_PAYMENT_PAYPAL_INSTALLED
NOTIFY_PAYMENT_PAYPAL_RETURN_TO_STORE
NOTIFY_PAYMENT_PAYPAL_UNINSTALLED
NOTIFY_PAYPALEC_END_ECSTEP2
NOTIFY_PAYPALEC_PARSE_GETEC_RESULT
NOTIFY_PAYPALEXPRESS_BYPASS_ADDRESS_CREATION
NOTIFY_PAYPALEXPRESS_CREATE_ACCOUNT_ADDED_ADDRESS_BOOK_RECORD
NOTIFY_PAYPALEXPRESS_CREATE_ACCOUNT_ADDED_CUSTOMER_RECORD
NOTIFY_PAYPALIPN_STATUS_HISTORY_UPDATE
NOTIFY_PAYPALWPP_AFTER_PROCESS_FINISHED
NOTIFY_PAYPALWPP_BEFORE_DOEXPRESSCHECKOUT
NOTIFY_PAYPALWPP_BEFORE_PROCESS_FINISHED
NOTIFY_PAYPALWPP_DISABLE_GET_OVERRIDE_ADDRESS
NOTIFY_PAYPALWPP_ERROR_HANDLER
NOTIFY_PAYPALWPP_GETLINEITEMDETAILS
NOTIFY_PAYPAL_CURL_BUILDNAMEVALUELIST
NOTIFY_PAYPAL_CURL_CONSTRUCT
NOTIFY_PAYPAL_CUSTOMER_ATTEMPT_TO_USE_INVALID_COUNTRY_CODE
NOTIFY_PAYPAL_DODIRECTPAYMENT
NOTIFY_PAYPAL_DOEXPRESSCHECKOUTPAYMENT
NOTIFY_PAYPAL_EXPRESS_CHECKOUT_PAYERID_DETERMINED
NOTIFY_PAYPAL_GETEXPRESSCHECKOUTDETAILS
NOTIFY_PAYPAL_SETEXPRESSCHECKOUT
NOTIFY_PROCESS_3RD_PARTY_LOGINS
NOTIFY_PRODUCT_INFO_PRODUCT_STATUS_CHECK
NOTIFY_PRODUCT_LISTING_ALPHA_SORTER_SELECTLIST
NOTIFY_PRODUCT_LISTING_END
NOTIFY_PRODUCT_MUSIC_COPY_TO_CONFIRM_DUPLICATE
NOTIFY_PRODUCT_MUSIC_UPDATE_PRODUCT_END
NOTIFY_PRODUCT_TYPE_VARS_END_DOCUMENT_GENERAL_INFO
NOTIFY_PRODUCT_TYPE_VARS_END_DOCUMENT_PRODUCT_INFO
NOTIFY_PRODUCT_TYPE_VARS_END_PRODUCT_FREE_SHIPPING_INFO
NOTIFY_PRODUCT_TYPE_VARS_END_PRODUCT_INFO
NOTIFY_PRODUCT_TYPE_VARS_END_PRODUCT_MUSIC_INFO
NOTIFY_PRODUCT_TYPE_VARS_START_DOCUMENT_GENERAL_INFO
NOTIFY_PRODUCT_TYPE_VARS_START_DOCUMENT_PRODUCT_INFO
NOTIFY_PRODUCT_TYPE_VARS_START_PRODUCT_FREE_SHIPPING_INFO
NOTIFY_PRODUCT_TYPE_VARS_START_PRODUCT_INFO
NOTIFY_PRODUCT_TYPE_VARS_START_PRODUCT_MUSIC_INFO
NOTIFY_PRODUCT_VIEWS_HIT_INCREMENTOR
NOTIFY_QUERYBUILDER_INIT_END
NOTIFY_QUERYBUILDER_INIT_START
NOTIFY_QUERYBUILDER_PREPROCESSJOINS_END
NOTIFY_QUERYBUILDER_PREPROCESSJOINS_START
NOTIFY_QUERYBUILDER_PROCESSBINDVARS_END
NOTIFY_QUERYBUILDER_PROCESSBINDVARS_START
NOTIFY_QUERYBUILDER_PROCESSGROUPBYS_END
NOTIFY_QUERYBUILDER_PROCESSGROUPBYS_START
NOTIFY_QUERYBUILDER_PROCESSJOINADDCOLUMN_ENDT
NOTIFY_QUERYBUILDER_PROCESSJOINADDCOLUMN_START
NOTIFY_QUERYBUILDER_PROCESSJOINFKEYFIELD_END
NOTIFY_QUERYBUILDER_PROCESSJOINFKEYFIELD_START
NOTIFY_QUERYBUILDER_PROCESSJOINSCUSTOMAND_END
NOTIFY_QUERYBUILDER_PROCESSJOINSCUSTOMAND_START
NOTIFY_QUERYBUILDER_PROCESSJOINS_END
NOTIFY_QUERYBUILDER_PROCESSJOINS_START
NOTIFY_QUERYBUILDER_PROCESSORDERBYS_END
NOTIFY_QUERYBUILDER_PROCESSORDERBYS_START
NOTIFY_QUERYBUILDER_PROCESSQUERY_END
NOTIFY_QUERYBUILDER_PROCESSQUERY_START
NOTIFY_QUERYBUILDER_PROCESSSELECTLIST_END
NOTIFY_QUERYBUILDER_PROCESSSELECTLIST_START
NOTIFY_QUERYBUILDER_PROCESSWHERECLAUSETEST_END
NOTIFY_QUERYBUILDER_PROCESSWHERECLAUSETEST_START
NOTIFY_QUERYBUILDER_PROCESSWHERECLAUSE_END
NOTIFY_QUERYBUILDER_PROCESSWHERECLAUSE_START
NOTIFY_QUERYBUILDER_SETFINALQUERY_END
NOTIFY_QUERYBUILDER_SETFINALQUERY_START
NOTIFY_QUERYBUILDER_SETPARTS_START
NOTIFY_REDIRECT_DEFAULT_ACTION
NOTIFY_REVIEWS_WRITE_CAPTCHA_CHECK
NOTIFY_REVIEW_INSERTED_DURING_WRITE_REVIEW
NOTIFY_SEARCH_COLUMNLIST_STRING
NOTIFY_SEARCH_FROM_STRING
NOTIFY_SEARCH_ORDERBY_STRING
NOTIFY_SEARCH_SELECT_STRING
NOTIFY_SEARCH_WHERE_STRING
NOTIFY_SEFU_INTERCEPT
NOTIFY_SEFU_INTERCEPT_ADMCATHOME
NOTIFY_SEFU_INTERCEPT_ADMCATHREF
NOTIFY_SEND_ADMIN_EMAIL_WRITE_REVIEW
NOTIFY_SHIPPING_CHECK_ENABLED
NOTIFY_SHIPPING_CHECK_ENABLED_FOR_ZONE
NOTIFY_SHIPPING_CLASS_GET_INSTALLED_MODULES
NOTIFY_SHIPPING_MODULE_CALCULATE_BOXES_AND_TARE
NOTIFY_SHIPPING_MODULE_CALCULATE_CHEAPEST
NOTIFY_SHIPPING_MODULE_ENABLE
NOTIFY_SHIPPING_MODULE_GET_ALL_QUOTES
NOTIFY_SHIPPING_MODULE_PRE_CALCULATE_BOXES_AND_TARE
NOTIFY_SPAM_DETECTED_DURING_CREATE_ACCOUNT
NOTIFY_SPAM_DETECTED_DURING_WRITE_REVIEW
NOTIFY_SPAM_DETECTED_USING_CONTACT_US
NOTIFY_SPECIALS_MAIN_TEMPLATE_VARS_END
NOTIFY_SPECIALS_MAIN_TEMPLATE_VARS_SQL_STRING
NOTIFY_START_EZPAGES_FOOTERBAR
NOTIFY_START_EZPAGES_HEADERBAR
NOTIFY_START_EZPAGES_SIDEBOX
NOTIFY_TEST_DOWNLOADABLE_FILE_EXISTS
NOTIFY_TPL_COLUMNAR_DISPLAY_END
NOTIFY_TPL_COLUMNAR_DISPLAY_START
NOTIFY_TPL_TABULAR_DISPLAY_END
NOTIFY_TPL_TABULAR_DISPLAY_START
NOTIFY_ZEN_ADDRESS_LABEL
NOTIFY_ZEN_ADMIN_INVALID_IP_DETECTED
NOTIFY_ZEN_HAS_PRODUCT_ATTRIBUTES_VALUES
NOTIFY_ZEN_INVALID_IP_DETECTED
NOTIFY_ZEN_IN_GUEST_CHECKOUT
NOTIFY_ZEN_IS_LOGGED_IN
&lt;/code&gt;&lt;/pre&gt;
      </description>
    </item>
    
    <item>
      <title>Dev: Observer/Notifier System</title>
      <link>/zendocs_test1/dev/code/notifiers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/zendocs_test1/dev/code/notifiers/</guid>
      <description>
        
        
        &lt;h1 id=&#34;introduction&#34;&gt;Introduction&lt;/h1&gt;
&lt;p&gt;One of the many goals of the Zen Cart project has always been to make it simple for third party developers to add functionality to the core code in an easy and unobtrusive manner. To do this we use the &lt;a href=&#34;/zendocs_test1/user/template/template_overrides/&#34;&gt;override system&lt;/a&gt;, the &lt;a href=&#34;/zendocs_test1/dev/code/inclusion/&#34;&gt;auto inclusion system&lt;/a&gt; and the observer/notifier system.&lt;/p&gt;
&lt;p&gt;The observer/notifier system is an implementation of the &lt;a href=&#34;https://en.wikipedia.org/wiki/Publish%E2%80%93subscribe_pattern&#34;&gt;&amp;ldquo;pub-sub&amp;rdquo; pattern&lt;/a&gt;  that was introduced to give developers deep access to core operation without the need to touch any core files at all. Although the implementation was written for an object-oriented code base, it can also be used with procedural code.&lt;/p&gt;
&lt;p&gt;At a high level, a developer will do the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;identify an &lt;em&gt;event&lt;/em&gt; that they want to monitor, such as when a customer has just successfully logged in.&lt;/li&gt;
&lt;li&gt;register an observer to be notified when that event occurs.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If/when that event occurs, the &lt;code&gt;base&lt;/code&gt; class receives control and looks to see if any registrations exist for the event.  If so, all registered observer-classes are called, and they perform their custom actions.&lt;/p&gt;
&lt;p&gt;Here are some &amp;lsquo;quick links&amp;rsquo; to various sections of this documentation:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#triggering-event-notifications&#34;&gt;Triggering Event Notifications&lt;/a&gt;.  Identifies the mechanism used to trigger a notification.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#observing-notifications&#34;&gt;Observing Notifications&lt;/a&gt;. Identifies the mechanisms used by &lt;em&gt;event observers&lt;/em&gt; to perform their customizations.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#loading-your-observer-class&#34;&gt;Loading Your Observer Class&lt;/a&gt;.  Identifies how to load your observer-class so that it can begin its observations.  You may choose between &lt;a href=&#34;/zendocs_test1/dev/code/notifiers/#auto-loaded-observers&#34;&gt;automatic loading&lt;/a&gt; and &lt;a href=&#34;/zendocs_test1/dev/code/notifiers/#manually-loaded-observers&#34;&gt;manual loading&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#advanced-topics&#34;&gt;Advanced Topics&lt;/a&gt;. This section identifies additional methods that can be used to auto-load an observer-class and create event-specific event-handlers.&lt;/p&gt;
&lt;p&gt;a. &lt;a href=&#34;#event-specific-update-methods&#34;&gt;Event-Specific Update Methods&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;b. &lt;a href=&#34;#generic-formal-parameter-interpretation&#34;&gt;Generic Formal Parameter Interpretation&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;#additional-information&#34;&gt;Additional Information&lt;/a&gt;.  This section has references to additional documentation on the observer/notifier system.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;triggering-event-notifications&#34;&gt;Triggering Event Notifications&lt;/h2&gt;
&lt;p&gt;The point of the observer/notifier system is to enable developers to write code that listens for certain events to happen and then perform a customized action at that point in the code execution flow.&lt;/p&gt;
&lt;p&gt;Event names are strings and are triggered via a &lt;code&gt;notify&lt;/code&gt; function.  You can see a &lt;a href=&#34;/zendocs_test1/dev/code/notifiers_list/&#34;&gt;list of notifiers&lt;/a&gt; in the Zen Cart core code for reference.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: Plugins (Zen Cart extensions) can also trigger notifier events.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;notify&lt;/code&gt; method takes the following inputs:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Input Name&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Required?&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$eventId&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Yes&lt;/td&gt;
&lt;td&gt;The string &amp;rsquo;name&amp;rsquo; of the event, e.g. &lt;code&gt;NOTIFIER_CART_ADD_CART_END&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$param1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;No&lt;/td&gt;
&lt;td&gt;A read-only variable, the format of which varies by the &lt;code&gt;$eventId&lt;/code&gt;.  Defaults to an empty array.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$param2 &amp;hellip; $param9&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;No&lt;/td&gt;
&lt;td&gt;A collection of read-write variables, passed as a reference.  The code that passes these variables is giving permission for an observer to update these variables.  Each variable&amp;rsquo;s format (and presence) varies by the &lt;code&gt;$eventId&lt;/code&gt; and defaults to &lt;code&gt;null&lt;/code&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;class-based-event-notifications&#34;&gt;Class-Based Event Notifications&lt;/h4&gt;
&lt;p&gt;Within a class that extends the Zen Cart &lt;code&gt;base&lt;/code&gt; class, e.g.:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;shopping_cart&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;base&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;… events can be triggered via the &lt;code&gt;$this&lt;/code&gt; keyword:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;$this&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;notify&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;EVENT_NAME&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;For example, the shopping cart class triggers this event after an item has been added to the cart:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;$this&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;notify&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;NOTIFIER_CART_ADD_CART_END&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;When a class triggers a notification using the &lt;code&gt;$this&lt;/code&gt; keyword, &lt;em&gt;all&lt;/em&gt; &lt;strong&gt;public&lt;/strong&gt; class-variables are available for use by a watching observer.  If a class desires to trigger a notification without that access, the global &lt;code&gt;$zco_notifier&lt;/code&gt; can be used to trigger that notification.&lt;/p&gt;
&lt;h4 id=&#34;procedural-event-notifications&#34;&gt;Procedural Event Notifications&lt;/h4&gt;
&lt;p&gt;In procedural application code (actually, in any code that is not inside a class which &lt;code&gt;extends base&lt;/code&gt;), use the global &lt;code&gt;$zco_notifier&lt;/code&gt; object to trigger events.&lt;/p&gt;
&lt;p&gt;For example, the &lt;code&gt;zen_mail&lt;/code&gt; function triggers the following event, which allows a plugin to update the to-be-sent email format:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;$zco_notifier&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;notify&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;NOTIFY_EMAIL_DETERMINING_EMAIL_FORMAT&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$to_email_address&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$customers_email_format&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$module&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;observing-notifications&#34;&gt;Observing Notifications&lt;/h2&gt;
&lt;h3 id=&#34;writing-observer-classes&#34;&gt;Writing Observer Classes&lt;/h3&gt;
&lt;p&gt;To take advantage of notifiers, developers need to write classes to watch for them, i.e. &lt;em&gt;observe&lt;/em&gt;.  There&amp;rsquo;s even a nice directory, &lt;code&gt;includes/classes/observers&lt;/code&gt; and &lt;code&gt;admin/includes/classes/observers&lt;/code&gt;, where developers can put these classes.&lt;/p&gt;
&lt;p&gt;There are three &lt;em&gt;base-class&lt;/em&gt; methods that observers use to provide their custom actions:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Method Name&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#attach&#34;&gt;&lt;code&gt;attach&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This method identifies a list of event(s) that the observer-class &lt;em&gt;is&lt;/em&gt; interested in monitoring.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#update&#34;&gt;&lt;code&gt;update&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This method is the call-back when an event &amp;lsquo;fires&amp;rsquo;.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;#detach&#34;&gt;&lt;code&gt;detach&lt;/code&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;This method identifies a list of event(s) that the observer-class &lt;em&gt;is no longer&lt;/em&gt; interested in monitoring.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;attach&#34;&gt;attach&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;attach&lt;/code&gt;  method is used by an &lt;em&gt;event observer&lt;/em&gt; to &amp;lsquo;register&amp;rsquo; to receive control when a specified event (or list of events) occurs.  This method takes two parameters:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;$observer&lt;/code&gt;.  Identifies &amp;lsquo;who&amp;rsquo; is requesting to receive control, i.e. &lt;code&gt;$this&lt;/code&gt; which identifies the current class.  This value is used by the &lt;code&gt;base&lt;/code&gt; class to create a unique ID associated with the observation request (just used internally, you don&amp;rsquo;t need to worry about that unique ID).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$eventIDArray&lt;/code&gt;.  A simple array of event names that the observer-class is listening for (&amp;lsquo;observing&amp;rsquo;).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For example, &lt;code&gt;/includes/classes/observers/class.products_viewed_counter.php&lt;/code&gt; requests to be notified whenever the event &lt;code&gt;NOTIFY_PRODUCT_VIEWS_HIT_INCREMENTOR&lt;/code&gt; is triggered by attaching to that event. That event is then triggered in application code by the various product types&amp;rsquo; &lt;code&gt;main_template_vars.php&lt;/code&gt; modules, causing the observer class to respond as described in the &lt;em&gt;update&lt;/em&gt; section below.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;products_viewed_counter&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;base&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;__construct&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;$this&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;attach&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$this&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;array&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;NOTIFY_PRODUCT_VIEWS_HIT_INCREMENTOR&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;update&#34;&gt;update()&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;update&lt;/code&gt; method is used by an &lt;em&gt;event observer&lt;/em&gt; to perform event-specific actions when an event is triggered.&lt;br&gt;
&lt;em&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/em&gt;: If you find &lt;code&gt;update&lt;/code&gt; is &lt;strong&gt;not&lt;/strong&gt; being triggered by an event as expected, ensure your class is being instantiated &lt;strong&gt;before&lt;/strong&gt; the notifier event. Auto-loaded observers are loaded at breakpoint 175. For earlier instantiation, the observer must be manually loaded, see &lt;a href=&#34;#choosing-when-to-load-an-observer&#34;&gt;Choosing When to Load an Observer&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;update&lt;/code&gt; method may be passed &lt;em&gt;up to&lt;/em&gt; 11 parameters:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;&amp;amp;$callingClass&lt;/code&gt;. This is a reference to the class in which the event occurred.  If the event is triggered by a class other than the &lt;code&gt;base&lt;/code&gt; (e.g. the &lt;code&gt;order&lt;/code&gt; or &lt;code&gt;shopping_cart&lt;/code&gt; class), then this variable can be used to manipulate any &lt;em&gt;&lt;strong&gt;public&lt;/strong&gt;&lt;/em&gt; properties within the calling class. (eg: if the event is called from the &lt;code&gt;order&lt;/code&gt; class, then inside the observer you would refer to the &lt;code&gt;order&lt;/code&gt; class&amp;rsquo;s &lt;code&gt;$this-&amp;gt;info&lt;/code&gt; property using &lt;code&gt;$class-&amp;gt;info&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$eventID&lt;/code&gt;. The name of the event triggered.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$param1&lt;/code&gt;.  &lt;em&gt;Read-only&lt;/em&gt; data.  The value is dependent on the &lt;code&gt;$eventID&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;amp;$param2&lt;/code&gt; through &lt;code&gt;&amp;amp;$param9&lt;/code&gt;.  &lt;em&gt;Updateable&lt;/em&gt; variables provided by the code triggering the event. These values are dependent on the &lt;code&gt;$eventID&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/em&gt;: Instead of the generic &lt;code&gt;update()&lt;/code&gt; method that fires irrespective of which eventID was triggered, you can also choose to use &lt;a href=&#34;#event-specific-update-methods&#34;&gt;event-specific update-methods&lt;/a&gt; to handle event-related processing.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s the full implementation for &lt;code&gt;/includes/classes/observers/class.products_viewed_counter.php&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;products_viewed_counter&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;base&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;__construct&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;$this&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;attach&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$this&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;array&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;NOTIFY_PRODUCT_VIEWS_HIT_INCREMENTOR&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;update&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$class&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$eventID&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$paramsArray&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;array&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;())&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$eventID&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;NOTIFY_PRODUCT_VIEWS_HIT_INCREMENTOR&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;     &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;defined&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;LEGACY_PRODUCTS_VIEWED_COUNTER&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;LEGACY_PRODUCTS_VIEWED_COUNTER&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;on&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;global&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$db&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000&#34;&gt;$sql&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;UPDATE &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;TABLE_PRODUCTS_DESCRIPTION&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;                SET   products_viewed = products_viewed+1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;                WHERE products_id = &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$paramsArray&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;                AND   language_id = &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$_SESSION&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;languages_id&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000&#34;&gt;$res&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$db&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;Execute&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$sql&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;When the &lt;code&gt;NOTIFY_PRODUCT_VIEWS_HIT_INCREMENTOR&lt;/code&gt; event is triggered (and the shown defined constant is set to &amp;lsquo;on&amp;rsquo;), the &lt;code&gt;$paramsArray&lt;/code&gt; parameter is &lt;em&gt;expected to be&lt;/em&gt; an integer value that identifies the specific product to be updated.  The observer&amp;rsquo;s &lt;code&gt;update&lt;/code&gt; method thus casts that &lt;code&gt;$paramsArray&lt;/code&gt; parameter to an integer value and performs the &lt;code&gt;products_viewed&lt;/code&gt; update.&lt;/p&gt;
&lt;h4 id=&#34;detach&#34;&gt;detach()&lt;/h4&gt;
&lt;p&gt;The &lt;code&gt;detach&lt;/code&gt; method is used by an &lt;em&gt;event observer&lt;/em&gt; to &amp;lsquo;un-register&amp;rsquo; from receiving specified event (or list of events) notifications.  This method takes two parameters:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;$observer&lt;/code&gt;.  Identifies &amp;lsquo;who&amp;rsquo; is requesting to receive control, i.e. &lt;code&gt;$this&lt;/code&gt; which identifies the current class.  This value should be the same as that used to &lt;code&gt;attach&lt;/code&gt; to the no-longer-wanted event.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$eventIDArray&lt;/code&gt;.  A simple array of event names that the observer-class is no longer &amp;lsquo;interested in&amp;rsquo;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;While seldom used, here&amp;rsquo;s one way it might be used: If, for instance, an observer was interested in the &lt;em&gt;first&lt;/em&gt; triggering of a given notification, the observer&amp;rsquo;s &lt;code&gt;update&lt;/code&gt; method, upon receiving that notification, could trigger the associated &lt;code&gt;detach&lt;/code&gt; so listening stops.&lt;/p&gt;
&lt;h2 id=&#34;loading-your-observer-class&#34;&gt;Loading Your Observer-Class&lt;/h2&gt;
&lt;p&gt;Observers may be loaded automatically or manually.  Automatic loading is less work for plugin authors, but offers less flexibility in terms of load-order which can sometimes interfere with required dependencies.&lt;/p&gt;
&lt;h3 id=&#34;choosing-when-to-load-an-observer&#34;&gt;Choosing &amp;ldquo;When&amp;rdquo; to Load an Observer&lt;/h3&gt;
&lt;p&gt;If your observer-class performs actions &lt;em&gt;prior to&lt;/em&gt; the page-specific loading (e.g. monitoring for cart-related actions), you&amp;rsquo;ll need to make sure that your observer is loaded and instantiated &lt;em&gt;&lt;strong&gt;before&lt;/strong&gt;&lt;/em&gt; any watched-for notifier is triggered in application code.  In these cases, review the base Zen Cart auto-loader (&lt;code&gt;[/admin]/includes/auto_loaders/config.core.php&lt;/code&gt;) to identify the load-point required.&lt;/p&gt;
&lt;h3 id=&#34;auto-loaded-observers&#34;&gt;Auto-loaded Observers&lt;/h3&gt;
&lt;p&gt;If you&amp;rsquo;re developing a plugin that uses an Observer class you might wish to utilize auto loading and instantiating of observers. These auto-instantiated Observers will be loaded near the end of the list of load-points, so typically all dependencies will already be available. This works great in the vast majority of cases, and makes your Observer less brittle and easier to maintain across Zen Cart version upgrades.&lt;/p&gt;
&lt;p&gt;By following a naming convention Zen Cart will both load and instantiate your Observer class automatically. Here are the requirements:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The file is in the &lt;code&gt;/includes/classes/observers&lt;/code&gt; sub-directory and named like: &lt;code&gt;auto.your_plugin.php&lt;/code&gt;. Note the &lt;strong&gt;auto.&lt;/strong&gt; prefix.  All files in this directory that start with &lt;strong&gt;auto.&lt;/strong&gt; will be included (i.e. loaded).&lt;/li&gt;
&lt;li&gt;The file defines a class named &lt;strong&gt;zcObserver&lt;/strong&gt; + the &lt;a href=&#34;http://en.wikipedia.org/wiki/CamelCase&#34;&gt;CamelCased&lt;/a&gt; filename, e.g. a file named &lt;code&gt;auto.your_plugin.php&lt;/code&gt; will contain a class named  &lt;code&gt;zcObserverYourPlugin&lt;/code&gt;.  (For debugging assistance, a myDEBUG*.log file will be generated if a properly-named file is loaded, but the class name doesn&amp;rsquo;t conform to these rules.)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This technique will work so long as your class doesn&amp;rsquo;t have any special requirements on its load point (auto-loaded classes are loaded at point &lt;code&gt;175&lt;/code&gt;, after all other system dependencies are loaded). Most observers won&amp;rsquo;t need to be loaded &amp;ldquo;before&amp;rdquo; all other regular dependencies, so load-point 175 is fine in most cases. If your observer needs to be loaded earlier, then don&amp;rsquo;t use this special naming convention, but instead manual loading, which is described below.   An example of a notifier whose observer should not use auto loading is ZEN_GET_PRODUCTS_STOCK.  This fires from the shopping cart class, which has a load point of 80.  If you need to observe this notifier, you will want to load earlier than 80.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Auto loading has been available on the storefront side since Zen Cart 1.5.3, and on the admin side since Zen Cart 1.5.7.  For versions prior to that you can use the Manually-loaded option below.  Alternately, to backport admin side autoloading to 1.5.6, see &lt;a href=&#34;https://github.com/zencart/zencart/commit/bc195baf258c11b73f29de41020e1c0505e4d462&#34;&gt;this PR&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;changing-a-manually-loaded-observer-to-use-auto-loading&#34;&gt;Changing a Manually-loaded Observer to use Auto Loading&lt;/h3&gt;
&lt;p&gt;The &lt;em&gt;Products Viewed Counter&lt;/em&gt; described &lt;a href=&#34;#update&#34;&gt;above&lt;/a&gt; could provide the same functionality and not need its auto-loader component if the observer-class file was renamed to &lt;code&gt;/includes/classes/observers/auto.products_viewed_counter.php&lt;/code&gt; and its class name was updated to be &lt;code&gt;zcObserverProductsViewedCounter.php&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;manually-loaded-observers&#34;&gt;Manually-loaded Observers&lt;/h3&gt;
&lt;p&gt;For manually-instantiating Observers at customized load-points, you must provide at least &lt;em&gt;&lt;strong&gt;two&lt;/strong&gt;&lt;/em&gt; files in your plugin&amp;rsquo;s distribution to get that class loaded and instantiated:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;/includes/auto_loaders/config.your_plugin.php&lt;/li&gt;
&lt;li&gt;/includes/classes/observers/class.your_plugin.php&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;To load and create an &amp;lsquo;instance&amp;rsquo; of your observer-class so that it is operational, you&amp;rsquo;ll create a file in the Zen Cart &lt;code&gt;/includes/auto_loaders&lt;/code&gt; (or &lt;code&gt;/admin/includes/auto_loaders&lt;/code&gt;) sub-directory to perform those tasks.&lt;/p&gt;
&lt;p&gt;For the example used above, that was the file named &lt;code&gt;/includes/auto_loaders/config.products_viewed_counter.php&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The file contains two auto-load statements:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;An &lt;code&gt;autoType&lt;/code&gt; of &lt;code&gt;class&lt;/code&gt; to load your observer&amp;rsquo;s class-file.&lt;/li&gt;
&lt;li&gt;An &lt;code&gt;autoType&lt;/code&gt; of &lt;code&gt;classInstantiate&lt;/code&gt; to create an instance of your observer-class.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The &amp;rsquo;load-point&amp;rsquo;, in this example &lt;code&gt;190&lt;/code&gt; indicates the &lt;em&gt;relative&lt;/em&gt; position within the auto-loading process at which the auto-load actions are to be performed.  Most observers can safely load at load-point &lt;code&gt;190&lt;/code&gt; or later (after all the base Zen Cart auto-loaders have completed).  See &lt;a href=&#34;#choosing-when-to-load-an-observer&#34;&gt;Choosing When to Load an Observer&lt;/a&gt; for some special cases.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;defined&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;IS_ADMIN_FLAG&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;))&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;die&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;Illegal Access&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;$autoLoadConfig&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;190&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;][]&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;array&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;autoType&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;class&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                              &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// the filename, relative to the `classes` folder:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;                              &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;loadFile&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;DIR_FS_CATALOG&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;DIR_WS_CLASSES&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;observers/class.products_viewed_counter.php&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;$autoLoadConfig&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;190&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;][]&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;array&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;autoType&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;classInstantiate&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                              &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// the name of the class as declared inside the observer class file
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;                              &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;className&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;products_viewed_counter&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                              &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// the name of the global object into which the class is instantiated
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;                              &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;objectName&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;products_viewed_counter&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;advanced-topics&#34;&gt;Advanced Topics&lt;/h2&gt;
&lt;h3 id=&#34;shared-logic-for-multiple-events&#34;&gt;Shared Logic For Multiple Events&lt;/h3&gt;
&lt;p&gt;Given that the Observer class is indeed a class, you can break out your processing logic into many smaller discrete functions for individual purposes. 
This allows you to call that private/protected function from within multiple event-specific functions, without having to duplicate code.
Pairing that with meaningful function names increases readability and comprehension of what&amp;rsquo;s happening where.&lt;/p&gt;
&lt;p&gt;Examples: a function for doing some specific debug-logging logic, called by multiple events. Or a function for parsing/cleaning input data. Or a function for writing specific db updates that happen in multiple scenarios.&lt;/p&gt;
&lt;h3 id=&#34;event-specific-update-methods&#34;&gt;Event-Specific Update Methods&lt;/h3&gt;
&lt;p&gt;Problem: If in one Observer class you attach to a number of different events, a single &lt;code&gt;update&lt;/code&gt; function will fire for all of those events &amp;hellip; but that means it will likely be receiving different function parameters depending on which event was triggered.&lt;/p&gt;
&lt;p&gt;Solution: Your observer&amp;rsquo;s &lt;code&gt;update&lt;/code&gt; method can be split out into multiple functions that are customized based on the notification received, thus also easily interpreting the passed parameters coming from where that notification was triggered.&lt;/p&gt;
&lt;p&gt;So rather than use one &lt;code&gt;update&lt;/code&gt; method, create separate methods to receive each type of event, as follows.&lt;/p&gt;
&lt;p&gt;There are two syntaxes supported for this. The &lt;code&gt;update&lt;/code&gt; method will only be called if neither of these other syntaxes are found:&lt;/p&gt;
&lt;h4 id=&#34;snake_cased-event-name&#34;&gt;snake_cased event name&lt;/h4&gt;
&lt;p&gt;This is supported since v1.5.7.&lt;/p&gt;
&lt;p&gt;If the notifier begins with &lt;code&gt;NOTIFY_&lt;/code&gt; or &lt;code&gt;NOTIFIER_&lt;/code&gt; then your observer class&amp;rsquo;s function can use the same name.&lt;/p&gt;
&lt;p&gt;Example: For a notifier named &lt;code&gt;NOTIFY_PRODUCT_VIEWS_HIT_INCREMENTOR&lt;/code&gt; you could have a function in your observer class named &lt;code&gt;notify_product_views_hit_incrementor()&lt;/code&gt; instead of &lt;code&gt;update()&lt;/code&gt; (and still specify all the same parameters as you would for an &lt;code&gt;update()&lt;/code&gt; function.&lt;/p&gt;
&lt;p&gt;This has the added benefit of being searchable just like the notifier event name (albeit lowercase).&lt;/p&gt;
&lt;p&gt;Alternatively, or for older versions, use the camelCased convention described below:&lt;/p&gt;
&lt;h4 id=&#34;camelcased-event-name&#34;&gt;camelCased event name&lt;/h4&gt;
&lt;p&gt;With this alternative syntax, the &lt;code&gt;update&lt;/code&gt; method&amp;rsquo;s name consists of the word &lt;code&gt;update&lt;/code&gt; followed by the &lt;a href=&#34;http://en.wikipedia.org/wiki/CamelCase&#34;&gt;CamelCased&lt;/a&gt; version of the watched-for notification.  For instance, the Products Viewed Counter described &lt;a href=&#34;#update&#34;&gt;above&lt;/a&gt; could be recoded as an auto-loading, customized-method observer:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;zcObserverProductsViewedCounter&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;base&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;__construct&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000&#34;&gt;$this&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;attach&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$this&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;array&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;NOTIFY_PRODUCT_VIEWS_HIT_INCREMENTOR&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;updateNotifyProductViewsHitIncrementor&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$class&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$eventID&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$products_id&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;defined&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;LEGACY_PRODUCTS_VIEWED_COUNTER&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;LEGACY_PRODUCTS_VIEWED_COUNTER&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;on&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;global&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$db&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000&#34;&gt;$sql&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;UPDATE &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;TABLE_PRODUCTS_DESCRIPTION&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;                    SET products_viewed = products_viewed+1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;                  WHERE products_id = &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$products_id&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;                    AND language_id = &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$_SESSION&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;languages_id&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;                  LIMIT 1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;             &lt;span style=&#34;color:#000&#34;&gt;$db&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;Execute&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$sql&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;generic-formal-parameter-interpretation&#34;&gt;Generic Formal Parameter Interpretation&lt;/h3&gt;
&lt;p&gt;If you choose not to use event-specific &amp;ldquo;update&amp;rdquo; function names, then in order for your Observer to respond to the varying $parameters received when triggered, you will need to do some special treatment based on the &lt;code&gt;$eventID&lt;/code&gt; that was triggered.&lt;/p&gt;
&lt;p&gt;The following approach is a way to trick the update method into &amp;ldquo;interpreting&amp;rdquo; the parameters using a switch statement according to the specific eventID being passed.&lt;/p&gt;
&lt;p&gt;For the procedural-coding thinker, this switch-case approach allows the same code to be used for multiple notifiers if you are also using event-specific methods in the same file.&lt;/p&gt;
&lt;p&gt;Here&amp;rsquo;s an example from the Edit Orders plugin.  Each of the monitored events uses different parameters, so the formal parameters used in the &lt;code&gt;update&lt;/code&gt; function declaration are generic.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;    public function update(&amp;amp;$class, $eventID, $p1, &amp;amp;$p2, &amp;amp;$p3, &amp;amp;$p4, &amp;amp;$p5) 
    {
        switch ($eventID) {
            // -----
            // Triggered during the orders-listing sidebar generation, after the upper button-list has been created.
            //
            // $p1 ... Contains the current $oInfo object, which contains the orders-id.
            // $p2 ... A reference to the current $contents array; the NEXT-TO-LAST element has been updated
            //         with the built-in button list.
            //
            case &amp;#39;NOTIFY_ADMIN_ORDERS_MENU_BUTTONS&amp;#39;: 
                if (is_object($p1)) {
                    $index_to_update = count($p2) - 2;
                    $p2[$index_to_update][&amp;#39;text&amp;#39;] = $this-&amp;gt;addEditOrderButton($p1-&amp;gt;orders_id, $p2[$index_to_update][&amp;#39;text&amp;#39;]);
                }
                break;
      
            // -----
            // Triggered during the orders-listing sidebar generation, after the lower-button-list has been created.
            //
            // $p1 ... Contains the current $oInfo object (could be empty), containing the orders-id.
            // $p2 ... A reference to the current $contents array; the LAST element has been updated
            //         with the built-in button list.
            //
            case &amp;#39;NOTIFY_ADMIN_ORDERS_MENU_BUTTONS_END&amp;#39;:
                if (is_object($p1) &amp;amp;&amp;amp; count($p2) &amp;gt; 0) {
                    $index_to_update = count($p2) - 1;
                    $p2[$index_to_update][&amp;#39;text&amp;#39;] = $this-&amp;gt;addEditOrderButton($p1-&amp;gt;orders_id, $p2[$index_to_update][&amp;#39;text&amp;#39;]);
                }
                break;
                
            // -----
            // Triggered during the orders-listing generation for each order, gives us a chance to add the icon to
            // quickly edit the associated order.
            //
            // $p1 ... An empty array
            // $p2 ... A reference to the current order&amp;#39;s database fields array.
            // $p3 ... A reference to the $show_difference variable, unused by this processing.
            // $p4 ... A reference to the $extra_action_icons variable, which will be augmented with an icon
            //         linking to this order&amp;#39;s EO processing.
            //
            case &amp;#39;NOTIFY_ADMIN_ORDERS_SHOW_ORDER_DIFFERENCE&amp;#39;:
                $p4 .= $this-&amp;gt;createEditOrdersLink($p2[&amp;#39;orders_id&amp;#39;], zen_image(DIR_WS_IMAGES . EO_BUTTON_ICON_DETAILS, EO_ICON_DETAILS), EO_ZC156_FA_ICON, false);
                break; 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Some developers believe this method should not be used since it is less self-documenting than prior methods.  Others prefer it for its shorter function name when compared to the more long-winded camelCase syntax.&lt;/p&gt;
&lt;h2 id=&#34;additional-information&#34;&gt;Additional Information&lt;/h2&gt;
&lt;h3 id=&#34;event-aliasing&#34;&gt;Event Aliasing&lt;/h3&gt;
&lt;p&gt;Sometimes notifier names are changed (where triggered in application code) (because of a typo, for example, or to make them more self-documenting).  When this happens, rather than just remove the old notifier from the code base, the recommended practice since Zen Cart 1.5.7 has been to alias the old name.  This way older code which uses the old notifier name will still work. In some cases it makes perfect sense to fully remove an old notifier call. Use discretion when deciding whether to clean up after yourself or hold on for long-term backward compatibility.&lt;/p&gt;
&lt;p&gt;An example of a notifier name which has been aliased due to a typo is &lt;code&gt;NOTIFIY_ORDER_CART_SUBTOTAL_CALCULATE&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&#34;plugins-which-support-notifier-use&#34;&gt;Plugins which support Notifier Use&lt;/h3&gt;
&lt;p&gt;Some plugins which can be helpful during development when using notifiers include:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.zen-cart.com/downloads.php?do=file&amp;amp;id=2273&#34;&gt;Watching Observers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.zen-cart.com/downloads.php?do=file&amp;amp;id=2260&#34;&gt;Zen Cart Notifier Report&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;information-about-notifiers&#34;&gt;Information about Notifiers&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;A &lt;a href=&#34;/zendocs_test1/dev/code/notifiers_list&#34;&gt;list of notifiers&lt;/a&gt; for the current Zen Cart release.&lt;/li&gt;
&lt;li&gt;The &lt;a href=&#34;/zendocs_test1/dev/code/notifier_report/&#34;&gt;output of the Zen Cart Notifier Report&lt;/a&gt; run against the current release is provided on the docs site for easy reference by developers.&lt;/li&gt;
&lt;li&gt;You may also install the &lt;a href=&#34;https://github.com/lat9/notifier_report&#34;&gt;Notifier Report&lt;/a&gt; on your own site to get the list of notifiers for your version, which could differ from the official list if you have made changes or are not running the current version.&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Dev: PHP Idioms</title>
      <link>/zendocs_test1/dev/code/php_idioms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/zendocs_test1/dev/code/php_idioms/</guid>
      <description>
        
        
        &lt;p&gt;This document is intended to capture PHP changes that some developers may find unclear because they differ from what was done in the past.  Some but not all are driven by PHP8 changes.&lt;/p&gt;
&lt;h2 id=&#34;the-use-of-&#34;&gt;The use of &lt;code&gt;===&lt;/code&gt;:&lt;/h2&gt;
&lt;p&gt;This comparison operator means &amp;ldquo;equal to and of the same type.&amp;rdquo;  It has become more important in PHP8+ which does stricter comparisons.&lt;/p&gt;
&lt;p&gt;See the PHP documentation on &lt;a href=&#34;https://www.php.net/manual/en/language.operators.comparison.php&#34;&gt;Comparison Operators&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h2 id=&#34;the-use-of--1&#34;&gt;The use of &lt;code&gt;??&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;This operator (null coalescing) checks that the first operand exists and is not null.  If so, it returns the first  operand; otherwise, it returns the second operand.&lt;/p&gt;
&lt;p&gt;So&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$enddate = zen_db_input($_REQUEST[&amp;#39;end_date&amp;#39;] ?? date(&amp;#39;Y-m-d&amp;#39;));
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;is the same as:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;if (!empty($_REQUEST[&amp;#39;end_date&amp;#39;])) { 
   $enddate = zen_db_input($_REQUEST[&amp;#39;end_date&amp;#39;]); 
} else {
   $enddate = date(&amp;#39;Y-m-d&amp;#39;);
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;See the PHP documentation on &lt;a href=&#34;https://www.php.net/manual/en/migration70.new-features.php#migration70.new-features.null-coalesce-op&#34;&gt;Null coalescing operator&lt;/a&gt; for more details.&lt;/p&gt;
&lt;h2 id=&#34;missing-php-close-tag--at-the-end-of-a-file&#34;&gt;Missing PHP close tag &lt;code&gt;?&amp;gt;&lt;/code&gt; at the end of a file&lt;/h2&gt;
&lt;p&gt;The close tag &lt;code&gt;?&amp;gt;&lt;/code&gt; is not recommended at the end of a file, and should be left off.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Dev: Product Types</title>
      <link>/zendocs_test1/dev/code/product_types/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/zendocs_test1/dev/code/product_types/</guid>
      <description>
        
        
        &lt;p&gt;FIXME - page needs attention&lt;/p&gt;
&lt;p&gt;A much requested feature in Zen Cart was the ability to have unique information layouts for different types of products. For example a Music Video needs to have different information stored and displayed, compared to say a Garden Bench.&lt;/p&gt;
&lt;p&gt;Previously there has been no easy way for a Zen Cart store user to do this without ripping apart the core code. The Product Type system was designed to help alleviate that problem.&lt;/p&gt;
&lt;p&gt;Throughout this mini-tutorial we will use the Music Product type 
as an example. It is not in anyway meant to be an exhaustive treatise on implementing your own product type, as this will always depend on exactly what you are trying to implement.&lt;/p&gt;
&lt;p&gt;However it should provide enough of an overview to get you started. As ever our support forums at &lt;a href=&#34;https://www.zen-cart.com&#34;&gt;www.zen-cart.com&lt;/a&gt;, are always there to help you when you get stuck.&lt;/p&gt;
&lt;h2 id=&#34;database-schema&#34;&gt;Database Schema&lt;/h2&gt;
&lt;p&gt;The Product Types System uses a number of required, and some @@TODO non-required tables within the Zen Cart database. The required database tables are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PRODUCT_TYPES&lt;/li&gt;
&lt;li&gt;PRODUCT_TYPE_LAYOUT&lt;/li&gt;
&lt;li&gt;GET_TERMS_TO_FILTER&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;product_types&#34;&gt;PRODUCT_TYPES&lt;/h3&gt;
&lt;p&gt;The _PRODUCT_TYPES database is used to track base information relating to the product types currently installed. It consists of 8 fields.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;type_id&lt;/li&gt;
&lt;li&gt;type_name&lt;/li&gt;
&lt;li&gt;type_handler&lt;/li&gt;
&lt;li&gt;type_master_type&lt;/li&gt;
&lt;li&gt;allow_add_to_cart&lt;/li&gt;
&lt;li&gt;default_image&lt;/li&gt;
&lt;li&gt;date_added&lt;/li&gt;
&lt;li&gt;last_modified&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;If you want to add a new product type you need to create a new row in the table. Some sample SQL code is:&lt;/p&gt;
&lt;pre class=&#34;code&#34;&gt; INSERT INTO `product_types` (`type_id`, `type_name`, `type_handler`, `type_master_type`, `allow_add_to_cart`, 
 `default_image`, `date_added`, `last_modified`) VALUES (NULL, &#39;Products - Portrait&#39;, &#39;product_portrait&#39;, &#39;1&#39;, 
 &#39;Y&#39;, , &#39;0001-01-01 00:00:00&#39;, &#39;0001-01-01 00:00:00&#39;);
&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;_type_id_&lt;/code&gt; is an auto_incrementing field and is used to cross reference the type with other Database Tables used by the PTS.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;_type_name_&lt;/code&gt; is user defined, but you should try and stick with the naming conventions that the core team have decided on. For example, we have Products - General for the standard product, and Product - Music for a product type designed for Music CD&amp;rsquo;s. Then we have Document - General for a basic layout for an information only Document, and Document-Product for a Document that can be sold. These names are used in the drop down that appears in the admin product creation pages.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;_type_handler_&lt;/code&gt; again is user defined and is used to build the URL to the code that actually does the work for the product type. It is best to define this similarly to the type_name. For example if the type_name is Product-Music, the type_handler would be product_music. For compatibility across operating systems you should always stick to lower case for the type_handler. More explanation will be given later as to how the type_handler is used to access the unique code for a given product type.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;_type_master_type_&lt;/code&gt; is used to link product types together. This is mainly used if you want to build separate sideboxes to display a category tree of just certain product types. For example the Document types are linked so that we can provide a sidebox that can be used just to navigate categories containing Document Types.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;_allow_add_to_cart_&lt;/code&gt; - provision is made with this field to create product_types that are for information purpose only, and because of that you do not want to allow the shopper to add them to the cart. The basic Document type is a good example of this.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;_default_image_&lt;/code&gt; is reserved for future usage.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;_date_added_&lt;/code&gt; and &lt;code&gt;_last_modified_&lt;/code&gt; are for internal code use only.&lt;/p&gt;
&lt;h3 id=&#34;product_type_layout&#34;&gt;PRODUCT_TYPE_LAYOUT&lt;/h3&gt;
&lt;p&gt;It has always been possible in Zen Cart using the admin interface to decide which elements of a product&amp;rsquo;s information are displayed. Originally this information was saved in the CONFIGURATION table. However as different product types will have differing types of information, we now use a separate table for product types.&lt;/p&gt;
&lt;p&gt;The layout of this table is similar to an entry in the configuration table. The fields are&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;configuration_id&lt;/li&gt;
&lt;li&gt;configuration_title&lt;/li&gt;
&lt;li&gt;configuration_key&lt;/li&gt;
&lt;li&gt;configuration_value&lt;/li&gt;
&lt;li&gt;configuration_description&lt;/li&gt;
&lt;li&gt;product_type_id&lt;/li&gt;
&lt;li&gt;sort_order&lt;/li&gt;
&lt;li&gt;last_modified&lt;/li&gt;
&lt;li&gt;date_added&lt;/li&gt;
&lt;li&gt;use_function&lt;/li&gt;
&lt;li&gt;set_function&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;an example here is an entry for the music product type.&lt;/p&gt;
&lt;pre&gt; INSERT INTO product_type_layout (configuration_title, configuration_key, configuration_value, 
   configuration_description, product_type_id, sort_order, set_function, date_added) 
   VALUES (&#39;Show Record Company&#39;, &#39;SHOW_PRODUCT_MUSIC_INFO_RECORD_COMPANY&#39;, &#39;1&#39;, 
   &#39;Display Record Company on Product Info 0= off 1= on&#39;, &#39;2&#39;, &#39;4&#39;, 
   &#39;zen_cfg_select_drop_down(array(array(\&#39;id\&#39;=&gt;\&#39;1\&#39;, \&#39;text\&#39;=&gt;\&#39;True\&#39;), 
   array(\&#39;id\&#39;=&gt;\&#39;0\&#39;, \&#39;text\&#39;=&gt;\&#39;False\&#39;)), &#39;, now());
&lt;/pre&gt;
&lt;p&gt;This lets the store admin decide whether the Record Company linked to the music product is shown on the product info page. Of course you would need to code the music product info page to use this value e.g.&lt;/p&gt;
&lt;pre&gt;   
if (SHOW_PRODUCT_MUSIC_INFO_RECORD_COMPANY == &#39;1&#39;) {
  ?&amp;gt;
   &amp;lt;tr&amp;gt;
     &amp;lt;td class=&#34;main&#34; align=&#34;center&#34; colspan=&#34;2&#34;&amp;gt;
       &amp;lt;?php echo sprintf(TEXT_RECORD_COMPANY_URL, zen_href_link(FILENAME_REDIRECT, &#39;action=url&amp;goto=&#39; . 
         urlencode($products_record_company_url), &#39;NONSSL&#39;, true, false)); ?&amp;gt;
      &amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
   &amp;lt;? php
     } // SHOW_PRODUCT_MUSIC_INFO_URL
&lt;/pre&gt;
&lt;p&gt;This is just one example, and you should look at the product info code (and associated entries in the PRODUCT_TYPE_LAYOUT table for more examples.&lt;/p&gt;
&lt;h3 id=&#34;get_terms_to_filter&#34;&gt;GET_TERMS_TO_FILTER&lt;/h3&gt;
&lt;p&gt;This table is not strictly part of the core PTS, but is used to handle new filter sideboxes.&lt;/p&gt;
&lt;p&gt;Filter sideboxes are used to filter product lists based on some variables.&lt;/p&gt;
&lt;p&gt;The main example of this is the manufacturers sidebox. This allows you to filter a product lists based on the manufacturer of the product.&lt;/p&gt;
&lt;p&gt;e.g. show all products whose manufacturer is Microsoft.&lt;/p&gt;
&lt;p&gt;The music product type adds two filter sideboxes, Record Company and Music Genre.&lt;/p&gt;
&lt;p&gt;There is only one field in this table.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;get_term_name&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;this is the name of the $_GET variable that is returned by the filter sidebox. The relevance of this will be discussed in more depth when we look at catalog side code for the PTS.&lt;/p&gt;
&lt;h2 id=&#34;admin-code&#34;&gt;Admin Code&lt;/h2&gt;
&lt;p&gt;In previous versions all code for handling adding categories/products was contained within the &lt;em&gt;admin/categories.php&lt;/em&gt; file. To accommodate the PTS this file needs to be split up.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;admin/categories.php&lt;/em&gt; now deals only with displaying and managing the category tree. It also contains the button for adding a new product. On requesting a new product categories.php will call the file [product handler].php. The [product handler] is the name stored in the product_types database table. e.g product_music.php is the admin handler for the Music Type product.&lt;/p&gt;
&lt;p&gt;This handler file is basically a skeleton and in general you can just directly copy the &lt;em&gt;product.php&lt;/em&gt; handler to your handler file. Note you will also have to create a corresponding language file.&lt;/p&gt;
&lt;p&gt;The product handler page then includes a number of needed files.&lt;/p&gt;
&lt;p&gt;The two most important are.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;admin/includes/modules/[handler_name]/collect_info.php&lt;/em&gt; &lt;em&gt;admin/includes/modules/[handler_name]/preview_info.php&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;again [handler name] is the type_handler entry in the product_types table.&lt;/p&gt;
&lt;p&gt;These two files are responsible for actually creating a new entry in the product table and as such will need the most customizing if your product type contains new fields/options for your product type.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;_collect_info.php_&lt;/code&gt; contains the code that is used to collect the product details e.g.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;product name&lt;/li&gt;
&lt;li&gt;product description&lt;/li&gt;
&lt;li&gt;product price&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;_preview_info.php_&lt;/code&gt; is used to preview the created product prior to adding it to the database permanently.&lt;/p&gt;
&lt;p&gt;Within the &lt;em&gt;admin/includes/modules&lt;/em&gt; directories there are an number of other files you can override. By this I mean by adding a file of the same name to your &lt;em&gt;admin/includes/modules/[handler name]/&lt;/em&gt; directory, it will be used in preference.&lt;/p&gt;
&lt;p&gt;Those files are.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;_update_product.php_&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This code is used to update the various tables to actually add the product to the database. You only need to override this file if your product type requires extra fields to be added to the database.&lt;/p&gt;
&lt;p&gt;e.g the Music Type stores Genre Type, and record company in a separate table called product_music_extra, it therefore needs to add code to update.php to make sure information from collect_info.php is added to this table.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;_copy_to_confirm.php_&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This code is used when you ask to copy a product to a?new product. If your product type uses extra tables to store information then you need to add code here to ensure that information is copied to the new product&lt;/p&gt;
&lt;p&gt;e.g. the Music Type adds code here to make sure data in products_music_extra table is copied to the new product.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;_delete_product_confirm.php_&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This code is used when you delete a product. You may want to remove information stored in other tables associated with your product type here.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;_move_product_confirm.php_&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This code is used when moving a product between categories, in general there should be no reason to override this file as moves are done using the product_id. However someone somewhere may have use for it.&lt;/p&gt;
&lt;h2 id=&#34;catalog-code&#34;&gt;Catalog Code&lt;/h2&gt;
&lt;p&gt;The changes needed to support a product type in the catalog code are less onerous than &lt;em&gt;Admin&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;In the main you only need to provide a handler page to show the product_info. To create a new product info page you must first create a new directory _/includes/modules/pages/[handler name]&lt;em&gt;info&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Initially you should copy all of the files contained within the &lt;em&gt;includes/modules/pages/product_info/&lt;/em&gt; directory into your _includes/modules/pages/[handler name]&lt;em&gt;info/&lt;/em&gt; directory.&lt;/p&gt;
&lt;p&gt;Usually the only file you will need to edit within this directory is &lt;em&gt;main_template_var.php&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;e.g. The Music Type adds code here to load information regarding Music genre, Record Company etc. from the &lt;em&gt;product_music_extra&lt;/em&gt; table.&lt;/p&gt;
&lt;p&gt;You then need to create a template for the product info page for your Product Type. The template should be placed in &lt;em&gt;includes/templates/template_default/templates&lt;/em&gt; or alternatively in &lt;em&gt;includes/templates/[your template]/templates&lt;/em&gt; if you want to keep it separate from core code.&lt;/p&gt;
&lt;p&gt;The template file should be called&lt;/p&gt;
&lt;p&gt;&lt;em&gt;tpl&lt;/em&gt;[handler name]&lt;em&gt;info_display.php&lt;/em&gt;, again [handler name] being the same as the entry in the type_handler field of the product_types table.&lt;/p&gt;
&lt;p&gt;You will of course have to adjust the template to include any extra information associated with your Product type.&lt;/p&gt;
&lt;p&gt;One important point. Within the template generally a number of constants are used to decide if a certain element is displayed. For example in the standard product info page, SHOW_PRODUCT_INFO_QUANTITY if set to 1 will display the quantity in stock. These constants are loaded from the database/product_type_layout table.&lt;/p&gt;
&lt;p&gt;It is good practice to create separate constants for each product type within this table. For example the Music type uses SHOW_PRODUCT_MUSIC_INFO_QUANTITY instead of SHOW_PRODUCT_INFO_QUANTITY. This allows admin to set the layouts of different product types separately from each other.&lt;/p&gt;
&lt;h2 id=&#34;filter-side-boxes&#34;&gt;Filter Side Boxes&lt;/h2&gt;
&lt;p&gt;One important addition to the PTS in catalog are sideboxes which can filter a product listing. You may already be familiar with this when using the Manufacturers sidebox. This allows you to restrict a product listing to a specific manufacturer.&lt;/p&gt;
&lt;p&gt;The Music type adds two additional filter sideboxes. These are Music Genre and Record Company. If you look at the code say for the Music genre sidebox in includes/modules/sideboxes/music_genre.php you can see that the ID for the music genre selected will be passed in the url as a $_GET variable called music_genre_name. In order for this to be processed correctly we need an automatic way of registering these filter terms. As mentioned earlier in the section on databases you can do this by adding the name of the filter variable to the &lt;em&gt;get_terms_to_filter&lt;/em&gt; database table.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Dev: Program Flow</title>
      <link>/zendocs_test1/dev/code/program_flow/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/zendocs_test1/dev/code/program_flow/</guid>
      <description>
        
        
        &lt;p&gt;A storefront visit in Zen Cart follows an MVC style approach, albeit largely based on procedural code. The files involved are processed roughly in the following order. At various points there may be &lt;a href=&#34;/zendocs_test1/dev/code/inclusion/&#34;&gt;auto-loading&lt;/a&gt; of certain files in a certain directory matching a prescribed naming convention, or all files automatically executed according to certain rules for that location.&lt;/p&gt;
&lt;p&gt;If debugging the program flow, there is a useful constant available in &lt;code&gt;/includes/application_top.php&lt;/code&gt; which will show the file loading order in the browser output if set to true:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;define&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;DEBUG_AUTOLOAD&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Locations where an &amp;ldquo;override&amp;rdquo; can be used are noted with a ► symbol.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;/index.php&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;/includes/application_top&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/includes/local/configure.php&lt;/code&gt;, &lt;code&gt;/includes/configure.php&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/includes/defined_paths.php&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;►&lt;code&gt;/includes/extra_configures/*.php&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;►&lt;code&gt;/includes/autoloaders/config.xxxx.php&lt;/code&gt; files (the &lt;a href=&#34;/zendocs_test1/dev/code/init_system/&#34;&gt;Init System&lt;/a&gt;) loads things in the order defined inside the files, which follows essentially the following order:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Connect to database and setup caching&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/includes/filenames.php&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/includes/database_tables.php&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;►&lt;code&gt;/includes/extra_datafiles/*.php&lt;/code&gt; (usually to load extra db tablenames or custom defines)&lt;/li&gt;
&lt;li&gt;Read configuration keys from database (as set in Admin)&lt;/li&gt;
&lt;li&gt;Start gzip compression if enabled&lt;/li&gt;
&lt;li&gt;Load functions
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;functions_general&lt;/code&gt; and most other functions files, including &lt;code&gt;html_output&lt;/code&gt;, &lt;code&gt;functions_email&lt;/code&gt;, etc.&lt;/li&gt;
&lt;li&gt;►&lt;code&gt;/includes/functions/extra_functions/*.php&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Set up and start session if valid
&lt;ul&gt;
&lt;li&gt;Check for cookie support&lt;/li&gt;
&lt;li&gt;Check to see if the customer is a spider/robot, and act accordingly&lt;/li&gt;
&lt;li&gt;SSL and IP validation checks&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Instantiate &lt;code&gt;shopping_cart&lt;/code&gt; class&lt;/li&gt;
&lt;li&gt;Sanitize and validate URL parameters&lt;/li&gt;
&lt;li&gt;Language Selection&lt;/li&gt;
&lt;li&gt;►&lt;code&gt;/includes/languages/LANGUAGE/extra_definitions&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Template Selection&lt;/li&gt;
&lt;li&gt;Setup currencies&lt;/li&gt;
&lt;li&gt;Enable navigation history&lt;/li&gt;
&lt;li&gt;Load MessageStack&lt;/li&gt;
&lt;li&gt;Check for “Down For Maintenance” or “Customer Not Authorized yet” status
&lt;ul&gt;
&lt;li&gt;►&lt;code&gt;/includes/init/includes/init_customer_auth.php&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Process Cart Content Adds/Update, File Uploads&lt;/li&gt;
&lt;li&gt;Process specialized functions
&lt;ul&gt;
&lt;li&gt;Who’s online detection and logging&lt;/li&gt;
&lt;li&gt;Activate and Expire any time-scheduled Banners, Specials, Features, Salemaker, Upcoming Products&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Calculate category/product path (cPath)&lt;/li&gt;
&lt;li&gt;Load category-tree class, and prepare the categories-sidebox contents&lt;/li&gt;
&lt;li&gt;Start the breadcrumb class and add current page components to it&lt;/li&gt;
&lt;li&gt;Start &lt;a href=&#34;/zendocs_test1/dev/code/notifiers/&#34;&gt;observer/notifier&lt;/a&gt; infrastructure&lt;/li&gt;
&lt;li&gt;Calculate and display any system error messages if relevant&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;/includes/modules/pages/PAGE/header_php►*.php&lt;/code&gt; files:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;►loads &lt;code&gt;/languages/LANGUAGE/TEMPLATE/PAGENAME.php&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;update the breadcrumbs appropriate for this page&lt;/li&gt;
&lt;li&gt;(occasionally calls a specific &lt;code&gt;tpl_xxxx.php&lt;/code&gt; file, although usually things carry on through the following steps first)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;►&lt;code&gt;/includes/templates/common/html_header.php&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;HTML&amp;gt;&amp;lt;HEAD&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/includes/modules/meta_tags.php&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;display canonical metatag links based on language etc&lt;/li&gt;
&lt;li&gt;►&lt;code&gt;/includes/templates/TEMPLATE/CSS/style*.css&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;load jQuery from jQuery CDN&lt;/li&gt;
&lt;li&gt;&lt;code&gt;modules/pages/PAGE/jscript*.js&lt;/code&gt; for static &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; snippets&lt;/li&gt;
&lt;li&gt;&lt;code&gt;modules/pages/PAGE/jscript*.php&lt;/code&gt; for dynamic or conditional &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; code&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;/HEAD&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;/includes/templates/common/main_template_vars.php&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Prepares the content for the “center” section of the page (doesn’t display until done processing)&lt;/li&gt;
&lt;li&gt;Content is prepared from either of:
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;includes/modules/pages/PAGE/main_template_vars.php&lt;/code&gt; (► and any additional files it calls)&lt;/li&gt;
&lt;li&gt;►&lt;code&gt;includes/templates/TEMPLATE/templates/tpl_PAGE_default.php&lt;/code&gt; (this is usually also called by &lt;code&gt;main_template_vars.php&lt;/code&gt; from the line above)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;►&lt;code&gt;/includes/templates/jscript/on_load/*.js&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;loads any customized code for the “onload” parameter of the &lt;body&gt; tag which gets output in &lt;code&gt;tpl_main_page&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;►&lt;code&gt;/includes/templates/TEMPLATE/common/tpl_main_page&lt;/code&gt; (The following order is from template_default, as an example; some templates may alter this)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;BODY&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;output Banner Area 1&lt;/li&gt;
&lt;li&gt;►&lt;code&gt;/TEMPLATE/common/tpl_header.php&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;Output Header rows (logo, nav bar, search box, etc)&lt;/li&gt;
&lt;li&gt;Output Banner Area 2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;output Left sideboxes  (&lt;code&gt;/modules/column_left&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;output “body content” from &lt;code&gt;main_template_vars&lt;/code&gt; or &lt;code&gt;tpl_page_default&lt;/code&gt; above
&lt;ul&gt;
&lt;li&gt;Output Breadcrumbs and  Banner Area 3, and any MessageStack messages&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;output Banner Area 4&lt;/li&gt;
&lt;li&gt;output Right sideboxes  (&lt;code&gt;/modules/column_right&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;►&lt;code&gt;/templates/common/tpl_footer.php&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;Footer Navigation bar (including ez-pages tagged for footer)&lt;/li&gt;
&lt;li&gt;Display IP Address&lt;/li&gt;
&lt;li&gt;utput Banner Area 5&lt;/li&gt;
&lt;li&gt;►Display footer text (from language file)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Output Banner Area 6&lt;/li&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;/HTML&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;/includes/application_bottom.php&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;close SESSION, end GZIP compression and dump buffered data to the screen, if applicable.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
    </item>
    
    <item>
      <title>Dev: Querying the Database</title>
      <link>/zendocs_test1/dev/code/database_querying/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/zendocs_test1/dev/code/database_querying/</guid>
      <description>
        
        
        &lt;p&gt;Making a database query involves preparing a SQL statement, sanitizing any parameters to be passed to it, and submitting it for a result.
The result can then be inspected for the kind of response received.&lt;/p&gt;
&lt;h2 id=&#34;preparing-a-query&#34;&gt;Preparing a Query&lt;/h2&gt;
&lt;p&gt;A typical query is built like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;$sql&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;SELECT p.products_id, p.products_model, pd.products_name
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;        FROM &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;TABLE_PRODUCTS&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34; p
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;        LEFT JOIN &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;TABLE_PRODUCTS_DESCRIPTION&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34; pd USING (products_id)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;        WHERE pd.languages_id = :lang_id
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;        LIMIT 10&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Note the inline inclusion of the TABLE_PRODUCTS and TABLE_PRODUCTS_DESCRIPTION constants. These are used so that the appropriate DB_PREFIX is automatically included if set.&lt;/p&gt;
&lt;p&gt;Also note the use of tablename aliases &lt;code&gt;p&lt;/code&gt; and &lt;code&gt;pd&lt;/code&gt;. These are placed after the tablename to avoid having to use the full tablename constants repeatedly every time a table needs to be mentioned.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;:lang_id&lt;/code&gt; placeholder is used for sanitization, as described next:&lt;/p&gt;
&lt;h2 id=&#34;sanitizing-inputs&#34;&gt;Sanitizing Inputs&lt;/h2&gt;
&lt;p&gt;A query should never just blindly use any received data. It should always sanitize the input variable before using it in a query.&lt;/p&gt;
&lt;p&gt;We use &lt;code&gt;bindVars&lt;/code&gt; for this.&lt;/p&gt;
&lt;p&gt;Following the code example above, the next line of code would be:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;global&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$db&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;$sql&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$db&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;bindVars&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$sql&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;:lang_id&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$_SESSION&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;languages_id&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;integer&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Here, the &lt;code&gt;$sql&lt;/code&gt; variable is reset to the parsed response of the bindVars call.&lt;/p&gt;
&lt;p&gt;The first parameter is &lt;code&gt;$sql&lt;/code&gt; which is the query from the code example above.&lt;/p&gt;
&lt;p&gt;The second parameter is the placeholder. Notice the use of the &lt;code&gt;:&lt;/code&gt; prefix. The string here must be unique and only appear in the query once, as &lt;code&gt;bindVars&lt;/code&gt; does a search-and-replace (&lt;code&gt;str_replace&lt;/code&gt;) of this value using the next parameter:&lt;/p&gt;
&lt;p&gt;The third parameter is the value to be substituted in place of the second parameter.&lt;/p&gt;
&lt;p&gt;The fourth parameter is the kind of sanitization rule to apply while substituting.&lt;/p&gt;
&lt;p&gt;Valid sanitization rules are:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;rule&lt;/th&gt;
&lt;th&gt;meaning&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;integer&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;casts to integer (ignores all fractions, and treats it as 0 if the value is not numeric)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;float&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;casts to a float, or an empty/zero/falsey value is cast to &lt;code&gt;0&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;string&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;returns a quote-wrapped string after sanitizing by MySQL&amp;rsquo;s escaping rules (note: string &lt;code&gt;NULL&lt;/code&gt; is treated as a literal &lt;code&gt;null&lt;/code&gt; response).&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;stringIgnoreNull&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;quote-wrapped string which ignores if the string is &lt;code&gt;NULL&lt;/code&gt;, sanitized using MySQL escaping rules&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;noquotestring&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;no quote-wrapping version of &lt;code&gt;stringIgnoreNull&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;currency&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;alias of &lt;code&gt;stringIgnoreNull&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;date&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;same as &lt;code&gt;string&lt;/code&gt; but treats both upper-and-lowercase &lt;code&gt;NULL&lt;/code&gt; and &lt;code&gt;null&lt;/code&gt; as &lt;code&gt;null&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;passthru&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;no treatment; this should be avoided; only suitable for data already sanitized by a different means&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;alternative-to-bindvars&#34;&gt;Alternative to BindVars&lt;/h3&gt;
&lt;p&gt;For very simple queries where you want to handle the casting manually, or just treat the value as a string, you may use &lt;code&gt;zen_db_input()&lt;/code&gt; or &lt;code&gt;$db-&amp;gt;prepare_input()&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;$sql&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;SELECT p.products_id, p.products_model, pd.products_name
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;        FROM &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;TABLE_PRODUCTS&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34; p
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;        LEFT JOIN &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;TABLE_PRODUCTS_DESCRIPTION&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34; pd USING (products_id)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;        WHERE pd.languages_id = &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;zen_db_input&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$_POST&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;user_language_id&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;])&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;        LIMIT 10&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;NOTE:&lt;/strong&gt; &lt;code&gt;zen_db_input()&lt;/code&gt; is an alias for &lt;code&gt;$db-&amp;gt;prepare_input()&lt;/code&gt;, which runs &lt;code&gt;mysqli_real_escape_string()&lt;/code&gt; on its argument.&lt;/p&gt;
&lt;h2 id=&#34;running-the-query&#34;&gt;Running the Query&lt;/h2&gt;
&lt;p&gt;The prepared query can now be executed using:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;$results&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$db&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;Execute&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$sql&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;parsing-the-query-response&#34;&gt;Parsing the Query Response&lt;/h2&gt;
&lt;h3 id=&#34;checking-for-empty-result-set&#34;&gt;Checking for Empty Result Set&lt;/h3&gt;
&lt;p&gt;If there are no results found, then &lt;code&gt;$results-&amp;gt;EOF&lt;/code&gt; will be &lt;code&gt;true&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The RecordCount will also be &lt;code&gt;0&lt;/code&gt;. See below.&lt;/p&gt;
&lt;h3 id=&#34;checking-for-number-of-records-found&#34;&gt;Checking for Number of Records Found&lt;/h3&gt;
&lt;p&gt;The number of records retrieved from a &lt;code&gt;SELECT&lt;/code&gt; query can be determined with:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;$records&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$results&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;RecordCount&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;checking-number-of-affected-rows&#34;&gt;Checking Number of Affected Rows&lt;/h3&gt;
&lt;p&gt;If the query was an &lt;code&gt;INSERT&lt;/code&gt;, &lt;code&gt;UPDATE&lt;/code&gt;, &lt;code&gt;REPLACE&lt;/code&gt; or &lt;code&gt;DELETE&lt;/code&gt; then the number of affected rows can be determined using:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;$affected_rows&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$db&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;affectedRows&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;reading-the-new-record-id&#34;&gt;Reading the New Record ID&lt;/h3&gt;
&lt;p&gt;If the query was an &lt;code&gt;INSERT&lt;/code&gt; statement on an &lt;code&gt;auto-incrementing&lt;/code&gt; table, then the inserted record ID number can be determined using:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;$inserted_record_id&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$db&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;insert_ID&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;reading-the-retrieved-records&#34;&gt;Reading the Retrieved Records&lt;/h3&gt;
&lt;p&gt;If the query was a &lt;code&gt;SELECT&lt;/code&gt; statement, then the results will be in an &lt;code&gt;Iterable&lt;/code&gt; &lt;code&gt;queryFactoryResult&lt;/code&gt; object.&lt;/p&gt;
&lt;p&gt;These results can be read in two ways:&lt;/p&gt;
&lt;h4 id=&#34;single-row-responses&#34;&gt;Single Row Responses&lt;/h4&gt;
&lt;p&gt;If the result is a single record, simply read it from the &lt;code&gt;-&amp;gt;fields[&#39;column_name&#39;]&lt;/code&gt; array:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;$prod_name&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$results&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;fields&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;products_name&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;multiple-row-responses&#34;&gt;Multiple Row Responses&lt;/h4&gt;
&lt;p&gt;If there are multiple rows returned, the most efficient way to iterate through the results is using a &lt;code&gt;foreach()&lt;/code&gt; loop:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;foreach($results as $result) {
  echo &amp;#39;Product ID: &amp;#39; . $result[&amp;#39;products_id&amp;#39;] . &amp;#39;: &amp;#39; . $result[&amp;#39;products_name&amp;#39;] . &amp;#34;&amp;lt;br&amp;gt;\n&amp;#34;;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;This has worked since Zen Cart 1.5.5.&lt;/p&gt;
&lt;p&gt;An older more verbose syntax exists in legacy code. The following accomplishes the same as the &lt;code&gt;foreach&lt;/code&gt; above:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;while (!$results-&amp;gt;EOF) {
  echo &amp;#39;Product ID: &amp;#39; . $result-&amp;gt;fields[&amp;#39;products_id&amp;#39;] . &amp;#39;: &amp;#39; . $result-&amp;gt;fields[&amp;#39;products_name&amp;#39;] . &amp;#34;&amp;lt;br&amp;gt;\n&amp;#34;;
  $results-&amp;gt;MoveNext();
}
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id=&#34;advanced&#34;&gt;Advanced&lt;/h1&gt;
&lt;h2 id=&#34;randomized-query-responses&#34;&gt;Randomized Query Responses&lt;/h2&gt;
&lt;p&gt;If you wish to have the query_factory pick a random record from the query result, two steps are required:&lt;/p&gt;
&lt;p&gt;a) instead of &lt;code&gt;$db-&amp;gt;Execute()&lt;/code&gt;, call &lt;code&gt;$db-&amp;gt;ExecuteRandomMulti()&lt;/code&gt; when running the query&lt;/p&gt;
&lt;p&gt;b) instead of &lt;code&gt;$db-&amp;gt;MoveNext()&lt;/code&gt;, call &lt;code&gt;$db-&amp;gt;MoveNextRandom()&lt;/code&gt; when iterating through the results&lt;/p&gt;
&lt;p&gt;In core code this is typically done in sideboxes and centerboxes when showing things like Specials and Featured Products, so that the customer doesn&amp;rsquo;t always see only the most recently edited items. It&amp;rsquo;s also helpful for search engines to not always see exactly the same content on every visit.&lt;/p&gt;
&lt;p&gt;Also note that randomizing the data like this means the page cannot be cached, so if you&amp;rsquo;re using external caching systems to index your page (like Cloudflare), you may not see the randomized results change on every page hit due to stale cache.&lt;/p&gt;
&lt;h2 id=&#34;sql-injection&#34;&gt;SQL Injection&lt;/h2&gt;
&lt;p&gt;Your best defense against potential SQL injection attacks is to sanitize inputs as noted above.  Simply using a POSTed variable in a query is not safe!&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$query = $db-&amp;gt;Execute(&amp;#34;UPDATE &amp;#34; . TABLE_CUSTOMERS . &amp;#34; SET customers_firstname = &amp;#39;&amp;#34; . $_POST[&amp;#39;name&amp;#39;] . &amp;#34;&amp;#39;&amp;#34;;    // DO NOT DO THIS! 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Instead, use &lt;code&gt;bindVars&lt;/code&gt; as described above.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$query = $db-&amp;gt;Execute(&amp;#34;UPDATE &amp;#34; . TABLE_CUSTOMERS . &amp;#34; SET customers_firstname = :name:&amp;#34;;    // DO THIS INSTEAD! 
$query = $db-&amp;gt;bindVars($query, &amp;#39;:name:&amp;#39;, $_POST[&amp;#39;name&amp;#39;], &amp;#39;string&amp;#39;);
&lt;/code&gt;&lt;/pre&gt;
      </description>
    </item>
    
    <item>
      <title>Dev: Sorting an Admin menu</title>
      <link>/zendocs_test1/dev/code/sorting_menu/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/zendocs_test1/dev/code/sorting_menu/</guid>
      <description>
        
        
        &lt;p&gt;By default, the list under each of the main admin menu titles  (Configuration, Catalog, Modules etc&amp;hellip;) are ordered according to each menu items &lt;code&gt;sort_order&lt;/code&gt; in the database (which is set on initial installation). However, it is possible to alpha-sort these entries which may be more desirable as they often become extended with Plugins.&lt;/p&gt;
&lt;p&gt;Since Zen Cart 1.5.7, this functionality has been controlled in the admin main language file, eg.  &lt;code&gt;admin/includes/languages/english.php&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;by the constant&lt;/p&gt;
&lt;p&gt;&lt;code&gt;MENU_CATEGORIES_TO_SORT_BY_NAME&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;by adding a comma-separated list of the menu_key values (as defined in the admin_menus database table)&lt;/p&gt;
&lt;p&gt;eg:
&lt;code&gt;&#39;configuration,catalog,modules,customers,taxes,localization,reports,tools,gv,acccess,extras&#39;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Additionally under the Configuration menu (My Store, Minimum values etc,), the list in each submenu can also be alphasorted.&lt;/p&gt;
&lt;h3 id=&#34;zen-cart-157&#34;&gt;Zen Cart 1.5.7&lt;/h3&gt;
&lt;p&gt;In release 1.5.7, to sort a Configuration submenu listing (such as My Store) by name, &lt;code&gt;admin/configuration.php&lt;/code&gt; must be modified manually to check for the &lt;code&gt;gID&lt;/code&gt; of the desired menu and alter the SELECT query at the start of the tbody, to &lt;code&gt;ORDER BY configuration_title&lt;/code&gt; instead of &lt;code&gt;ORDER BY sort_order&lt;/code&gt; for that menu.&lt;/p&gt;
&lt;h3 id=&#34;zen-cart-158&#34;&gt;Zen Cart 1.5.8&lt;/h3&gt;
&lt;p&gt;In release 1.5.8 and forward, the new constant &lt;code&gt;CONFIGURATION_MENU_ENTRIES_TO_SORT_BY_NAME&lt;/code&gt; is used to determine which submenus are sorted by adding a comma-separated list of the configuration IDs (&lt;code&gt;gID&lt;/code&gt;) of each submenu, 
e.g. &amp;lsquo;1,2,3,4&amp;rsquo; etc&lt;/p&gt;
&lt;p&gt;The gID of each submenu can be ascertained by hovering the cursor over each submenu item and noting the number of the final parameter gID of the link,&lt;/p&gt;
&lt;p&gt;eg. for Minimum Values:  https://MYWEBSITE/MY_ADMIN/index.php?cmd=configuration&amp;amp;&lt;strong&gt;gID=2&lt;/strong&gt;&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Dev: Modules</title>
      <link>/zendocs_test1/dev/code/modules/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/zendocs_test1/dev/code/modules/</guid>
      <description>
        
        
        
      </description>
    </item>
    
    <item>
      <title>Dev: View Builders</title>
      <link>/zendocs_test1/dev/code/view_builders/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/zendocs_test1/dev/code/view_builders/</guid>
      <description>
        
        
        &lt;p&gt;These are a set of classes used to aid the rapid development of 
pages/views that display tabular data.&lt;/p&gt;
&lt;p&gt;Initially they are meant to aid in the building of admin pages,
however some aspects will also be able to be used catalog side as well.&lt;/p&gt;
&lt;p&gt;The structure of view builder classes and the data formats they use allow 
for much easier integration with plugins that need to add extra columns
or actions in admin pages.&lt;/p&gt;

      </description>
    </item>
    
    <item>
      <title>Dev: </title>
      <link>/zendocs_test1/dev/code/data_validation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/zendocs_test1/dev/code/data_validation/</guid>
      <description>
        
        
        &lt;h2 id=&#34;weight-10&#34;&gt;ee&amp;mdash;
title: Configuration Data Validation - About
description: How is data validation done for configuration values? 
category: code
type: codepage
weight: 10&lt;/h2&gt;
&lt;p&gt;Fields in the configuration table have self-contained validation instructions in the &lt;code&gt;val_function&lt;/code&gt; field.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;val_function&lt;/code&gt; field is described in JSON format, with an error message in case validation fails, the id of the validation to be performed, and a set of options for validation.  This syntax is based on the calling conventions for &lt;a href=&#34;https://www.php.net/manual/en/function.filter-var.php&#34;&gt;filter_var&lt;/a&gt;.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;{
  &amp;#34;error&amp;#34;:&amp;#34;TEXT_MAX_PREVIEW&amp;#34;,
  &amp;#34;id&amp;#34;:&amp;#34;FILTER_VALIDATE_INT&amp;#34;,
  &amp;#34;options&amp;#34;:{&amp;#34;options&amp;#34;:{&amp;#34;min_range&amp;#34;:0}}
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The list of &lt;code&gt;id&lt;/code&gt; values and possible options for each are shown in the PHP documentation on &lt;a href=&#34;https://www.php.net/manual/en/filter.filters.validate.php&#34;&gt;filters&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&#34;adding-validation-to-a-custom-config&#34;&gt;Adding validation to a custom config&lt;/h3&gt;
&lt;p&gt;Suppose you want to do a check in your cart of an order&amp;rsquo;s value, and only offer PayPal as an option for orders under a certain value.  If you hardcode this threshold, you&amp;rsquo;ll have to change and re-deploy code any time you want to change it.  Storing it in the configuration table is a better idea.  So you add it:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;INSERT INTO configuration (configuration_title, configuration_key, configuration_value, configuration_description, configuration_group_id, sort_order, last_modified, date_added, use_function, set_function) VALUES (&amp;#39;Max PayPal&amp;#39;,&amp;#39;MAX_PAYPAL&amp;#39;,&amp;#39;4000&amp;#39;,&amp;#39;Enter max total which can use PayPal.  Must be &amp;amp;lt; $10K, per PayPal rules.&amp;#39;,1,100,NULL,now(),NULL,NULL)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;But then you decide you want to add validation, so that this value is ranged between 4000 and 9999.&lt;/p&gt;
&lt;p&gt;To do this, you&amp;rsquo;d use the SQL statement&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;UPDATE configuration SET val_function = 
&amp;#39;{&amp;#34;error&amp;#34;:&amp;#34;TEXT_MAX_PAYPAL&amp;#34;,&amp;#34;id&amp;#34;:&amp;#34;FILTER_VALIDATE_INT&amp;#34;,&amp;#34;options&amp;#34;:{&amp;#34;options&amp;#34;:{&amp;#34;min_range&amp;#34;:4000, &amp;#34;max_range&amp;#34;:9999}}}&amp;#39;
WHERE configuration_key = &amp;#39;MAX_PAYPAL&amp;#39;; 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Where &lt;code&gt;TEXT_MAX_PAYPAL&lt;/code&gt; is defined in a globally accessible admin language file like &lt;code&gt;admin/includes/languages/english/extra_definitions/my_errors.php&lt;/code&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;?php
define(&amp;#39;TEXT_MAX_PAYPAL&amp;#39;,&amp;#39;Max PayPal must be in the range 4000-9999&amp;#39;); 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now when an administrator attempts to set it outside this range, an error will be shown at the top of the admin screen like this:&lt;/p&gt;
&lt;img src=&#34;/zendocs_test1/images/validation_error.png&#34; alt=&#34;Zen Cart admin data validation error&#34; width=&#34;50%&#34; /&gt;
&lt;br&gt;&lt;br&gt;
&lt;h3 id=&#34;validating-module-data&#34;&gt;Validating Module Data&lt;/h3&gt;
&lt;p&gt;As of Zen Cart 1.5.7, you can also perform validation on fields in your shipping, payment and order total modules.&lt;/p&gt;
&lt;p&gt;Use the same &lt;code&gt;val_function&lt;/code&gt; format.  The error defines need to be global (not just local to your module).  For convenience, the following strings are provided for common validations (integer &amp;gt;= 0 and floating point value &amp;gt;= 0):&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;define(&amp;#39;TEXT_POSITIVE_INT&amp;#39;,&amp;#39;%s must be an integer greater than or equal to 0&amp;#39;);
define(&amp;#39;TEXT_POSITIVE_FLOAT&amp;#39;,&amp;#39;%s must be a decimal greater than or equal to 0&amp;#39;); 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Note that they take a parameter, which is passed in by the core; it&amp;rsquo;s the name of the setting being validated.  This is important for modules because unlike configuration values, multiple settings are done at once.&lt;/p&gt;
&lt;p&gt;If you prefer, define an error string of your own and place it in a file in &lt;code&gt;admin/includes/languages/english/extra_definitions&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;See the &lt;code&gt;flat&lt;/code&gt; shipping module for an example.&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;val_function&lt;/code&gt; field was added in Zen Cart 1.5.6, but not widely used until Zen Cart 1.5.7.&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
